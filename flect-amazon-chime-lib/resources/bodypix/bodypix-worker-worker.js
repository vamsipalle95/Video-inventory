/*! For license information please see bodypix-worker-worker.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}("undefined"!=typeof self?self:this,(function(){return(()=>{var e={1247:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BodyPix:()=>ye,load:()=>ve,blurBodyPart:()=>ze,drawBokehEffect:()=>Oe,drawMask:()=>De,drawPixelatedMask:()=>Me,toColoredPartMask:()=>Ee,toMask:()=>_e,PART_CHANNELS:()=>Le,flipPoseHorizontal:()=>ae,resizeAndPadTo:()=>ee,scaleAndCropToInputTensorShape:()=>te,version:()=>Be});var r=n(8433),a=n(4933),s=function(e,t){return(s=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function i(e,t){function n(){this.constructor=e}s(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}var o=function(){return(o=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e}).apply(this,arguments)};function u(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function l(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}function c(e){var t=e.shape[2],n=(0,r.argMax)(e,2),a=(0,r.reshape)(n,[-1]);return(0,r.oneHot)(a,t)}function d(e,t){return(0,r.tidy)((function(){return(0,r.cast)((0,r.greater)(e,(0,r.scalar)(t)),"int32")}))}function p(e,t){var n=t.shape,a=n[0],s=n[1],i=n[2];return(0,r.tidy)((function(){var n=c(t),o=(0,r.expandDims)((0,r.range)(0,i,1,"int32"),1),u=(0,r.cast)((0,r.matMul)(n,o),"int32"),l=(0,r.reshape)(u,[a,s]),d=(0,r.add)(l,(0,r.scalar)(1,"int32"));return(0,r.sub)(function(e,t){return(0,r.mul)(e,t)}(d,e),(0,r.scalar)(1,"int32"))}))}function h(e){var t=e.shape,n=t[0],a=t[1],s=t[2];return(0,r.tidy)((function(){var t=c(e),i=(0,r.expandDims)((0,r.range)(0,s,1,"int32"),1),o=(0,r.cast)((0,r.matMul)(t,i),"int32");return(0,r.reshape)(o,[n,a])}))}var f=function(){function e(e,t){this.model=e,this.outputStride=t;var n=this.model.inputs[0].shape;r.util.assert(-1===n[1]&&-1===n[2],(function(){return"Input shape ["+n[1]+", "+n[2]+"] must both be equal to or -1"}))}return e.prototype.predict=function(e){var t=this;return(0,r.tidy)((function(){var n=t.preprocessInput((0,r.cast)(e,"float32")),a=(0,r.expandDims)(n,0),s=t.model.predict(a).map((function(e){return(0,r.squeeze)(e,[0])})),i=t.nameOutputResults(s);return{heatmapScores:(0,r.sigmoid)(i.heatmap),offsets:i.offsets,displacementFwd:i.displacementFwd,displacementBwd:i.displacementBwd,segmentation:i.segmentation,partHeatmaps:i.partHeatmaps,longOffsets:i.longOffsets,partOffsets:i.partOffsets}}))},e.prototype.dispose=function(){this.model.dispose()},e}(),m=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.preprocessInput=function(e){return(0,r.tidy)((function(){return(0,r.sub)((0,r.div)(e,127.5),1)}))},t.prototype.nameOutputResults=function(e){return{offsets:e[0],segmentation:e[1],partHeatmaps:e[2],longOffsets:e[3],heatmap:e[4],displacementFwd:e[5],displacementBwd:e[6],partOffsets:e[7]}},t}(f),g=["nose","leftEye","rightEye","leftEar","rightEar","leftShoulder","rightShoulder","leftElbow","rightElbow","leftWrist","rightWrist","leftHip","rightHip","leftKnee","rightKnee","leftAnkle","rightAnkle"],y=g.length,b=g.reduce((function(e,t,n){return e[t]=n,e}),{});function x(e,t,n){var r=e[0],a=e[1],s=t[0],i=t[1],o=n.top,u=n.bottom;return[i/(n.left+n.right+a),s/(o+u+r)]}function v(e,t,n,r){return{y:r.get(e,t,n),x:r.get(e,t,n+y)}}function w(e,t,n){var r=v(e.heatmapY,e.heatmapX,e.id,n),a=r.y,s=r.x;return{x:e.heatmapX*t+s,y:e.heatmapY*t+a}}function k(e,t,n){return e<t?t:e>n?n:e}function I(e,t){return{x:e.x+t.x,y:e.y+t.y}}function S(e,t,n){void 0===n&&(n=.3);for(var r=0,a=0,s=0;s<e.length;s++)t.keypoints[s].score>n&&(a+=1,r+=Math.pow(e[s].x-t.keypoints[s].position.x,2)+Math.pow(e[s].y-t.keypoints[s].position.y,2));return 0===a?r=1/0:r/=a,r}function N(e,t,n,r,a,s,i){for(var o=i[0],u=i[1],l=n(e),c=l.y*r+l.x,d=a[y*(2*c)+t],p=a[y*(2*c+1)+t],h=e.y+d,f=e.x+p,m=0;m<s;m++){h=Math.min(h,o-1);var g=n({x:f=Math.min(f,u-1),y:h}),b=g.y*r+g.x;h+=d=a[y*(2*b)+t],f+=p=a[y*(2*b+1)+t]}return{x:f,y:h}}function T(e,t,n,r,a,s,i,o,u,l){for(var c=a[0],d=a[1],p=s[0],h=s[1],f=o[0],m=o[1],g=[],y=function(e){return function(e,t,n,r){var a=t[0],s=t[1],i=n[0],o=n[1],u=Math.round(((a+e.y+1)*o-1)/r);return{x:Math.round(((s+e.x+1)*i-1)/r),y:u}}(e,[c,d],[p,h],u)},b=0;b<r;b++){var x=N(e,b,y,i,t,l,[f,m]);g.push(x)}for(var v=-1,w=1/0,k=0;k<n.length;k++){var I=S(g,n[k]);I<w&&(v=k,w=I)}return v}function C(e,t){var n=e[0],r=e[1];return[Math.round((r-1)/t+1),Math.round((n-1)/t+1)]}function _(e,t,n,a,s,i,o,u,l,c,d){for(var p=o[0],h=o[1],f=e.shape,m=f[0],g=f[1],b=t.shape.slice(0,2),v=b[0],w=b[1],k=(0,r.reshape)(t,[v,w,2,y]),I=new Float32Array(d*y*3).fill(0),S=0;S<n.length;S++)for(var N=S*y*3,T=n[S],C=0;C<y;C++){var _=T.keypoints[C],A=N+3*C;I[A]=_.score,I[A+1]=_.position.y,I[A+2]=_.position.x}var E=x([a,s],[p,h],u),$=E[0],R=E[1],F=(0,r.tensor)(I,[d,y,3]),D=u.top,M=u.left,O={variableNames:["segmentation","longOffsets","poses"],outputShape:[m,g],userCode:"\n    int convertToPositionInOutput(int pos, int pad, float scale, int stride) {\n      return round(((float(pos + pad) + 1.0) * scale - 1.0) / float(stride));\n    }\n\n    float convertToPositionInOutputFloat(\n        int pos, int pad, float scale, int stride) {\n      return ((float(pos + pad) + 1.0) * scale - 1.0) / float(stride);\n    }\n\n    float dist(float x1, float y1, float x2, float y2) {\n      return pow(x1 - x2, 2.0) + pow(y1 - y2, 2.0);\n    }\n\n    float sampleLongOffsets(float h, float w, int d, int k) {\n      float fh = fract(h);\n      float fw = fract(w);\n      int clH = int(ceil(h));\n      int clW = int(ceil(w));\n      int flH = int(floor(h));\n      int flW = int(floor(w));\n      float o11 = getLongOffsets(flH, flW, d, k);\n      float o12 = getLongOffsets(flH, clW, d, k);\n      float o21 = getLongOffsets(clH, flW, d, k);\n      float o22 = getLongOffsets(clH, clW, d, k);\n      float o1 = mix(o11, o12, fw);\n      float o2 = mix(o21, o22, fw);\n      return mix(o1, o2, fh);\n    }\n\n    int findNearestPose(int h, int w) {\n      float prob = getSegmentation(h, w);\n      if (prob < 1.0) {\n        return -1;\n      }\n\n      // Done(Tyler): convert from output space h/w to strided space.\n      float stridedH = convertToPositionInOutputFloat(\n        h, "+D+", "+R+", "+i+");\n      float stridedW = convertToPositionInOutputFloat(\n        w, "+M+", "+$+", "+i+");\n\n      float minDist = 1000000.0;\n      int iMin = -1;\n      for (int i = 0; i < "+d+"; i++) {\n        float curDistSum = 0.0;\n        int numKpt = 0;\n        for (int k = 0; k < "+y+"; k++) {\n          float dy = sampleLongOffsets(stridedH, stridedW, 0, k);\n          float dx = sampleLongOffsets(stridedH, stridedW, 1, k);\n\n          float y = float(h) + dy;\n          float x = float(w) + dx;\n\n          for (int s = 0; s < "+l+"; s++) {\n            int yRounded = round(min(y, float("+(a-1)+")));\n            int xRounded = round(min(x, float("+(s-1)+")));\n\n            float yStrided = convertToPositionInOutputFloat(\n              yRounded, "+D+", "+R+", "+i+");\n            float xStrided = convertToPositionInOutputFloat(\n              xRounded, "+M+", "+$+", "+i+");\n\n            float dy = sampleLongOffsets(yStrided, xStrided, 0, k);\n            float dx = sampleLongOffsets(yStrided, xStrided, 1, k);\n\n            y = y + dy;\n            x = x + dx;\n          }\n\n          float poseScore = getPoses(i, k, 0);\n          float poseY = getPoses(i, k, 1);\n          float poseX = getPoses(i, k, 2);\n          if (poseScore > "+c+") {\n            numKpt = numKpt + 1;\n            curDistSum = curDistSum + dist(x, y, poseX, poseY);\n          }\n        }\n        if (numKpt > 0 && curDistSum / float(numKpt) < minDist) {\n          minDist = curDistSum / float(numKpt);\n          iMin = i;\n        }\n      }\n      return iMin;\n    }\n\n    void main() {\n        ivec2 coords = getOutputCoords();\n        int nearestPose = findNearestPose(coords[0], coords[1]);\n        setOutput(float(nearestPose));\n      }\n  "};return(0,r.backend)().compileAndRun(O,[e,k,F])}function A(){return"webgl"===(0,r.getBackend)()}function E(e,t,n,a,s,i,o,c,d,p,h,f){var m=o[0],g=o[1];return void 0===d&&(d=.2),void 0===p&&(p=8),void 0===h&&(h=.3),void 0===f&&(f=10),u(this,void 0,void 0,(function(){var o,u,y,b,v;return l(this,(function(l){switch(l.label){case 0:return o=n.filter((function(e){return e.score>=d})),A()?(y=(0,r.tidy)((function(){var n=_(e,t,o,a,s,i,[m,g],c,p,h,f),u=(0,r.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype);return o.map((function(e,t){return function(e,t){return(0,r.tidy)((function(){return(0,r.cast)((0,r.equal)(e,(0,r.scalar)(t)),"int32")}))}(u,t)}))})),[4,Promise.all(y.map((function(e){return e.data()})))]):[3,2];case 1:return u=l.sent(),y.forEach((function(e){return e.dispose()})),[3,5];case 2:return[4,e.data()];case 3:return b=l.sent(),[4,t.data()];case 4:v=l.sent(),u=function(e,t,n,r,a,s,i,o,u,l){var c=i[0],d=i[1];void 0===l&&(l=5);for(var p=n.map((function(e){return new Uint8Array(r*a).fill(0)})),h=o.top,f=o.left,m=x([r,a],[c,d],o),g=m[0],y=m[1],b=C([c,d],s)[0],v=0;v<r;v+=1)for(var w=0;w<a;w+=1){var k=v*a+w;if(1===e[k]){var I=T({x:w,y:v},t,n,l,[h,f],[g,y],b,[r,a],s,u);I>=0&&(p[I][k]=1)}}return p}(b,v,o,a,s,i,[m,g],c,p),l.label=5;case 5:return[2,u.map((function(e,t){return{data:e,pose:o[t],width:s,height:a}}))]}}))}))}function $(e,t,n,a,s,i,o,c,d,p,h,f,m){var g=c[0],y=c[1];return void 0===p&&(p=.2),void 0===h&&(h=8),void 0===f&&(f=.3),void 0===m&&(m=10),u(this,void 0,void 0,(function(){var u,c,b,v,w,k;return l(this,(function(l){switch(l.label){case 0:return u=a.filter((function(e){return e.score>=p})),A()?(b=(0,r.tidy)((function(){var a=_(e,t,u,s,i,o,[g,y],d,h,f,m),l=(0,r.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype);return u.map((function(e,t){return function(e,t,n){return(0,r.tidy)((function(){return(0,r.sub)((0,r.mul)((0,r.cast)((0,r.equal)(e,(0,r.scalar)(n)),"int32"),(0,r.add)(t,1)),1)}))}(l,n,t)}))})),[4,Promise.all(b.map((function(e){return e.data()})))]):[3,2];case 1:return c=l.sent(),b.forEach((function(e){return e.dispose()})),[3,6];case 2:return[4,e.data()];case 3:return v=l.sent(),[4,t.data()];case 4:return w=l.sent(),[4,n.data()];case 5:k=l.sent(),c=function(e,t,n,r,a,s,i,o,u,l,c){var d=o[0],p=o[1];void 0===c&&(c=5);for(var h=r.map((function(e){return new Int32Array(a*s).fill(-1)})),f=u.top,m=u.left,g=x([a,s],[d,p],u),y=g[0],b=g[1],v=C([d,p],i)[0],w=0;w<a;w+=1)for(var k=0;k<s;k+=1){var I=w*s+k;if(1===e[I]){var S=T({x:k,y:w},t,r,c,[f,m],[y,b],v,[a,s],i,l);S>=0&&(h[S][I]=n[I])}}return h}(v,w,k,u,s,i,o,[g,y],d,h),l.label=6;case 6:return[2,c.map((function(e,t){return{pose:u[t],data:e,height:s,width:i}}))]}}))}))}function R(e){return Math.floor(e/2)}[["leftHip","leftShoulder"],["leftElbow","leftShoulder"],["leftElbow","leftWrist"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["rightHip","rightShoulder"],["rightElbow","rightShoulder"],["rightElbow","rightWrist"],["rightHip","rightKnee"],["rightKnee","rightAnkle"],["leftShoulder","rightShoulder"],["leftHip","rightHip"]].map((function(e){var t=e[0],n=e[1];return[b[t],b[n]]}));var F=function(){function e(e,t){this.priorityQueue=new Array(e),this.numberOfElements=-1,this.getElementValue=t}return e.prototype.enqueue=function(e){this.priorityQueue[++this.numberOfElements]=e,this.swim(this.numberOfElements)},e.prototype.dequeue=function(){var e=this.priorityQueue[0];return this.exchange(0,this.numberOfElements--),this.sink(0),this.priorityQueue[this.numberOfElements+1]=null,e},e.prototype.empty=function(){return-1===this.numberOfElements},e.prototype.size=function(){return this.numberOfElements+1},e.prototype.all=function(){return this.priorityQueue.slice(0,this.numberOfElements+1)},e.prototype.max=function(){return this.priorityQueue[0]},e.prototype.swim=function(e){for(;e>0&&this.less(R(e),e);)this.exchange(e,R(e)),e=R(e)},e.prototype.sink=function(e){for(;2*e<=this.numberOfElements;){var t=2*e;if(t<this.numberOfElements&&this.less(t,t+1)&&t++,!this.less(e,t))break;this.exchange(e,t),e=t}},e.prototype.getValueAt=function(e){return this.getElementValue(this.priorityQueue[e])},e.prototype.less=function(e,t){return this.getValueAt(e)<this.getValueAt(t)},e.prototype.exchange=function(e,t){var n=this.priorityQueue[e];this.priorityQueue[e]=this.priorityQueue[t],this.priorityQueue[t]=n},e}();function D(e,t,n,r,a,s){for(var i=s.shape,o=i[0],u=i[1],l=!0,c=Math.max(n-a,0),d=Math.min(n+a+1,o),p=c;p<d;++p){for(var h=Math.max(r-a,0),f=Math.min(r+a+1,u),m=h;m<f;++m)if(s.get(p,m,e)>t){l=!1;break}if(!l)break}return l}var M=[["nose","leftEye"],["leftEye","leftEar"],["nose","rightEye"],["rightEye","rightEar"],["nose","leftShoulder"],["leftShoulder","leftElbow"],["leftElbow","leftWrist"],["leftShoulder","leftHip"],["leftHip","leftKnee"],["leftKnee","leftAnkle"],["nose","rightShoulder"],["rightShoulder","rightElbow"],["rightElbow","rightWrist"],["rightShoulder","rightHip"],["rightHip","rightKnee"],["rightKnee","rightAnkle"]].map((function(e){var t=e[0],n=e[1];return[b[t],b[n]]})),O=M.map((function(e){return e[1]})),z=M.map((function(e){return e[0]}));function L(e,t,n,r){return{y:k(Math.round(e.y/t),0,n-1),x:k(Math.round(e.x/t),0,r-1)}}function B(e,t,n,r,a,s,i,o){void 0===o&&(o=2);for(var u=r.shape,l=u[0],c=u[1],d=function(e,t,n){var r=n.shape[2]/2;return{y:n.get(t.y,t.x,e),x:n.get(t.y,t.x,r+e)}}(e,L(t.position,s,l,c),i),p=I(t.position,d),h=0;h<o;h++){var f=L(p,s,l,c),m=v(f.y,f.x,n,a);p=I({x:f.x*s,y:f.y*s},{x:m.x,y:m.y})}var y=L(p,s,l,c),b=r.get(y.y,y.x,n);return{position:p,part:g[n],score:b}}function P(e,t,n,r,a,s){var i=t.shape[2],o=O.length,u=new Array(i),l=e.part,c=e.score,d=w(l,r,n);u[l.id]={score:c,part:g[l.id],position:d};for(var p=o-1;p>=0;--p){var h=O[p],f=z[p];u[h]&&!u[f]&&(u[f]=B(p,u[h],f,t,n,r,s))}for(p=0;p<o;++p)h=z[p],f=O[p],u[h]&&!u[f]&&(u[f]=B(p,u[h],f,t,n,r,a));return u}function V(e,t,n,r){var a=n.x,s=n.y;return e.some((function(e){var n=e.keypoints[r].position;return function(e,t,n,r){var a=n-e,s=r-t;return a*a+s*s}(s,a,n.y,n.x)<=t}))}function W(e,t,n){return n.reduce((function(n,r,a){var s=r.position,i=r.score;return V(e,t,s,a)||(n+=i),n}),0)/n.length}function U(e,t,n,r,a,s,i,o){void 0===i&&(i=.5),void 0===o&&(o=20);for(var u=[],l=function(e,t,n){for(var r=n.shape,a=r[0],s=r[1],i=r[2],o=new F(a*s*i,(function(e){return e.score})),u=0;u<a;++u)for(var l=0;l<s;++l)for(var c=0;c<i;++c){var d=n.get(u,l,c);d<e||D(c,d,u,l,1,n)&&o.enqueue({score:d,part:{heatmapY:u,heatmapX:l,id:c}})}return o}(i,0,e),c=o*o;u.length<s&&!l.empty();){var d=l.dequeue();if(!V(u,c,w(d.part,a,t),d.part.id)){var p=P(d,e,t,a,n,r),h=W(u,c,p);u.push({keypoints:p,score:h})}}return u}var H,G=[-123.15,-115.9,-103.06],q=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.preprocessInput=function(e){return(0,r.add)(e,G)},t.prototype.nameOutputResults=function(e){var t=e[0],n=e[1],r=e[2],a=e[3],s=e[4],i=e[5];return{offsets:s,segmentation:e[6],partHeatmaps:i,longOffsets:a,heatmap:r,displacementFwd:n,displacementBwd:t,partOffsets:e[7]}},t}(f),j="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/resnet50/",X="https://storage.googleapis.com/tfjs-models/savedmodel/bodypix/mobilenet/";function K(e){if("undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof OffscreenCanvas&&e instanceof OffscreenCanvas||"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)return function(e){if("offsetHeight"in e&&0!==e.offsetHeight&&"offsetWidth"in e&&0!==e.offsetWidth)return[e.offsetHeight,e.offsetWidth];if(null!=e.height&&null!=e.width)return[e.height,e.width];throw new Error("HTMLImageElement must have height and width attributes set.")}(e);if("undefined"!=typeof ImageData&&e instanceof ImageData)return[e.height,e.width];if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)return function(e){return e.hasAttribute("height")&&e.hasAttribute("width")?[e.height,e.width]:[e.videoHeight,e.videoWidth]}(e);if(e instanceof r.Tensor)return[e.shape[0],e.shape[1]];throw new Error("error: Unknown input type: "+e+".")}function Y(e,t){return function(e,t){return(e-1)%t==0}(e,t)?e:Math.floor(e/t)*t+1}var Q={low:"low",medium:"medium",high:"high",full:"full"},Z=((H={})[Q.low]=.25,H[Q.medium]=.5,H[Q.high]=.75,H[Q.full]=1,H);function J(e,t,n){var a=n[0],s=n[1],i=function(e){if("string"==typeof e){var t=Z[e];return r.util.assert("number"==typeof t,(function(){return"string value of inputResolution must be one of "+Object.values(Q).join(",")+" but was "+e+"."})),t}return r.util.assert("number"==typeof e&&e<=2&&e>=.1,(function(){return"inputResolution must be a string or number between 0.1 and 2, but was "+e})),e}(e);return[Y(a*i,t),Y(s*i,t)]}function ee(e,t,n){var a=t[0],s=t[1];void 0===n&&(n=!1);var i,o,u,l,c,d,p=e.shape,h=p[0],f=p[1]/h;if(f>s/a){i=s;var m=a-(o=Math.ceil(i/f));u=0,l=0,c=Math.floor(m/2),d=a-(o+c)}else{o=a;var g=s-(i=Math.ceil(a*f));u=Math.floor(g/2),l=s-(i+u),c=0,d=0}return{resizedAndPadded:(0,r.tidy)((function(){var t;return t=n?r.image.resizeBilinear((0,r.reverse)(e,1),[o,i]):r.image.resizeBilinear(e,[o,i]),(0,r.pad3d)(t,[[c,d],[u,l],[0,0]])})),paddedBy:[[c,d],[u,l]]}}function te(e,t,n,a,s){var i=t[0],o=t[1],u=n[0],l=n[1],c=a[0],d=c[0],p=c[1],h=a[1],f=h[0],m=h[1];return void 0===s&&(s=!1),(0,r.tidy)((function(){var t=r.image.resizeBilinear(e,[u,l],!0);return s&&(t=(0,r.sigmoid)(t)),function(e,t,n){var a=t[0],s=t[1],i=n[0],o=i[0],u=i[1],l=n[1],c=l[0],d=l[1];return(0,r.tidy)((function(){var t=(0,r.expandDims)(e);return(0,r.squeeze)(r.image.cropAndResize(t,[[o/(a+o+u-1),c/(s+c+d-1),(o+a-1)/(a+o+u-1),(c+s-1)/(s+c+d-1)]],[0],[a,s]),[0])}))}(t,[i,o],[[d,p],[f,m]])}))}function ne(e,t){var n=t[0],a=t[1],s=K(e),i=s[0],o=s[1],u=a/n,l=[0,0,0,0],c=l[0],d=l[1],p=l[2],h=l[3];return o/i<u?(c=0,d=0,p=Math.round(.5*(u*i-o)),h=Math.round(.5*(u*i-o))):(c=Math.round(.5*(1/u*o-i)),d=Math.round(.5*(1/u*o-i)),p=0,h=0),{resized:(0,r.tidy)((function(){var t=function(e){return e instanceof r.Tensor?e:r.browser.fromPixels(e)}(e);return t=(0,r.pad3d)(t,[[c,d],[p,h],[0,0]]),r.image.resizeBilinear(t,[n,a])})),padding:{top:c,left:p,right:h,bottom:d}}}function re(e){return u(this,void 0,void 0,(function(){return l(this,(function(t){return[2,Promise.all(e.map((function(e){return e.buffer()})))]}))}))}function ae(e,t){return{score:e.score,keypoints:e.keypoints.map((function(e){var n=e.score,r=e.part,a=e.position;return{score:n,part:r,position:{x:t-1-a.x,y:a.y}}}))}}function se(e,t,n,r,a){var s=t[0],i=t[1],o=n[0],u=n[1],l=function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),1===n&&1===t&&0===r&&0===a?e:e.map((function(e){return function(e,t,n,r,a){return void 0===r&&(r=0),void 0===a&&(a=0),{score:e.score,keypoints:e.keypoints.map((function(e){var s=e.score,i=e.part,o=e.position;return{score:s,part:i,position:{x:o.x*n+a,y:o.y*t+r}}}))}}(e,t,n,r,a)}))}(e,(s+r.top+r.bottom)/o,(i+r.left+r.right)/u,-r.top,-r.left);return a?function(e,t){return t<=0?e:e.map((function(e){return ae(e,t)}))}(l,i):l}var ie=!0,oe=!1,ue={architecture:"MobileNetV1",outputStride:16,quantBytes:4,multiplier:.75},le=["MobileNetV1","ResNet50"],ce={MobileNetV1:[8,16,32],ResNet50:[32,16]},de={MobileNetV1:[.5,.75,1],ResNet50:[1]},pe=[1,2,4],he={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20},fe={flipHorizontal:!1,internalResolution:"medium",segmentationThreshold:.7,maxDetections:10,scoreThreshold:.4,nmsRadius:20,minKeypointScore:.3,refineSteps:10};function me(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".")}function ge(e){var t=e.segmentationThreshold,n=e.maxDetections,r=e.scoreThreshold,a=e.nmsRadius,s=e.minKeypointScore,i=e.refineSteps;if(t<0||t>1)throw new Error("segmentationThreshold "+t+". Should be in range [0.0, 1.0]");if(n<=0)throw new Error("Invalid maxDetections "+n+". Should be > 0");if(r<0||r>1)throw new Error("Invalid scoreThreshold "+r+". Should be in range [0.0, 1.0]");if(a<=0)throw new Error("Invalid nmsRadius "+a+".");if(s<0||s>1)throw new Error("Invalid minKeypointScore "+s+".Should be in range [0.0, 1.0]");if(i<=0||i>20)throw new Error("Invalid refineSteps "+i+".Should be in range [1, 20]")}var ye=function(){function e(e){this.baseModel=e}return e.prototype.predictForPersonSegmentation=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForPersonSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,partHeatmapLogits:t.partHeatmaps,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd}},e.prototype.predictForMultiPersonInstanceSegmentationAndPart=function(e){var t=this.baseModel.predict(e);return{segmentLogits:t.segmentation,longOffsets:t.longOffsets,heatmapScores:t.heatmapScores,offsets:t.offsets,displacementFwd:t.displacementFwd,displacementBwd:t.displacementBwd,partHeatmaps:t.partHeatmaps}},e.prototype.segmentPersonActivation=function(e,t,n){var a=this;void 0===n&&(n=.5);var s=K(e),i=s[0],o=s[1],u=J(t,this.baseModel.outputStride,[i,o]),l=ne(e,u),c=l.resized,p=l.padding,h=(0,r.tidy)((function(){var e=a.predictForPersonSegmentation(c),t=e.segmentLogits,s=e.heatmapScores,u=e.offsets,l=e.displacementFwd,h=e.displacementBwd,f=c.shape,m=f[0],g=f[1],y=te(t,[i,o],[m,g],[[p.top,p.bottom],[p.left,p.right]],ie);return{segmentation:d((0,r.squeeze)(y),n),heatmapScores:s,offsets:u,displacementFwd:l,displacementBwd:h}})),f=h.segmentation,m=h.heatmapScores,g=h.offsets,y=h.displacementFwd,b=h.displacementBwd;return c.dispose(),{segmentation:f,heatmapScores:m,offsets:g,displacementFwd:y,displacementBwd:b,padding:p,internalResolutionHeightAndWidth:u}},e.prototype.segmentPerson=function(e,t){return void 0===t&&(t=he),u(this,void 0,void 0,(function(){var n,r,a,s,i,u,c,d,p,h,f,m,g,y,b,x,v,w;return l(this,(function(l){switch(l.label){case 0:return me(t=o(o({},he),t)),n=this.segmentPersonActivation(e,t.internalResolution,t.segmentationThreshold),r=n.segmentation,a=n.heatmapScores,s=n.offsets,i=n.displacementFwd,u=n.displacementBwd,c=n.padding,d=n.internalResolutionHeightAndWidth,p=r.shape,h=p[0],f=p[1],[4,r.data()];case 1:return m=l.sent(),r.dispose(),[4,re([a,s,i,u])];case 2:return g=l.sent(),y=g[0],b=g[1],x=g[2],v=g[3],w=se(w=U(y,b,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[h,f],d,c,oe),a.dispose(),s.dispose(),i.dispose(),u.dispose(),[2,{height:h,width:f,data:m,allPoses:w}]}}))}))},e.prototype.segmentMultiPerson=function(e,t){return void 0===t&&(t=fe),u(this,void 0,void 0,(function(){var n,a,s,i,u,c,p,h,f,m,g,y,b,x,v,w,k,I,S,N,T,C=this;return l(this,(function(l){switch(l.label){case 0:return ge(t=o(o({},fe),t)),n=K(e),a=n[0],s=n[1],i=J(t.internalResolution,this.baseModel.outputStride,[a,s]),u=ne(e,i),c=u.resized,p=u.padding,h=(0,r.tidy)((function(){var e,n=C.predictForMultiPersonInstanceSegmentationAndPart(c),o=n.segmentLogits,u=n.longOffsets,l=n.heatmapScores,h=n.offsets,f=n.displacementFwd,m=n.displacementBwd,g=te(o,[a,s],i,[[p.top,p.bottom],[p.left,p.right]],ie);return e=u,{segmentation:d((0,r.squeeze)(g),t.segmentationThreshold),longOffsets:e,heatmapScoresRaw:l,offsetsRaw:h,displacementFwdRaw:f,displacementBwdRaw:m}})),f=h.segmentation,m=h.longOffsets,g=h.heatmapScoresRaw,y=h.offsetsRaw,b=h.displacementFwdRaw,x=h.displacementBwdRaw,[4,re([g,y,b,x])];case 1:return v=l.sent(),w=v[0],k=v[1],I=v[2],S=v[3],N=se(N=U(w,k,I,S,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[a,s],i,p,oe),[4,E(f,m,N,a,s,this.baseModel.outputStride,i,p,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return T=l.sent(),c.dispose(),f.dispose(),m.dispose(),g.dispose(),y.dispose(),b.dispose(),x.dispose(),[2,T]}}))}))},e.prototype.segmentPersonPartsActivation=function(e,t,n){var a=this;void 0===n&&(n=.5);var s=K(e),i=s[0],o=s[1],u=J(t,this.baseModel.outputStride,[i,o]),l=ne(e,u),c=l.resized,h=l.padding,f=(0,r.tidy)((function(){var e=a.predictForPersonSegmentationAndPart(c),t=e.segmentLogits,s=e.partHeatmapLogits,u=e.heatmapScores,l=e.offsets,f=e.displacementFwd,m=e.displacementBwd,g=c.shape,y=g[0],b=g[1],x=te(t,[i,o],[y,b],[[h.top,h.bottom],[h.left,h.right]],ie),v=te(s,[i,o],[y,b],[[h.top,h.bottom],[h.left,h.right]],ie);return{partSegmentation:p(d((0,r.squeeze)(x),n),v),heatmapScores:u,offsets:l,displacementFwd:f,displacementBwd:m}})),m=f.partSegmentation,g=f.heatmapScores,y=f.offsets,b=f.displacementFwd,x=f.displacementBwd;return c.dispose(),{partSegmentation:m,heatmapScores:g,offsets:y,displacementFwd:b,displacementBwd:x,padding:h,internalResolutionHeightAndWidth:u}},e.prototype.segmentPersonParts=function(e,t){return void 0===t&&(t=he),u(this,void 0,void 0,(function(){var n,r,a,s,i,u,c,d,p,h,f,m,g,y,b,x,v,w;return l(this,(function(l){switch(l.label){case 0:return me(t=o(o({},he),t)),n=this.segmentPersonPartsActivation(e,t.internalResolution,t.segmentationThreshold),r=n.partSegmentation,a=n.heatmapScores,s=n.offsets,i=n.displacementFwd,u=n.displacementBwd,c=n.padding,d=n.internalResolutionHeightAndWidth,p=r.shape,h=p[0],f=p[1],[4,r.data()];case 1:return m=l.sent(),r.dispose(),[4,re([a,s,i,u])];case 2:return g=l.sent(),y=g[0],b=g[1],x=g[2],v=g[3],w=se(w=U(y,b,x,v,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[h,f],d,c,oe),a.dispose(),s.dispose(),i.dispose(),u.dispose(),[2,{height:h,width:f,data:m,allPoses:w}]}}))}))},e.prototype.segmentMultiPersonParts=function(e,t){return void 0===t&&(t=fe),u(this,void 0,void 0,(function(){var n,a,s,i,u,c,p,f,m,g,y,b,x,v,w,k,I,S,N,T,C,_,A=this;return l(this,(function(l){switch(l.label){case 0:return ge(t=o(o({},fe),t)),n=K(e),a=n[0],s=n[1],i=J(t.internalResolution,this.baseModel.outputStride,[a,s]),u=ne(e,i),c=u.resized,p=u.padding,f=(0,r.tidy)((function(){var e=A.predictForMultiPersonInstanceSegmentationAndPart(c),n=e.segmentLogits,o=e.longOffsets,u=e.heatmapScores,l=e.offsets,f=e.displacementFwd,m=e.displacementBwd,g=e.partHeatmaps,y=te(n,[a,s],i,[[p.top,p.bottom],[p.left,p.right]],ie),b=te(g,[a,s],i,[[p.top,p.bottom],[p.left,p.right]],ie),x=o;return{segmentation:d((0,r.squeeze)(y),t.segmentationThreshold),longOffsets:x,heatmapScoresRaw:u,offsetsRaw:l,displacementFwdRaw:f,displacementBwdRaw:m,partSegmentation:h(b)}})),m=f.segmentation,g=f.longOffsets,y=f.heatmapScoresRaw,b=f.offsetsRaw,x=f.displacementFwdRaw,v=f.displacementBwdRaw,w=f.partSegmentation,[4,re([y,b,x,v])];case 1:return k=l.sent(),I=k[0],S=k[1],N=k[2],T=k[3],C=se(C=U(I,S,N,T,this.baseModel.outputStride,t.maxDetections,t.scoreThreshold,t.nmsRadius),[a,s],i,p,oe),[4,$(m,g,w,C,a,s,this.baseModel.outputStride,i,p,t.scoreThreshold,t.refineSteps,t.minKeypointScore,t.maxDetections)];case 2:return _=l.sent(),c.dispose(),m.dispose(),g.dispose(),y.dispose(),b.dispose(),x.dispose(),v.dispose(),w.dispose(),[2,_]}}))}))},e.prototype.dispose=function(){this.baseModel.dispose()},e}();function be(e){return u(this,void 0,void 0,(function(){var t,n,s,i,o,u;return l(this,(function(l){switch(l.label){case 0:if(t=e.outputStride,n=e.quantBytes,s=e.multiplier,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return i=function(e,t,n){var r={1:"100",.75:"075",.5:"050"},a="model-stride"+e+".json";return 4===n?X+"float/"+r[t]+"/"+a:X+"quant"+n+"/"+r[t]+"/"+a}(t,s,n),[4,(0,a.YL)(e.modelUrl||i)];case 1:return o=l.sent(),u=new m(o,t),[2,new ye(u)]}}))}))}function xe(e){return u(this,void 0,void 0,(function(){var t,n,s,i,o;return l(this,(function(u){switch(u.label){case 0:if(t=e.outputStride,n=e.quantBytes,null==r)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this\n        model.");return s=function(e,t){var n="model-stride"+e+".json";return 4===t?j+"float/"+n:j+"quant"+t+"/"+n}(t,n),[4,(0,a.YL)(e.modelUrl||s)];case 1:return i=u.sent(),o=new q(i,t),[2,new ye(o)]}}))}))}function ve(e){return void 0===e&&(e=ue),u(this,void 0,void 0,(function(){return l(this,(function(t){return"ResNet50"===(e=function(e){if(null==(e=e||ue).architecture&&(e.architecture="MobileNetV1"),le.indexOf(e.architecture)<0)throw new Error("Invalid architecture "+e.architecture+". Should be one of "+le);if(null==e.outputStride&&(e.outputStride=16),ce[e.architecture].indexOf(e.outputStride)<0)throw new Error("Invalid outputStride "+e.outputStride+". Should be one of "+ce[e.architecture]+" for architecture "+e.architecture+".");if(null==e.multiplier&&(e.multiplier=1),de[e.architecture].indexOf(e.multiplier)<0)throw new Error("Invalid multiplier "+e.multiplier+". Should be one of "+de[e.architecture]+" for architecture "+e.architecture+".");if(null==e.quantBytes&&(e.quantBytes=4),pe.indexOf(e.quantBytes)<0)throw new Error("Invalid quantBytes "+e.quantBytes+". Should be one of "+pe+" for architecture "+e.architecture+".");return e}(e)).architecture?[2,xe(e)]:"MobileNetV1"===e.architecture?[2,be(e)]:[2,null]}))}))}var we={};function ke(e,t,n,r){var a=e.width,s=e.height,i=t.width,o=t.height;if(a!==i||s!==o)throw new Error("error: dimensions must match. "+n+" has dimensions "+a+"x"+s+", "+r+" has dimensions "+i+"x"+o)}function Ie(e){var t=e.getContext("2d");t.scale(-1,1),t.translate(-e.width,0)}function Se(e,t,n){e.globalCompositeOperation=n,e.drawImage(t,0,0)}function Ne(e){return we[e]||(we[e]=function(){if("undefined"!=typeof document)return document.createElement("canvas");if("undefined"!=typeof OffscreenCanvas)return new OffscreenCanvas(0,0);throw new Error("Cannot create a canvas in this context")}()),we[e]}function Te(e,t,n){var r=Ne(n);return 0===t?function(e,t){var n=e.width,r=e.height;t.width=n,t.height=r,t.getContext("2d").drawImage(e,0,0,n,r)}(e,r):function(e,t,n){var r=e.height,a=e.width,s=n.getContext("2d");n.width=a,n.height=r,s.clearRect(0,0,a,r),s.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?function(e,t,n){for(var r=e.getContext("2d"),a=0,s=1/(2*Math.PI*5*5),i=n<3?1:2,o=-n;o<=n;o+=i)for(var u=-n;u<=n;u+=i)a+=s*Math.exp(-(u*u+o*o)/50);for(o=-n;o<=n;o+=i)for(u=-n;u<=n;u+=i)r.globalAlpha=s*Math.exp(-(u*u+o*o)/50)/a*n,r.drawImage(t,u,o);r.globalAlpha=1}(n,e,t):(s.filter="blur("+t+"px)",s.drawImage(e,0,0,a,r)),s.restore()}(e,t,r),r}function Ce(e,t){var n=Ne(t);return function(e,t){t.width=e.width,t.height=e.height,t.getContext("2d").putImageData(e,0,0)}(e,n),n}function _e(e,t,n,r,a){if(void 0===t&&(t={r:0,g:0,b:0,a:0}),void 0===n&&(n={r:0,g:0,b:0,a:255}),void 0===r&&(r=!1),void 0===a&&(a=[1]),Array.isArray(e)&&0===e.length)return null;var s,i=(s=Array.isArray(e)?e:[e])[0],o=i.width,u=i.height,l=new Uint8ClampedArray(o*u*4);function c(e,t,n,r,a,s){void 0===s&&(s={r:0,g:255,b:255,a:255});for(var i=-a;i<=a;i++)for(var o=-a;o<=a;o++)if(0!==i&&0!==o){var u=(t+i)*r+(n+o);e[4*u+0]=s.r,e[4*u+1]=s.g,e[4*u+2]=s.b,e[4*u+3]=s.a}}function d(e,t,n,r,a,s){void 0===a&&(a=[1]),void 0===s&&(s=1);for(var i=0,o=-s;o<=s;o++)for(var u=function(s){if(0!==o&&0!==s){var u=(t+o)*r+(n+s);a.some((function(t){return t===e[u]}))||(i+=1)}},l=-s;l<=s;l++)u(l);return i>0}for(var p=0;p<u;p+=1)for(var h=function(e){var i=p*o+e;l[4*i+0]=n.r,l[4*i+1]=n.g,l[4*i+2]=n.b,l[4*i+3]=n.a;for(var h=function(n){if(a.some((function(e){return e===s[n].data[i]}))){l[4*i]=t.r,l[4*i+1]=t.g,l[4*i+2]=t.b,l[4*i+3]=t.a;var h=d(s[n].data,p,e,o,a);r&&p-1>=0&&p+1<u&&e-1>=0&&e+1<o&&h&&c(l,p,e,o,1)}},f=0;f<s.length;f++)h(f)},f=0;f<o;f+=1)h(f);return new ImageData(l,o,u)}var Ae=[[110,64,170],[143,61,178],[178,60,178],[210,62,167],[238,67,149],[255,78,125],[255,94,99],[255,115,75],[255,140,56],[239,167,47],[217,194,49],[194,219,64],[175,240,91],[135,245,87],[96,247,96],[64,243,115],[40,234,141],[28,219,169],[26,199,194],[33,176,213],[47,150,224],[65,125,224],[84,101,214],[99,81,195]];function Ee(e,t){if(void 0===t&&(t=Ae),Array.isArray(e)&&0===e.length)return null;for(var n,r=(n=Array.isArray(e)?e:[e])[0],a=r.width,s=r.height,i=new Uint8ClampedArray(a*s*4),o=0;o<s*a;++o){var u=4*o;i[u+0]=255,i[u+1]=255,i[u+2]=255,i[u+3]=255;for(var l=0;l<n.length;l++){var c=n[l].data[o];if(-1!==c){var d=t[c];if(!d)throw new Error("No color could be found for part id "+c);i[u+0]=d[0],i[u+1]=d[1],i[u+2]=d[2],i[u+3]=255}}}return new ImageData(i,a,s)}var $e="blurred",Re="blurred-mask",Fe="mask";function De(e,t,n,r,a,s){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1);var i=K(t),o=i[0],u=i[1];e.width=u,e.height=o;var l=e.getContext("2d");if(l.save(),s&&Ie(e),l.drawImage(t,0,0),l.globalAlpha=r,n){ke({width:u,height:o},n,"image","mask");var c=Te(Ce(n,Fe),a,Re);l.drawImage(c,0,0,u,o)}l.restore()}function Me(e,t,n,r,a,s,i){void 0===r&&(r=.7),void 0===a&&(a=0),void 0===s&&(s=!1),void 0===i&&(i=10);var o=K(t),u=o[0];ke({width:o[1],height:u},n,"image","mask");var l=Te(Ce(n,Fe),a,Re);e.width=l.width,e.height=l.height;var c=e.getContext("2d");c.save(),s&&Ie(e);var d=Ne("lowres-part-mask"),p=d.getContext("2d");d.width=l.width*(1/i),d.height=l.height*(1/i),p.drawImage(l,0,0,l.width,l.height,0,0,d.width,d.height),c.imageSmoothingEnabled=!1,c.drawImage(d,0,0,d.width,d.height,0,0,e.width,e.height);for(var h=0;h<d.width;h++)c.beginPath(),c.strokeStyle="#ffffff",c.moveTo(i*h,0),c.lineTo(i*h,e.height),c.stroke();for(h=0;h<d.height;h++)c.beginPath(),c.strokeStyle="#ffffff",c.moveTo(0,i*h),c.lineTo(e.width,i*h),c.stroke();c.globalAlpha=1-r,c.drawImage(t,0,0,l.width,l.height),c.restore()}function Oe(e,t,n,r,a,s){void 0===r&&(r=3),void 0===a&&(a=3),void 0===s&&(s=!1);var i=Te(t,r,$e);e.width=i.width,e.height=i.height;var o=e.getContext("2d");if(Array.isArray(n)&&0===n.length)o.drawImage(i,0,0);else{var u=function(e,t){var n=Ce(_e(e,{r:0,g:0,b:0,a:255},{r:0,g:0,b:0,a:0}),Fe);return 0===t?n:Te(n,t,Re)}(n,a);o.save(),s&&Ie(e);var l=K(t),c=l[0],d=l[1];o.drawImage(t,0,0,d,c),Se(o,u,"destination-in"),Se(o,i,"destination-over"),o.restore()}}function ze(e,t,n,r,a,s,i){void 0===r&&(r=[0,1]),void 0===a&&(a=3),void 0===s&&(s=3),void 0===i&&(i=!1);var o=Te(t,a,$e);e.width=o.width,e.height=o.height;var u=e.getContext("2d");if(Array.isArray(n)&&0===n.length)u.drawImage(o,0,0);else{var l=function(e,t,n){var r=Ce(_e(e,{r:0,g:0,b:0,a:0},{r:0,g:0,b:0,a:255},!0,t),Fe);return 0===n?r:Te(r,n,Re)}(n,r,s);u.save(),i&&Ie(e);var c=K(t),d=c[0],p=c[1];u.drawImage(t,0,0,p,d),Se(u,l,"destination-in"),Se(u,o,"destination-over"),u.restore()}}var Le=["left_face","right_face","left_upper_arm_front","left_upper_arm_back","right_upper_arm_front","right_upper_arm_back","left_lower_arm_front","left_lower_arm_back","right_lower_arm_front","right_lower_arm_back","left_hand","right_hand","torso_front","torso_back","left_upper_leg_front","left_upper_leg_back","right_upper_leg_front","right_upper_leg_back","left_lower_leg_front","left_lower_leg_back","right_lower_leg_front","right_lower_leg_back","left_feet","right_feet"],Be="2.2.0"},8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(8433);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>s,fC:()=>i});var r=n(8433),a=n(8166);function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,a.H)(t,"abs");let i=new Float32Array(r.util.sizeFromShape(t.shape));return i=s(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>i,IH:()=>u,j4:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e+t)),o=(0,s.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,s.j)(r.Add,i,o),l={kernelName:r.Add,backendName:"cpu",kernelFunc:u}},8607:(e,t,n)=>{"use strict";n.d(t,{W:()=>a,i:()=>s});var r=n(8433);function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=r.util.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?t[n]:1)}return o}function s(e,t,n,a=!1){const s=e.shape[0],i=e.shape[1],o=(0,r.buffer)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<i;s++){const i=e.get(r,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?o.set(1,r,i):t.size>0?o.set(o.get(r,i)+t.get(r,s),r,i):o.set(o.get(r,i)+1,r,i))}return o}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>l,M:()=>c});var r=n(8433),a=n(3533),s=n(4391),i=n(6961),o=n(1775),u=n(2186);function l(e){const{inputs:t,backend:n,attrs:c}=e,{x:d}=t,{dtype:p}=c;if("complex64"===p){if("complex64"===d.dtype)return(0,o.y)({inputs:{x:d},backend:n});const e=(0,s.l)(n,d.shape,d.dtype),t=l({inputs:{x:d},backend:n,attrs:{dtype:"float32"}}),r=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===d.dtype){const e=(0,u.k)({inputs:{input:d},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:p}});return n.disposeIntermediateTensorInfo(e),t}if(!r.util.hasEncodingLoss(d.dtype,p)){const e=(0,o.y)({inputs:{x:d},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:p}}if("int32"===p){const e=n.data.get(d.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(d.shape,"int32",t)}if("bool"===p){const e=n.data.get(d.dataId).values,t=r.util.toTypedArray([0],d.dtype),[s,i]=(0,a.b)(((e,t)=>e!==t?1:0))(d.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${d.dtype} to ${p}`)}const c={kernelName:r.Cast,backendName:"cpu",kernelFunc:l}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>i,y2:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.ceil(e))),o=(0,s.O)(r.Ceil,i),u={kernelName:r.Ceil,backendName:"cpu",kernelFunc:o}},6961:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}n.d(t,{P:()=>r,z:()=>a});const a={kernelName:n(8433).Complex,backendName:"cpu",kernelFunc:r}},8926:(e,t,n)=>{"use strict";n.d(t,{j:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.util.getArrayFromDType(n,r.util.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.util.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const i="string"===n?r.backend_util.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=i[o++]}a+=e.shape[1]}))}return s}},7679:(e,t,n)=>{"use strict";n.d(t,{tW:()=>i,Dg:()=>o,Kx:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e===t?1:0)),o=(0,s.j)(r.Equal,i,null,"bool"),u={kernelName:r.Equal,backendName:"cpu",kernelFunc:o}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>i,Qq:()=>o,SX:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.exp(e))),o=(0,s.O)(r.Exp,i),u={kernelName:r.Exp,backendName:"cpu",kernelFunc:o}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>i,Vu:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.expm1(e))),o=(0,s.O)(r.Expm1,i),u={kernelName:r.Expm1,backendName:"cpu",kernelFunc:o}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>i,Ao:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.floor(e))),o=(0,s.O)(r.Floor,i),u={kernelName:r.Floor,backendName:"cpu",kernelFunc:o}},1820:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(8433);function a(e,t,n,a,s,i,o,u,l){const c=(0,r.buffer)([a,i],n);for(let n=0;n<a;n++){const r=[];let a=0;for(let t=0;t<s;t++){const i=e[n*s+t];a+=i*o[t],r.push(i)}if(a<0||a>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(a*i+e))}return c}},4468:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(8433);function a(e,t,n){const a=(0,r.buffer)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a}},6272:(e,t,n)=>{"use strict";n.d(t,{o:()=>i,Ce:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e>t?1:0)),o=(0,s.j)(r.Greater,i,null,"bool"),u={kernelName:r.Greater,backendName:"cpu",kernelFunc:o}},6259:(e,t,n)=>{"use strict";n.d(t,{HL:()=>i,V:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e>=t?1:0)),o=(0,s.j)(r.GreaterEqual,i,null,"bool"),u={kernelName:r.GreaterEqual,backendName:"cpu",kernelFunc:o}},1775:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:()=>r,I:()=>a});const a={kernelName:n(8433).Identity,backendName:"cpu",kernelFunc:r}},8405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>i,zh:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e<t?1:0)),o=(0,s.j)(r.Less,i,null,"bool"),u={kernelName:r.Less,backendName:"cpu",kernelFunc:o}},635:(e,t,n)=>{"use strict";n.d(t,{lx:()=>i,m3:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e<=t?1:0)),o=(0,s.j)(r.LessEqual,i,null,"bool"),u={kernelName:r.LessEqual,backendName:"cpu",kernelFunc:o}},1325:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e,t,n){const a=(t-e)/(n-1),s=r.util.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>i,xM:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.log(e))),o=(0,s.O)(r.Log,i),u={kernelName:r.Log,backendName:"cpu",kernelFunc:o}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.util.getTypedArrayFromDType(a,r.util.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}},1717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>i,eJ:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>Math.max(e,t))),o=(0,s.j)(r.Maximum,i),u={kernelName:r.Maximum,backendName:"cpu",kernelFunc:o}},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>i,u0:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>Math.min(e,t))),o=(0,s.j)(r.Minimum,i),u={kernelName:r.Minimum,backendName:"cpu",kernelFunc:o}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>i,Jp:()=>u,f$:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e*t)),o=(0,s.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,s.j)(r.Multiply,i,o),l={kernelName:r.Multiply,backendName:"cpu",kernelFunc:u}},854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>i,AF:()=>o});var r=n(8433),a=n(8166),s=n(1917);function i(e,t,n){const a=r.util.createScalarValue(-1,n);return(0,s.$3)([],t,a,e,n)}const o={kernelName:r.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,a.H)(r,"neg");const s=n.data.get(r.dataId).values,[o,u]=i(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>i,nP:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e!==t?1:0)),o=(0,s.j)(r.NotEqual,i,null,"bool"),u={kernelName:r.NotEqual,backendName:"cpu",kernelFunc:o}},9560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>i,Iz:()=>o});var r=n(8433),a=n(8166),s=n(4802);function i(e,t,n,a){const[s,i]=r.backend_util.computeOutAndReduceShapes(e,a),o=(0,r.upcastType)(t,"int32"),u=r.util.makeZerosTypedArray(r.util.sizeFromShape(s),o),l=r.util.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:o}}const o={kernelName:r.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,a.H)(u,"prod");const d=u.shape.length,p=r.util.parseAxisParam(l,u.shape),h=r.backend_util.getAxesPermutation(p,d);let f=p,m=u;const g=[];null!=h&&(m=(0,s.p)({inputs:{x:u},backend:n,attrs:{perm:h}}),g.push(m),f=r.backend_util.getInnerMostAxes(f.length,d));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:v}=i(m.shape,m.dtype,y,f);let w=x;return c&&(w=r.backend_util.expandShapeToKeepDim(x,p)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(w,v,b)}}},9230:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.util.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.util.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},2186:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,{k:()=>r,O:()=>a});const a={kernelName:n(8433).Real,backendName:"cpu",kernelFunc:r}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>i,FY:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>1/Math.sqrt(e))),o=(0,s.O)(r.Rsqrt,i),u={kernelName:r.Rsqrt,backendName:"cpu",kernelFunc:o}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>s,tP:()=>i,C6:()=>o});var r=n(8433),a=n(8166);function s(e,t,n,a,s){const i=r.slice_util.isSliceContinous(a,t,n),o=r.util.sizeFromShape(n),u=r.util.computeStrides(a);if(i){const n=r.slice_util.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===s?r.backend_util.fromUint8ToStringArray(e):e,c=(0,r.buffer)(a,s,l),d=(0,r.buffer)(n,s);for(let e=0;e<d.size;++e){const n=d.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));d.set(c.get(...r),...n)}return"string"===s?r.backend_util.fromStringArrayToUint8(d.values):d.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,a.H)(o,"slice");const[c,d]=r.slice_util.parseSliceParams(o,u,l);r.slice_util.assertParamsValid(o,c,d);const p=s(n.data.get(o.dataId).values,c,d,o.shape,o.dtype);return n.makeTensorInfo(d,o.dtype,p)}const o={kernelName:r.Slice,backendName:"cpu",kernelFunc:i}},2123:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(8433);function a(e,t,n,a,s,i,o){const u=t[0],l=i[0],c=new Array(l),d=new Array(u),p=t[1];if(0===l){if(0!==u)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${u}`);return[r.util.getArrayFromDType(n,0),[0,p],r.util.getArrayFromDType(s,0),c,d]}let h=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++m[n],h=h&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&h){const t=e,n=a;for(let e=0;e<u;++e)d[e]=e;return[t,[u,p],n,c,d]}{const t=m[l-1],i=r.util.getArrayFromDType(n,t*p),h=r.util.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*p],r=f[n],s=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<p;++n)i[s*p+n]=e[t*p+n];h[s]=a[t],d[t]=s}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;h[t]=o}return[i,[t,p],h,c,d]}}},3849:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(8433);function a(e,t,n,a,s){const i=r.util.sizeFromShape(a),o=t[0],u=s.length,l=[];let c=1,d=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==d)throw new Error(`only one output dimension may be -1, not both ${d} and ${e}`);d=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,l.push(t)}}if(-1!==d){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${a} outputShape= ${l}`);l[d]=e}const p=r.util.sizeFromShape(l);if(p!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${p}. inputShape=${a} outputShape=${l}`);const h=a.length,f=[];if(h>0){f[h-1]=1;for(let e=h-2;e>=0;--e)f[e]=f[e+1]*a[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*l[e+1]}const g=r.util.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*f[r];for(let e=0;e<u;++e)g[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,u],l]}},3989:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(8433);function a(e,t,n,a,s,i=!1,o=0){const u=a.length;if(u!==s.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],c=l[1],d=u>0?s[u-1]+1:0;if(d<0)throw new Error("segment ids must be >= 0");const p=t.slice();p[0]=d;const h=p.reduce(((e,t)=>e*t),1),f=r.util.getArrayFromDType(n,h);if(0===u)return d>0&&f.fill(o),[f,p];if(d<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<u){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=d)throw new Error(`Segment id ${b} out of range [0, ${d}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let t=m;t<g;++t){const n=a[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${a[t]} out of range [0, ${l[0]})`);for(let t=0;t<c;t++)f[b*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<d&&f.fill(o,y*c,d*c),[f,p]}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>i,MS:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,s.j)(r.SquaredDifference,i),u={kernelName:r.SquaredDifference,backendName:"cpu",kernelFunc:o}},2210:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(8433);function a(e,t,n,a){const s=(0,r.buffer)(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+a[e];s.set(t.get(...i),...r)}return s}},6841:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(8433);class a{constructor(e,t,n,a,s,i){this.separator=r.util.encodeString(e),this.nGramWidths=t,this.leftPad=r.util.encodeString(n),this.rightPad=r.util.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[d+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const h=n[r+i];let f=0;const m=e=>e.forEach((e=>h[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.util.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const o=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===i[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,i]}}function s(e,t,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(e,t)}},8639:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var r=n(8433);function a(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function s(e,t,n){const s=e.length,i=[];let o=0,u=0;const l=new Array(s);for(let r=0;r<s;++r){const s=a(e[r],t,n),c=s.length;l[r]=c,o+=c,u=Math.max(u,c),i.push(...s)}const c=r.util.getArrayFromDType("int32",2*o),d=new Array(o),p=[s,u];let h=0;for(let e=0;e<s;++e)for(let t=0;t<l[e];++t)c[2*h]=e,c[2*h+1]=t,d[h]=i[h],++h;return[c,d,p]}},6626:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(8433);function a(e,t){const n=r.util.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.util.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>i,lu:()=>u,GR:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e-t)),o=(0,s.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,s.j)(r.Sub,i,o),l={kernelName:r.Sub,backendName:"cpu",kernelFunc:u}},7723:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(8433);function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.buffer)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}},9556:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(8433);const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,a=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+l)),Math.min(i,Math.floor(t+(r-a)*u/r+l)))}const o=e[t];let u=n,l=i;for(r.util.swap(e,n,t),a(e[i],o)>0&&r.util.swap(e,n,i);u<l;){for(r.util.swap(e,u,l),u++,l--;a(e[u],o)<0;)u+=1;for(;a(e[l],o)>0;)l-=1}0===a(e[n],o)?r.util.swap(e,n,l):(l+=1,r.util.swap(e,l,i)),l<=t&&(n=l+1),t<=l&&(i=l-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[l,c]=[e.length/u,u],d=r.util.getTypedArrayFromDType(n,l*i),p=r.util.getTypedArrayFromDType("int32",l*i);for(let t=0;t<l;t++){const n=t*c,r=e.subarray(n,n+c);let u=new Array(r.length);r.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(s(u,i),u=u.slice(0,i)),o&&u.sort(a);const l=t*i,h=d.subarray(l,l+i),f=p.subarray(l,l+i);for(let e=0;e<i;e++)h[e]=u[e].value,f[e]=u[e].index}const h=t.slice();return h[h.length-1]=i,[(0,r.buffer)(h,n,d),(0,r.buffer)(h,"int32",p)]}},4802:(e,t,n)=>{"use strict";n.d(t,{p:()=>i,b:()=>o});var r=n(8433),a=n(8166),s=n(7107);function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;(0,a.H)(i,"transpose");const u=i.shape.length,l=new Array(u);for(let e=0;e<l.length;e++)l[e]=i.shape[o[e]];const c=r.data.get(i.dataId).values,d=(0,s.H)(c,i.shape,i.dtype,o,l);return{dataId:r.write(d,l,i.dtype),shape:l,dtype:i.dtype}}const o={kernelName:r.Transpose,backendName:"cpu",kernelFunc:i}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(8433);function a(e,t,n,a,s){const i=t.length,o=r.util.sizeFromShape(t),u=r.util.computeStrides(t),l=r.util.computeStrides(s),c=r.util.getTypedArrayFromDType(n,r.util.sizeFromShape(s));for(let t=0;t<o;++t){const n=r.util.indexToLoc(t,i,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];c[r.util.locToIndex(s,i,l)]=e[t]}return c}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.util.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[s]),l=new r.TensorBuffer(i,a,e),c=[],d=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(d)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const h=new r.TensorBuffer(p,a);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)h.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=p[1],{outputValues:h.values,outputShape:f,indices:u}}},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e){return(t,n,a,s,i)=>{const o=r.backend_util.assertAndGetBroadcastShape(t,n),u=o.length,l=r.util.computeStrides(o),c=r.util.sizeFromShape(o),d=r.util.getTypedArrayFromDType(i,c),p=t.length,h=n.length,f=r.util.computeStrides(t),m=r.util.computeStrides(n),g=r.backend_util.getBroadcastDims(t,o),y=r.backend_util.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<d.length;++t)d[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<d.length;++t){const n=r.util.indexToLoc(t,u,l),i=n.slice(-p);g.forEach((e=>i[e]=0));const o=r.util.locToIndex(i,p,f),c=n.slice(-h);y.forEach((e=>c[e]=0));const b=r.util.locToIndex(c,h,m);d[t]=e(a[o],s[b])}return[d,o]}}},6205:(e,t,n)=>{"use strict";n.d(t,{j:()=>o,H:()=>u});var r=n(8433),a=n(8166),s=n(9258),i=n(6961);function o(e,t,n,o){return null==n?({inputs:n,backend:s})=>{const{a:i,b:u}=n,l=s;(0,a.H)([i,u],e);const c=l.data.get(i.dataId).values,d=l.data.get(u.dataId).values,p="string"===i.dtype?r.backend_util.fromUint8ToStringArray(c):c,h="string"===i.dtype?r.backend_util.fromUint8ToStringArray(d):d,f=o||i.dtype,[m,g]=t(i.shape,u.shape,p,h,f);return l.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a,b:u}=e,l=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=(0,s.p)({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,c=l.data.get(r.dataId).values,d=l.data.get(o.dataId).values,p=(0,s.p)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),h=l.data.get(p.dataId),f=h.complexTensorInfos.real,m=h.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[b,x,v]=n(a.shape,u.shape,c,d,g,y),w=l.makeTensorInfo(v,"float32",b),k=l.makeTensorInfo(v,"float32",x),I=(0,i.P)({inputs:{real:w,imag:k},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(p),l.disposeIntermediateTensorInfo(w),l.disposeIntermediateTensorInfo(k),I}{const e=l.data.get(a.dataId).values,n=l.data.get(u.dataId).values,r=o||a.dtype,[s,i]=t(a.shape,u.shape,e,n,r);return l.makeTensorInfo(i,r,s)}}}function u(e){return(t,n,a,s,i,o)=>{const u=r.backend_util.assertAndGetBroadcastShape(t,n),l=r.util.sizeFromShape(u),c=u.length,d=r.util.computeStrides(u),p=r.util.getTypedArrayFromDType("float32",l),h=r.util.getTypedArrayFromDType("float32",l),f=r.backend_util.getBroadcastDims(t,u),m=r.backend_util.getBroadcastDims(n,u),g=r.backend_util.mergeRealAndImagArrays(a,s),y=r.backend_util.mergeRealAndImagArrays(i,o),b=t.length,x=r.util.computeStrides(t),v=n.length,w=r.util.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[t]=a.real,h[t]=a.imag}else for(let t=0;t<p.length;t++){const n=r.util.indexToLoc(t,c,d),a=n.slice(-b);f.forEach((e=>a[e]=0));const s=r.util.locToIndex(a,b,x),i=n.slice(-v);m.forEach((e=>i[e]=0));const o=r.util.locToIndex(i,v,w),u=e(g[2*s],g[2*s+1],y[2*o],y[2*o+1]);p[t]=u.real,h[t]=u.imag}return[p,h,u]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>a});var r=n(8433);function a(e){return(t,n,a)=>{const s=r.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>s,O:()=>i});var r=n(8433),a=n(8166);function s(e,t,n){return({inputs:s,attrs:i,backend:o})=>{const{x:u}=s;if((0,a.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=o,c=l.data.get(u.dataId).values,d=r.util.sizeFromShape(u.shape),p=n||u.dtype,h=r.util.getArrayFromDType(p,d);for(let e=0;e<d;++e)h[e]=t(c[e],i);return l.makeTensorInfo(u.shape,p,h)}}function i(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if((0,a.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,d=t(l,c,s);return u.makeTensorInfo(o.shape,c,d)}}},4391:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var r=n(8433),a=n(6961);function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return(0,a.P)({inputs:{real:n,imag:r},backend:e})}const i=r.util.makeZerosTypedArray(r.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},2948:(e,t,n)=>{var r=n(2140),a=n(9980),s=n(1730),i=n(1133),o=n(4026),u=n(865),l=n(8721);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},2140:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},9980:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},4026:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},1133:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},1730:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},8721:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{i=n(914)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},2178:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BackendWasm:()=>ln,setWasmPath:()=>yn,setWasmPaths:()=>bn,version_wasm:()=>xn});var r,a,s=n(8433);let i;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(r||(r={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid"}(a||(a={}));const o={kernelName:s._FusedMatMul,backendName:"wasm",setupFunc:function(e){i=e.wasm.cwrap(s._FusedMatMul,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o,bias:u,preluActivationWeights:l}=t;if("float32"!==s.dtype||"float32"!==o.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:c,transposeB:d,activation:p,leakyreluAlpha:h}=r,f=n.dataIdMap.get(s.dataId).id,m=n.dataIdMap.get(o.dataId).id;let g=0;if(null!=u){const e=n.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);g=e.id}const y=null==l?0:n.dataIdMap.get(l.dataId).id,b=a[p];if(null==b)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const x=c?s.shape[2]:s.shape[1],v=d?o.shape[1]:o.shape[2],w=s.shape[0],k=n.makeOutput([w,x,v],s.dtype),I=n.dataIdMap.get(k.dataId).id,S=new Uint8Array(new Int32Array(s.shape).buffer),N=new Uint8Array(new Int32Array(o.shape).buffer);return i(f,S,s.shape.length,m,N,o.shape.length,c,d,b,g,y,h||0,I),k}};function u(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,i=n.makeOutput(r.shape,r.dtype),o=n.dataIdMap.get(i.dataId).id;return 0===s.util.sizeFromShape(i.shape)||t(a,o),i}}}const l=u(s.Abs);function c(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(i){const{backend:o,inputs:u}=i,{a:l,b:c}=u,d=o.dataIdMap.get(l.dataId).id,p=o.dataIdMap.get(c.dataId).id,h=null!=n?n:l.dtype,f=s.backend_util.assertAndGetBroadcastShape(l.shape,c.shape),m=o.makeOutput(f,h);if(0===s.util.sizeFromShape(f))return m;const g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),b=o.dataIdMap.get(m.dataId).id,x=()=>a(d,g,l.shape.length,p,y,c.shape.length,r[l.dtype],b);if(t&&"float32"===l.dtype)return x(),m;const v=s.backend_util.getBroadcastDims(l.shape,f),w=s.backend_util.getBroadcastDims(c.shape,f),k=v.every(((e,t)=>e===t)),I=w.every(((e,t)=>e===t));if(k&&I)return x(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${l.dtype} ${e}.`)}}}const d=c(s.Add,!0);let p;const h={kernelName:s.AddN,backendName:"wasm",setupFunc:function(e){p=e.wasm.cwrap(s.AddN,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===s.util.sizeFromShape(a.shape))return a;const i=t.map((e=>n.dataIdMap.get(e.dataId).id)),o=new Uint8Array(new Int32Array(i).buffer),u=n.dataIdMap.get(a.dataId).id;return p(o,i.length,r[a.dtype],u),a}};function f(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const m={kernelName:s.Identity,backendName:"wasm",kernelFunc:f};let g;function y(e){const{inputs:t,backend:n,attrs:a}=e,[s,i]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,a.perm);let o=!0;for(let e=0;e<i.length;e++)i[e]!==e&&(o=!1);const u=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){const e=f({inputs:t,backend:n});return e.shape=u,e}const c=n.makeOutput(u,l.dtype),d=n.dataIdMap.get(l.dataId).id,p=n.dataIdMap.get(c.dataId).id,h=new Uint8Array(new Int32Array(i).buffer),m=new Uint8Array(new Int32Array(l.shape).buffer);return g(d,m,l.shape.length,r[l.dtype],p,h,i.length),c}const b={kernelName:s.Transpose,backendName:"wasm",kernelFunc:y,setupFunc:function(e){g=e.wasm.cwrap(s.Transpose,null,["number","array","number","number","number","array","number"])}};function x(e,t,n){const r=e.shape,a=e.shape.length,i=s.util.parseAxisParam(t,r);let o=i;const u=s.backend_util.getAxesPermutation(o,a);let l=null,c=!1;if(null!=u){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[u[e]];o=s.backend_util.getInnerMostAxes(o.length,a),l=y({inputs:{x:e},attrs:{perm:u},backend:n});const i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==i&&(c=!0)}return{transposed:l,originalAxes:i,axes:o,inputWasTransposed:c}}let v;const w={kernelName:s.All,backendName:"wasm",setupFunc:function(e){v=e.wasm.cwrap(s.All,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=x(o,a,t);h&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.backend_util.assertAxesAreInnerMostDims("all",d,f);const[m,g]=s.backend_util.computeOutAndReduceShapes(l.shape,d),y=s.util.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;v(u,y,e)}if(h&&t.disposeData(c.dataId),i){const e=s.backend_util.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}};let k;const I={kernelName:s.Any,backendName:"wasm",setupFunc:function(e){k=e.wasm.cwrap(s.Any,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=x(o,a,t);h&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.backend_util.assertAxesAreInnerMostDims("any",d,f);const[m,g]=s.backend_util.computeOutAndReduceShapes(l.shape,d),y=s.util.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;k(u,y,e)}if(h&&t.disposeData(c.dataId),i){const e=s.backend_util.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}};let S;const N={kernelName:s.ArgMax,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:p,inputWasTransposed:h}=x(o,i,t);if(h){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e)}const f=c.shape.slice(0,-1),m=t.makeOutput(f,"int32"),g=t.dataIdMap.get(m.dataId).id,y=s.util.sizeFromShape(m.shape),b=c.shape[p[0]];return S(l,r[c.dtype],y,b,g),h&&t.disposeData(d.dataId),m},setupFunc:function(e){S=e.wasm.cwrap(s.ArgMax,null,["number","number","number","number","number"])}};let T;const C={kernelName:s.AvgPool,backendName:"wasm",setupFunc:function(e){T=e.wasm.cwrap(s.AvgPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,d=s.backend_util.computePool2DInfo(a.shape,o,u,1,l,c),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,g=d.padInfo.bottom,y=d.padInfo.left,b=d.strideHeight,x=d.strideWidth,v=d.inChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);if(1!==d.dilationWidth||1!==d.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${d.dilationHeight}, ${d.dilationWidth}].`);const w=r.makeOutput(d.outShape,"float32"),k=r.dataIdMap.get(w.dataId).id;return T(i,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,g,y,b,x,v,k),w}};function _(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,i=s.util.sizeFromShape(r.shape),o=s.util.inferFromImplicitShape(a,i);return s.util.assert(i===s.util.sizeFromShape(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const A={kernelName:s.Reshape,backendName:"wasm",kernelFunc:_};let E;const $={kernelName:s.BatchMatMul,backendName:"wasm",setupFunc:function(e){E=e.wasm.cwrap(s.BatchMatMul,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==a.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=a.shape.length,c=i.shape.length,d=o?a.shape[l-2]:a.shape[l-1],p=u?i.shape[c-1]:i.shape[c-2],h=o?a.shape[l-1]:a.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),y=s.util.sizeFromShape(m),b=s.util.sizeFromShape(g),x=y===b||1===y||1===b;s.util.assert(l>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([h,f]);s.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const w=u?[b,f,p]:[b,p,f],k=_({inputs:{x:a},backend:n,attrs:{shape:o?[y,d,h]:[y,h,d]}}),I=_({inputs:{x:i},backend:n,attrs:{shape:w}}),S=n.dataIdMap.get(k.dataId).id,N=n.dataIdMap.get(I.dataId).id,T=o?k.shape[2]:k.shape[1],C=u?I.shape[1]:I.shape[2],A=Math.max(y,b),$=n.makeOutput([A,T,C],k.dtype),R=n.dataIdMap.get($.dataId).id,F=new Uint8Array(new Int32Array(k.shape).buffer),D=new Uint8Array(new Int32Array(I.shape).buffer);return E(S,F,k.shape.length,N,D,I.shape.length,o,u,R),n.disposeData(k.dataId),n.disposeData(I.dataId),$.shape=v,$}};var R=n(2578);function F(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[i,o]=s.slice_util.parseSliceParams(t,n,r),u=s.slice_util.isSliceContinous(t.shape,i,o),l=a.readSync(t.dataId),c=a.makeOutput(o,t.dtype),d=s.util.computeStrides(t.shape),p=a.dataIdMap.get(c.dataId);if(u){const e=s.slice_util.computeFlatOffset(i,d);return"string"===t.dtype?p.stringBytes=l.slice(e,e+s.util.sizeFromShape(o)):a.typedArrayFromHeap(c).set(l.subarray(e,e+s.util.sizeFromShape(o))),c}if("string"===t.dtype){const e=(0,R.rT)(l,i,o,t.shape,t.dtype);return p.stringBytes=e,c}const h=a.typedArrayFromHeap(c),f=t.shape.length;if(2===f)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,d[0],h,i,o);else if(3===f)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(l,d[0],d[1],h,i,o);else if(4===f)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],p=l+i[1],h=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<p;u++)for(let l=c;l<h;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(l,d[0],d[1],d[2],h,i,o);else{const e=(0,R.rT)(l,i,o,t.shape,t.dtype);h.set(e)}return c}const D={kernelName:s.Slice,backendName:"wasm",kernelFunc:F},M={kernelName:s.BatchToSpaceND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r,u=i.reduce(((e,t)=>e*t)),l=s.backend_util.getReshaped(a.shape,i,u),c=s.backend_util.getPermuted(l.length,i.length),d=s.backend_util.getReshapedPermuted(a.shape,i,u),p=s.backend_util.getSliceBeginCoords(o,i.length),h=s.backend_util.getSliceSize(d,o,i.length),f=_({inputs:{x:a},backend:n,attrs:{shape:l}}),m=y({inputs:{x:f},backend:n,attrs:{perm:c}}),g=F({inputs:{x:_({inputs:{x:m},backend:n,attrs:{shape:d}})},backend:n,attrs:{begin:p,size:h}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}};function O(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const z={kernelName:s.Cast,backendName:"wasm",kernelFunc:O},L=u(s.Ceil);let B;const P={kernelName:s.ClipByValue,backendName:"wasm",setupFunc:function(e){B=e.wasm.cwrap(s.ClipByValue,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return B(o,s,i,l),u}};var V=n(8926);function W(e){const{inputs:t,backend:n}=e,r=s.util.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=s.backend_util.computeOutShape(t.map((e=>e.shape)),r);const i=t.filter((e=>s.util.sizeFromShape(e.shape)>0));if(1===i.length)return f({inputs:{x:i[0]},backend:n});const o=n.makeOutput(a,t[0].dtype);if(0===s.util.sizeFromShape(a))return o;const u=i.map((e=>e.shape));if(s.backend_util.assertParamsConsistent(u,r),"string"===i[0].dtype){const e=i.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return _({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=s.backend_util.computeOutShape(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],c=(0,V.j)(u,a,t[0].dtype,l),d=s.backend_util.computeOutShape(i.map((e=>e.shape)),r);return o.shape=d,n.dataIdMap.get(o.dataId).stringBytes=s.backend_util.fromStringArrayToUint8(c),e.forEach((e=>n.disposeData(e.dataId))),o}const l=s.util.sizeFromShape(i[0].shape.slice(0,r));let c=0;const d=i.map((e=>{const t=s.util.sizeFromShape(e.shape.slice(r));return c+=t,t})),p=i.map((e=>n.typedArrayFromHeap(e))),h=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*c;for(let n=0;n<p.length;n++){const r=d[n],a=e*r,s=p[n].subarray(a,a+r);h.set(s,t),t+=r}}return o}const U={kernelName:s.Concat,backendName:"wasm",kernelFunc:W};let H;const G={kernelName:s.Conv2D,backendName:"wasm",setupFunc:function(e){H=e.wasm.cwrap(s.Conv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:d,dimRoundingMode:p,dataFormat:h}=n,f=s.backend_util.convertConv2DDataFormat(h),m=s.backend_util.computeConv2DInfo(a.shape,i.shape,l,c,d,p,!1,f),g=m.filterHeight,y=m.filterWidth,b=m.padInfo.top,x=m.padInfo.right,v=m.padInfo.bottom,w=m.padInfo.left,k=m.dilationHeight,I=m.dilationWidth,S=m.strideHeight,N=m.strideWidth,T=m.inChannels,C=m.outChannels,_="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const A=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get(A.dataId).id;return H(o,a.shape[0],a.shape[1],a.shape[2],u,g,y,b,x,v,w,_,k,I,S,N,T,C,E),A}};let q;const j={kernelName:s.Conv2DBackpropInput,backendName:"wasm",setupFunc:function(e){q=e.wasm.cwrap(s.Conv2DBackpropInput,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:i}=n,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:d}=r,p=s.backend_util.convertConv2DDataFormat(l),h=s.backend_util.computeConv2DInfo(d,i.shape,o,1,u,c,!1,p),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:v,outHeight:w,outWidth:k,strideHeight:I,strideWidth:S}=h,N=m-1-h.padInfo.top,T=g-1-h.padInfo.left,C="channelsLast"===h.dataFormat,_=s.util.computeStrides(h.inShape),A=s.util.computeStrides(a.shape),[E,$,R]=s.util.computeStrides(i.shape),F=_[0],D=C?_[1]:_[2],M=C?_[2]:1,O=C?1:_[1],z=A[0],L=C?A[1]:A[2],B=C?A[2]:1,P=C?1:A[1],V=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(V.dataId).id,U=t.dataIdMap.get(a.dataId).id,H=t.dataIdMap.get(i.dataId).id;return q(U,H,f,m,g,b,x,y,w,k,v,I,S,N,T,E,$,R,F,D,M,O,z,L,B,P,W),V}},X=u(s.Cos),K=u(s.Cosh);var Y;let Q;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Y||(Y={}));const Z={kernelName:s.CropAndResize,backendName:"wasm",setupFunc:function(e){Q=e.wasm.cwrap(s.CropAndResize,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,p]=i,h=[c,d,p,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=O({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(h,"float32"),v=t.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(o.shape).buffer);return Q(g,y,b,c,w,d,p,Y[a],s,v),null!=f&&t.disposeData(f.dataId),x}};let J;const ee={kernelName:s.Cumsum,backendName:"wasm",setupFunc:function(e){J=e.wasm.cwrap(s.Cumsum,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:l}=a,c=i.shape.length;s.util.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const d=s.backend_util.getAxesPermutation([o],c);let p=i;null!==d&&(p=y({inputs:{x:i},attrs:{perm:d},backend:n}));const h=s.backend_util.getInnerMostAxes(1,c)[0];s.backend_util.assertAxesAreInnerMostDims("cumsum",[h],c);const f=n.makeOutput(p.shape,p.dtype),m=p.shape[h],g=n.dataIdMap.get(p.dataId).id,b=n.dataIdMap.get(f.dataId).id;J(g,u?1:0,l?1:0,m,b,r[i.dtype]);let x=f;return null!==d&&(x=y({inputs:{x:f},attrs:{perm:s.backend_util.getUndoAxesPermutation(d)},backend:n}),n.disposeData(p.dataId),n.disposeData(f.dataId)),x}};let te;const ne={kernelName:s.DepthToSpace,backendName:"wasm",setupFunc:function(e){te=e.wasm.cwrap(s.DepthToSpace,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:i,dataFormat:o}=r;s.util.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const u=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],d="NHWC"===o?a.shape[3]:a.shape[1],p=l*i,h=c*i,f=d/(i*i),m="NHWC"===o?[u,p,h,f]:[u,f,p,h],g=t.makeOutput(m,"float32"),y=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),x=new Uint8Array(new Int32Array(m).buffer),v=new Uint8Array(new Int32Array(s.util.computeStrides(m)).buffer),w=t.dataIdMap.get(g.dataId).id;return te(y,i,"NHWC"===o?1:0,b,a.shape.length-1,x,v,m.length,w),g}};let re;const ae={kernelName:s.DepthwiseConv2dNative,backendName:"wasm",setupFunc:function(e){re=e.wasm.cwrap(s.DepthwiseConv2dNative,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:d,dimRoundingMode:p}=n,h=null==c?[1,1]:c,f=s.backend_util.computeConv2DInfo(a.shape,i.shape,l,h,d,p,!0),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const _=r.makeOutput(f.outShape,"float32"),A=r.dataIdMap.get(_.dataId).id;return re(o,a.shape[0],a.shape[1],a.shape[2],u,m,g,y,b,x,v,C,w,k,I,S,N,T,A),_}},se=c(s.Equal,!1,"bool"),ie=u(s.Exp);function oe(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:i}=n,o=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(s.util.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),_({inputs:{x:a},backend:r,attrs:{shape:u}})}const ue={kernelName:s.ExpandDims,backendName:"wasm",kernelFunc:oe},le={kernelName:s.Fill,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};let ce;const de={kernelName:s.FlipLeftRight,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return ce(s,o,u,l,c,i),a},setupFunc:function(e){ce=e.wasm.cwrap(s.FlipLeftRight,null,["number","number","number","number","number","number"])}},pe=u(s.Floor),he=c(s.FloorDiv,!1);let fe;const me={kernelName:s.FusedBatchNorm,backendName:"wasm",setupFunc:function(e){fe=e.wasm.cwrap(s.FusedBatchNorm,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:i,mean:o,variance:u,offset:l,scale:c}=n,d=t.dataIdMap.get(i.dataId).id,p=t.dataIdMap.get(o.dataId).id,h=t.dataIdMap.get(u.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=c?t.dataIdMap.get(c.dataId).id:0,g=t.makeOutput(i.shape,i.dtype);if(0===s.util.sizeFromShape(i.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return fe(d,p,h,f,m,a,y),g}};let ge;const ye={kernelName:s.FusedConv2D,backendName:"wasm",setupFunc:function(e){ge=e.wasm.cwrap(s.FusedConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,y=s.backend_util.computeConv2DInfo(i.shape,o.shape,c,p,d,f),b=a[m];if(null==b)throw new Error(`${m} activation not yet supported for FusedConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,v=r.dataIdMap.get(o.dataId).id,w=y.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);k=e.id}const I=y.filterHeight,S=y.filterWidth,N=y.padInfo.top,T=y.padInfo.right,C=y.padInfo.bottom,_=y.padInfo.left,A=y.dilationHeight,E=y.dilationWidth,$=y.strideHeight,R=y.strideWidth,F=y.inChannels,D="SAME"===y.padInfo.type?1:0,M=y.batchSize,O=y.inHeight,z=y.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const L=r.makeOutput(y.outShape,"float32"),B=r.dataIdMap.get(L.dataId).id,P=null==l?0:r.dataIdMap.get(l.dataId).id;return ge(x,M,O,z,v,I,S,k,N,T,C,_,D,A,E,$,R,F,w,b,P,g||0,B),L}};let be;const xe={kernelName:s.FusedDepthwiseConv2D,backendName:"wasm",setupFunc:function(e){be=e.wasm.cwrap(s.FusedDepthwiseConv2D,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:d,dilations:p,dataFormat:h,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,y=s.backend_util.computeConv2DInfo(i.shape,o.shape,c,p,d,f,!0),b=a[m];if(null==b)throw new Error(`${m} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,v=r.dataIdMap.get(o.dataId).id,w=y.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==w)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${w})`);k=e.id}const I=y.filterHeight,S=y.filterWidth,N=y.padInfo.top,T=y.padInfo.right,C=y.padInfo.bottom,_=y.padInfo.left,A=y.dilationHeight,E=y.dilationWidth,$=y.strideHeight,R=y.strideWidth,F=y.inChannels,D="SAME"===y.padInfo.type?1:0,M=y.batchSize,O=y.inHeight,z=y.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);const L=r.makeOutput(y.outShape,"float32"),B=r.dataIdMap.get(L.dataId).id,P=null==l?0:r.dataIdMap.get(l.dataId).id;return be(x,M,O,z,v,I,S,k,N,T,C,_,D,A,E,$,R,F,w,b,P,g||0,B),L}};let ve;const we={kernelName:s.GatherNd,backendName:"wasm",setupFunc:function(e){ve=e.wasm.cwrap(s.GatherNd,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:i}=n,[o,u,l,c]=s.gather_util.prepareAndValidate(a,i),d=t.makeOutput(o,a.dtype);if(0===u)return d;const p=i.shape,h=p[p.length-1],f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(i.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),y=t.dataIdMap.get(d.dataId).id;return ve(f,r[a.dtype],m,u,h,l,g,y),d}};let ke;const Ie={kernelName:s.GatherV2,backendName:"wasm",setupFunc:function(e){ke=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:i,indices:o}=n,{axis:u,batchDims:l}=a,c=s.util.parseAxisParam(u,i.shape)[0],d=s.backend_util.segment_util.collectGatherOpShapeInfo(i,o,c,l),p=_({inputs:{x:i},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),h=s.util.sizeFromShape(o.shape),f=_({inputs:{x:o},attrs:{shape:[d.batchSize,h/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize],g=t.makeOutput(m,i.dtype);if(0===s.util.sizeFromShape(i.shape))return g;const y=p.shape.length-1,b=t.dataIdMap.get(p.dataId).id,x=t.dataIdMap.get(f.dataId).id,v=t.dataIdMap.get(g.dataId).id,w=new Uint8Array(new Int32Array(s.util.computeStrides(p.shape)).buffer),k=new Uint8Array(new Int32Array(s.util.computeStrides(m)).buffer);return ke(b,r[i.dtype],w,y,x,d.batchSize,k,v),t.disposeData(p.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},Se=c(s.Greater,!1,"bool"),Ne=c(s.GreaterEqual,!1,"bool");let Te;const Ce={kernelName:s.LeakyRelu,backendName:"wasm",setupFunc:function(e){Te=e.wasm.cwrap(s.LeakyRelu,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,i=r.makeOutput(t.shape,t.dtype);if(0!==s.util.sizeFromShape(t.shape)){const e=r.dataIdMap.get(i.dataId).id;Te(a,n,e)}return i}},_e=c(s.Less,!1,"bool"),Ae=c(s.LessEqual,!1,"bool"),Ee=u(s.Log),$e=c(s.LogicalAnd,!1,"bool");let Re;const Fe={kernelName:s.Max,backendName:"wasm",setupFunc:function(e){Re=e.wasm.cwrap(s.Max,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:d,originalAxes:p,inputWasTransposed:h}=x(o,a,t);h&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.backend_util.assertAxesAreInnerMostDims("max",d,f);const[m,g]=s.backend_util.computeOutAndReduceShapes(l.shape,d),y=s.util.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.util.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;Re(u,y,e)}if(h&&t.disposeData(c.dataId),i){const e=s.backend_util.expandShapeToKeepDim(b.shape,p);b.shape=e}return b}},De=c(s.Maximum,!1);let Me;const Oe={kernelName:s.MaxPool,backendName:"wasm",setupFunc:function(e){Me=e.wasm.cwrap(s.MaxPool,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,d=s.backend_util.computePool2DInfo(a.shape,o,u,1,l,c),p=d.filterHeight,h=d.filterWidth,f=d.padInfo.top,m=d.padInfo.right,g=d.padInfo.bottom,y=d.padInfo.left,b=d.dilationHeight,x=d.dilationWidth,v=d.strideHeight,w=d.strideWidth,k=d.inChannels,I=d.outChannels;if("channelsLast"!==d.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${d.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(d.outShape,"float32"),N=r.dataIdMap.get(S.dataId).id;return Me(i,a.shape[0],a.shape[1],a.shape[2],p,h,f,m,g,y,b,x,v,w,k,I,N),S}};let ze;const Le={kernelName:s.Mean,backendName:"wasm",setupFunc:function(e){ze=e.wasm.cwrap(s.Mean,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=x(o,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=s.backend_util.getInnerMostAxes(m.length,c.shape.length))}s.backend_util.assertAxesAreInnerMostDims("mean",m,c.shape.length);const[g,y]=s.backend_util.computeOutAndReduceShapes(c.shape,m),b=s.util.sizeFromShape(y);let v=c;"float32"!==c.dtype&&(v=O({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(v.dataId).id);const w=t.makeOutput(g,"float32");if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;ze(l,b,e)}if(f&&t.disposeData(d.dataId),i){const e=s.backend_util.expandShapeToKeepDim(w.shape,h);w.shape=e}return"float32"!==c.dtype&&t.disposeData(v.dataId),w}};let Be;const Pe={kernelName:s.Min,backendName:"wasm",setupFunc:function(e){Be=e.wasm.cwrap(s.Min,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=x(o,a,t);if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e)}const m=c.shape.length;s.backend_util.assertAxesAreInnerMostDims("min",p,m);const[g,y]=s.backend_util.computeOutAndReduceShapes(c.shape,p),b=s.util.sizeFromShape(y),v=t.makeOutput(g,c.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(v.dataId).id;Be(l,b,e)}if(f&&t.disposeData(d.dataId),i){const e=s.backend_util.expandShapeToKeepDim(v.shape,h);v.shape=e}return v}},Ve=c(s.Minimum,!1);var We;let Ue;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(We||(We={}));const He={kernelName:s.MirrorPad,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return Ue(o,c,t.shape.length,r[t.dtype],h,f,We[s],l),u},setupFunc:function(e){Ue=e.wasm.cwrap(s.MirrorPad,null,["number","array","number","number","array","array","number","number"])}},Ge=c(s.Multiply,!0),qe=u(s.Neg);function je(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let Xe;const Ke={kernelName:s.NonMaxSuppressionV3,backendName:"wasm",setupFunc:function(e){Xe=e.wasm.cwrap(s.NonMaxSuppressionV3,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=Xe(l,c,s,a,i),{pSelectedIndices:p,selectedSize:h,pSelectedScores:f,pValidOutputs:m}=je(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([h],"int32",p)}};let Ye;const Qe={kernelName:s.NonMaxSuppressionV4,backendName:"wasm",setupFunc:function(e){Ye=e.wasm.cwrap(s.NonMaxSuppressionV4,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=Ye(c,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=je(t,p);return t.wasm._free(m),[t.makeOutput([f],"int32",h),t.makeOutput([],"int32",g)]}};let Ze;const Je={kernelName:s.NonMaxSuppressionV5,backendName:"wasm",setupFunc:function(e){Ze=e.wasm.cwrap(s.NonMaxSuppressionV5,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,p=Ze(c,d,s,a,i,o),{pSelectedIndices:h,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=je(t,p);return t.wasm._free(g),[t.makeOutput([f],"int32",h),t.makeOutput([f],"float32",m)]}},et=c(s.NotEqual,!1,"bool");let tt;const nt={kernelName:s.OneHot,backendName:"wasm",setupFunc:function(e){tt=e.wasm.cwrap(s.OneHot,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return tt(c,s,i,o,l),u}},rt={kernelName:s.OnesLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},at={kernelName:s.Pack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return oe({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.util.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=W({inputs:t.map((e=>{const t=oe({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),l}};let st;const it={kernelName:s.PadV2,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),d=a.map((e=>e[0])),p=a.map((e=>e[1])),h=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(p).buffer);return st(o,c,t.shape.length,r[t.dtype],h,f,s,l),u},setupFunc:function(e){st=e.wasm.cwrap(s.PadV2,null,["number","array","number","number","array","array","number","number"])}},ot=c(s.Pow,!1);let ut;const lt={kernelName:s.Prelu,backendName:"wasm",setupFunc:function(e){ut=e.wasm.cwrap(s.Prelu,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return ut(s,i,u),o}};let ct;const dt={kernelName:s.Prod,backendName:"wasm",setupFunc:function(e){ct=e.wasm.cwrap(s.Prod,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,l=t.dataIdMap.get(u.dataId).id;let c=l,d=u;const{transposed:p,axes:h,originalAxes:f,inputWasTransposed:m}=x(u,i,t);let g=h;if(m){const e=t.dataIdMap.get(p.dataId).id;e!==l&&(d=p,c=e,g=s.backend_util.getInnerMostAxes(g.length,d.shape.length))}s.backend_util.assertAxesAreInnerMostDims("prod",g,d.shape.length);const[y,b]=s.backend_util.computeOutAndReduceShapes(d.shape,g),v=s.util.sizeFromShape(b),w=t.makeOutput(y,d.dtype);if(0!==s.util.sizeFromShape(d.shape)){const e=t.dataIdMap.get(w.dataId).id;ct(c,v,r[w.dtype],e)}if(m&&t.disposeData(p.dataId),o){const e=s.backend_util.expandShapeToKeepDim(w.shape,f);w.shape=e}return w}};var pt=n(9230);const ht={kernelName:s.Range,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=(0,pt.b)(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},ft=c(s.RealDiv,!0),mt=u(s.Relu),gt=u(s.Relu6);let yt;const bt={kernelName:s.ResizeBilinear,backendName:"wasm",setupFunc:function(e){yt=e.wasm.cwrap(s.ResizeBilinear,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,[d,p,h,f]=a.shape,m=[d,l,c,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=O({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const b=y.id,x=t.makeOutput(m,"float32");if(0===s.util.sizeFromShape(a.shape))return x;const v=t.dataIdMap.get(x.dataId).id;return yt(b,d,p,h,f,l,c,i?1:0,o?1:0,v),null!=g&&t.disposeData(g.dataId),x}};let xt;const vt={kernelName:s.Reverse,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=s.util.parseAxisParam(i,a.shape);if(0===a.shape.length)return f({inputs:{x:a},backend:n});const u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(a.shape).buffer);xt(l,d,o.length,p,a.shape.length,c);const h=_({inputs:{x:u},attrs:{shape:a.shape},backend:n});return n.disposeData(u.dataId),h},setupFunc:function(e){xt=e.wasm.cwrap(s.Reverse,null,["number","array","number","array","number","number"])}};let wt;const kt={kernelName:s.RotateWithOffset,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:i,fillValue:o,center:u}=r,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(a.dataId).id,d=n.dataIdMap.get(l.dataId).id,[p,h,f,m]=a.shape,[g,y]=s.backend_util.getImageCenter(u,h,f),b="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],x=new Uint8Array(new Int32Array(b).buffer);return wt(c,p,h,f,m,i,g,y,x,b.length,d),l},setupFunc:function(e){wt=e.wasm.cwrap(s.RotateWithOffset,null,["number","number","number","number","number","number","number","number","array","number","number"])}},It=u(s.Round),St=u(s.Rsqrt);let Nt;const Tt={kernelName:s.ScatterNd,backendName:"wasm",setupFunc:function(e){Nt=e.wasm.cwrap(s.ScatterNd,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:i,updates:o}=n,{shape:u}=a,l=t.makeOutput(u,o.dtype);if(0===s.util.sizeFromShape(u))return l;const{sliceRank:c,numUpdates:d,sliceSize:p,strides:h,outputSize:f}=s.scatter_util.calculateShapes(o,i,u),m=t.dataIdMap.get(i.dataId).id,g=t.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(l.dataId).id;return Nt(m,g,r[o.dtype],c,d,p,y,f,b),l}};let Ct;const _t={kernelName:s.Select,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(i.dataId).id,c=n.makeOutput(a.shape,a.dtype),d=n.dataIdMap.get(c.dataId).id,p=r.shape.length,h=a.shape.length,f=0===p||p>1||1===h?1:s.util.sizeFromShape(a.shape.slice(1));return Ct(o,u,l,f,d),c},setupFunc:function(e){Ct=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let At;const Et={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){At=e.wasm.cwrap(s.Sigmoid,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id;return 0===s.util.sizeFromShape(a.shape)||At(r,i),a}},$t=u(s.Sin);let Rt;const Ft={kernelName:s.Softmax,backendName:"wasm",setupFunc:function(e){Rt=e.wasm.cwrap(s.Softmax,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(i.dataId).id,u=n.shape[r],l=s.util.sizeFromShape(n.shape)/u;return 0===s.util.sizeFromShape(i.shape)||Rt(a,o,u,l),i}},Dt={kernelName:s.SpaceToBatchND,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r,u=s.util.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<a.shape.length;++e)l.push([0,0]);const c=it.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),d=s.backend_util.getReshaped(c.shape,i,u,!1),p=s.backend_util.getPermuted(d.length,i.length,!1),h=s.backend_util.getReshapedPermuted(c.shape,i,u,!1),f=_({inputs:{x:c},backend:n,attrs:{shape:d}}),m=y({inputs:{x:f},backend:n,attrs:{perm:p}}),g=_({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}},Mt={kernelName:s.SplitV,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=n,u=s.util.parseAxisParam(o,a.shape)[0],l=s.backend_util.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),d=a.shape.slice();return l.map((e=>{const t=[...d];t[u]=e;const n=F({inputs:{x:a},attrs:{begin:c,size:t},backend:r});return c[u]+=e,n}))}},Ot=u(s.Sqrt),zt=u(s.Square),Lt=c(s.SquaredDifference,!0);let Bt;const Pt={kernelName:s.Step,backendName:"wasm",setupFunc:function(e){Bt=e.wasm.cwrap(s.Step,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return Bt(i,a,u),o}};let Vt;const Wt={kernelName:s.StridedSlice,backendName:"wasm",setupFunc:function(e){Vt=e.wasm.cwrap(s.StridedSlice,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:i,end:o,strides:u}=r;null==u&&(u=new Array(i.length));const{beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,f=s.backend_util.slice_util.maskToAxes(d);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==d&&0!==p)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==d&&0!==h)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=a.shape.length-i.length,g=s.backend_util.slice_util.maskToAxes(p),y=a.shape.slice();g.forEach((e=>{i[e]=0,o[e]=1,y.splice(e,0,1)}));const b=_({inputs:{x:a},attrs:{shape:y},backend:t}),{begin:x,end:v,strides:w}=s.backend_util.slice_util.getNormalizedAxes(b.shape,f,m,i,o,u,l,c,d);i=x,o=v,u=w;const k=s.backend_util.slice_util.maskToAxes(h);k.forEach((e=>{o[e]=i[e]+1,u[e]=1}));const I=s.backend_util.slice_util.computeOutShape(i,o,u),S=I.filter(((e,t)=>-1===k.indexOf(t)));if(u.every((e=>1===e))){const e=F({inputs:{x:b},attrs:{begin:i,size:I},backend:t});t.disposeData(b.dataId);const n=_({inputs:{x:e},attrs:{shape:S},backend:t});return t.disposeData(e.dataId),n}const N=t.makeOutput(S,"float32");if(!S.some((e=>0===e))){const e=t.dataIdMap.get(b.dataId).id,n=new Uint8Array(new Int32Array(s.util.computeStrides(b.shape)).buffer),r=new Uint8Array(new Int32Array(i).buffer),a=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(S).buffer),d=new Uint8Array(new Int32Array(s.util.computeStrides(S)).buffer),p=t.dataIdMap.get(N.dataId).id;Vt(e,n,b.shape.length,r,a,l,c,d,S.length,p)}t.disposeData(b.dataId);const T=_({inputs:{x:N},attrs:{shape:S},backend:t});return t.disposeData(N.dataId),T}},Ut=c(s.Sub,!0);let Ht;const Gt={kernelName:s.Sum,backendName:"wasm",setupFunc:function(e){Ht=e.wasm.cwrap(s.Sum,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:d,axes:p,originalAxes:h,inputWasTransposed:f}=x(o,a,t);let m=p;if(f){const e=t.dataIdMap.get(d.dataId).id;e!==u&&(c=d,l=e,m=s.backend_util.getInnerMostAxes(m.length,c.shape.length))}s.backend_util.assertAxesAreInnerMostDims("sum",m,c.shape.length);const[g,y]=s.backend_util.computeOutAndReduceShapes(c.shape,m),b=s.util.sizeFromShape(y),v=t.makeOutput(g,c.dtype);if(0!==s.util.sizeFromShape(c.shape)){const e=t.dataIdMap.get(v.dataId).id;Ht(l,b,e)}if(f&&t.disposeData(d.dataId),i){const e=s.backend_util.expandShapeToKeepDim(v.shape,h);v.shape=e}return v}},qt=u(s.Tan),jt=u(s.Tanh);let Xt;const Kt={kernelName:s.Tile,backendName:"wasm",setupFunc:function(e){Xt=e.wasm.cwrap(s.Tile,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,i=n.dataIdMap.get(s.dataId).id,{reps:o}=a,u=new Array(s.shape.length);for(let e=0;e<u.length;e++)u[e]=s.shape[e]*o[e];const l=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(u).buffer),d=n.makeOutput(u,s.dtype),p=n.dataIdMap.get(d.dataId).id;return Xt(i,l,s.shape.length,c,u.length,r[d.dtype],p),d}};let Yt;const Qt={kernelName:s.TopK,backendName:"wasm",setupFunc:function(e){Yt=e.wasm.cwrap(s.TopK,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:s,sorted:i}=n,o=t.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=t.makeOutput(l,a.dtype),d=t.dataIdMap.get(c.dataId).id,p=t.makeOutput(l,"int32"),h=t.dataIdMap.get(p.dataId).id;return Yt(o,u,a.shape.length,r[a.dtype],s,i,d,h),[c,p]}};let Zt;const Jt={kernelName:s.Transform,backendName:"wasm",setupFunc:function(e){Zt=e.wasm.cwrap(s.Transform,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:i}=n,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=r,[d,p,h,f]=a.shape,[m,g]=null!=c?c:[p,h],y=[d,m,g,f],b=new Uint8Array(new Int32Array(s.util.computeStrides(a.shape)).buffer),x=t.makeOutput(y,a.dtype),v=t.dataIdMap.get(x.dataId).id,w=t.dataIdMap.get(a.dataId).id,k=t.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;let S;switch(u){case"constant":S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4;break;default:S=1}return Zt(w,k,i.shape[0]>1,d,m,g,f,h,p,b,a.shape.length-1,I,S,l,v),x}},en={kernelName:s.Unpack,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),p=a.shape.slice();p[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=F({inputs:{x:a},attrs:{begin:d,size:p},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},tn={kernelName:s.ZerosLike,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},nn=[l,d,h,w,I,N,C,$,M,z,L,P,U,G,j,X,K,Z,ee,ne,ae,se,ie,ue,le,de,pe,he,o,me,ye,xe,we,Ie,Se,Ne,m,Ce,_e,Ae,Ee,$e,Fe,De,Oe,Le,Pe,Ve,He,Ge,qe,Ke,Qe,Je,et,nt,rt,at,it,ot,lt,dt,ht,ft,mt,gt,A,bt,vt,kt,St,It,Tt,_t,Et,$t,D,Ft,Dt,Mt,Ot,zt,Lt,Pt,Wt,Ut,Gt,qt,jt,Kt,Qt,Jt,b,en,tn];for(const e of nn)(0,s.registerKernel)(e);const rn=(0,s.env)();rn.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),rn.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(rn.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var an=n(8349),sn=n.n(an),on=n(7234),un=n.n(on);class ln extends s.KernelBackend{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new s.DataStorage(this,(0,s.engine)())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=s.util.now();return e(),{kernelMs:s.util.now()-t}}move(e,t,n,r,a){const i=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:a})}const o=s.util.sizeFromShape(n),u=o*s.util.bytesPerElement(r),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(i,o,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+s.util.sizeFromShape(r)*s.util.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const i=s.util.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),i=s.util.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,i);case"int32":return new Int32Array(r,a,i);case"bool":return new Uint8Array(r,a,i);default:throw new Error(`Unknown dtype ${t}`)}}}function cn(e,t,n){if(null!=pn)return pn;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=fn&&null!=fn[r]?fn[r]:n+r}const dn=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let pn=null,hn=null,fn={},mn=!1,gn=!1;function yn(e,t=!1){if((0,s.deprecationWarn)("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),mn)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");pn=e,gn=t}function bn(e,t=!1){if(mn)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)hn=e;else{fn=e;const t=dn.filter((e=>null==fn[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}gn=t}const xn="3.8.0";(0,s.registerBackend)("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([(0,s.env)().getAsync("WASM_HAS_SIMD_SUPPORT"),(0,s.env)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var i;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?cn(e,t,null!=hn?hn:r):r+n},gn&&(a.instantiateWasm=(i=cn(e,t,null!=hn?hn:""),(e,t)=>(s.util.fetch(i,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${i}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let o,u=!1;a.onAbort=()=>{u||mn||(mn=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==pn?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+sn().toString()],{type:"text/javascript"}),o=sn()(a)):o=un()(a),o.then((e=>{u=!0,mn=!1,e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new ln(e)}),2)},8349:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return $.buffer!=D&&Z($.buffer),M}function a(){return $.buffer!=D&&Z($.buffer),O}function s(){return $.buffer!=D&&Z($.buffer),z}function i(){return $.buffer!=D&&Z($.buffer),L}function o(){return $.buffer!=D&&Z($.buffer),B}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var d,p={};for(d in c)c.hasOwnProperty(d)&&(p[d]=c[d]);var h=[],f=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(D=c.buffer);var v,w,k,I,S,N="";function T(e){return c.locateFile?c.locateFile(e,N):N+e}if(y){var C;N=g?n(2980).dirname(N)+"/":"//",v=function(e,t){return I||(I=n(7256)),S||(S=n(2980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof sn))throw e})),process.on("unhandledRejection",ye),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(7958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else b?("undefined"!=typeof read&&(v=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",y?(v=function(e,t){return I||(I=n(7256)),S||(S=n(2980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=v(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(v=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),w=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(n.g.performance=n(4862).performance);var _,A=c.print||console.log.bind(console),E=c.printErr||console.warn.bind(console);for(d in p)p.hasOwnProperty(d)&&(c[d]=p[d]);p=null,c.arguments&&(h=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(f=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&(_=c.wasmBinary);var $,R,F=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ye("no native wasm support detected");var D,M,O,z,L,B,P=!1;function V(e,t){e||ye("Assertion failed: "+t)}function W(e){var t=c["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function U(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);X(e,t=en(n),n)}return t},array:function(e){var t=en(e.length);return Y(e,t),t}},i=W(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Zt()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?q(e):"boolean"===t?Boolean(e):e}(d),0!==u&&Jt(u),d}function H(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?W(e):function(){return U(e,t,n,arguments)}}function G(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function q(e,t){return e?G(a(),e,t):""}function j(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function X(e,t,n){return j(e,a(),t,n)}function K(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function Y(e,n){t().set(e,n)}function Q(e,t){return e%t>0&&(e+=t-e%t),e}function Z(e){D=e,c.HEAP8=M=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=O=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=L=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=B=new Float64Array(e)}var J,ee=c.INITIAL_MEMORY||16777216;if(x)$=c.wasmMemory,D=c.buffer;else if(c.wasmMemory)$=c.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:ee/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(D=$.buffer),ee=D.byteLength,Z(D);var te=[],ne=[],re=[],ae=[],se=[];function ie(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ce(c.preRun.shift());Ae(te)}}function oe(){x||Ae(ne)}function ue(){x||Ae(re)}function le(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)de(c.postRun.shift());Ae(se)}}function ce(e){te.unshift(e)}function de(e){se.unshift(e)}x||ne.push({func:function(){Lt()}});var pe=0,he=null,fe=null;function me(e){V(!x,"addRunDependency cannot be used in a pthread worker"),pe++,c.monitorRunDependencies&&c.monitorRunDependencies(pe)}function ge(e){if(pe--,c.monitorRunDependencies&&c.monitorRunDependencies(pe),0==pe&&(null!==he&&(clearInterval(he),he=null),fe)){var t=fe;fe=null,t()}}function ye(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),E(e+=""),P=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function be(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var xe="data:application/octet-stream;base64,";function ve(e){return be(e,xe)}var we="file://";function ke(e){return be(e,we)}var Ie="tfjs-backend-wasm-threaded-simd.wasm";function Se(e){try{if(e==Ie&&_)return new Uint8Array(_);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){ye(e)}}function Ne(){if(!_&&(m||g)){if("function"==typeof fetch&&!ke(Ie))return fetch(Ie,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ie+"'";return e.arrayBuffer()})).catch((function(){return Se(Ie)}));if(w)return new Promise((function(e,t){w(Ie,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Se(Ie)}))}function Te(){var e={a:zt};function t(e,t){var n=e.exports;if(c.asm=n,J=c.asm.F,R=t,!x){var r=Me.unusedWorkers.length;Me.unusedWorkers.forEach((function(e){Me.loadWasmModuleToWorker(e,(function(){--r||ge()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Ne().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),ye(e)}))}if(x||me(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}return(_||"function"!=typeof WebAssembly.instantiateStreaming||ve(Ie)||ke(Ie)||"function"!=typeof fetch?r(n):fetch(Ie,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}ve(Ie)||(Ie=T(Ie));var Ce={9832:function(){throw"Canceled!"},9850:function(e,t){setTimeout((function(){jt(e,t)}),0)}};function _e(){Me.initRuntime()}function Ae(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?J.get(n)():J.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function Ee(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),an>>2),a=0;if(r==e&&Atomics.compareExchange(s(),an>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function $e(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Me.pthreads[e];t.worker.terminate(),Me.freeThreadData(t),Me.runningWorkers.splice(Me.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function Re(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Me.pthreads[e].worker.postMessage({cmd:"cancel"})}function Fe(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Me.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Me.returnWorkerToPool(n)}}c._emscripten_futex_wake=Ee;var De,Me={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Me.allocateUnusedWorker()},initRuntime:function(){for(var e=Bt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Bt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),Qt(e,!g,1),qt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Me.threadExitHandlers.length>0;)Me.threadExitHandlers.pop()();x&&Ut()&&Ht()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Me.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Ee(e+0,2147483647),Qt(0,0,0)},threadExit:function(e){var t=Ut();t&&(Me.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Me.runExitHandlersAndDeinitThread(Ut(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Me.pthreads)(r=Me.pthreads[e])&&r.worker&&Me.returnWorkerToPool(r.worker);Me.pthreads={};for(var t=0;t<Me.unusedWorkers.length;++t)(n=Me.unusedWorkers[t]).terminate();for(Me.unusedWorkers=[],t=0;t<Me.runningWorkers.length;++t){var n,r=(n=Me.runningWorkers[t]).pthread;Me.freeThreadData(r),n.terminate()}Me.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Pt(t),Pt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Pt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Me.runWithoutMainThreadQueuedCalls((function(){delete Me.pthreads[e.pthread.threadInfoStruct],Me.unusedWorkers.push(e),Me.runningWorkers.splice(Me.runningWorkers.indexOf(e),1),Me.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[rn>>2]=0;try{e()}finally{s()[rn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Me.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Ut()){var s=Me.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Me.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Gt();else if("spawnThread"===a)Rt(n.data);else if("cleanupThread"===a)Fe(r.thread);else if("killThread"===a)$e(r.thread);else if("cancelThread"===a)Re(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)A("Thread "+r.threadId+": "+r.text);else if("printErr"===a)E("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Me.returnWorkerToPool(e);else if("exitProcess"===a)try{un(r.returnCode)}catch(n){if(n instanceof sn)return;throw n}else"cancelDone"===a?Me.returnWorkerToPool(e):"objectTransfer"===a?Me.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):E("worker sent an unknown command "+a);Me.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){E("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:$,wasmModule:R})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");Me.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Me.unusedWorkers.length&&(Me.allocateUnusedWorker(),Me.loadWasmModuleToWorker(Me.unusedWorkers[0])),Me.unusedWorkers.length>0?Me.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Oe(e,t){tn(e,t),Jt(e)}function ze(){return F}function Le(e,t){return J.get(e)(t)}function Be(e,t,n,r){ye("Assertion failed: "+q(e)+", at: "+[t?q(t):"unknown filename",n,r?q(r):"unknown function"])}function Pe(e,t){_main(e,t)}function Ve(e){return s()[Vt()>>2]=e,e}function We(e,t){if(x)return Ye(1,1,e,t)}function Ue(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Me.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function He(){ye()}function Ge(e,t,n){var r=Je(t,n);return Ce[e].apply(null,r)}function qe(e,t){}function je(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),an>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),an>>2,0),-73;if(0==Atomics.exchange(s(),an>>2,0))break;if(Gt(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),an>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Xe(e,t,n){a().copyWithin(e,t,t+n)}function Ke(){return y?n(8158).cpus().length:navigator.hardwareConcurrency}function Ye(e,t){for(var n=arguments.length-2,r=Zt(),a=n,s=en(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Kt(e,a,s,t);return Jt(r),c}c.establishStackSpace=Oe,c.getNoExitRuntime=ze,c.invokeEntryPoint=Le,De=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var Qe=[],Ze=[];function Je(e,t){var n;for(Ze.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,Ze.push(r?o()[t++>>1]:s()[t]),++t}return Ze}function et(e,t,n){Qe.length=t;for(var r=n>>3,a=0;a<t;a++)Qe[a]=o()[r+a];return(e<0?Ce[-e-1]:Ot[e]).apply(null,Qe)}function tt(){return a().length}function nt(e){try{return $.grow(e-D.byteLength+65535>>>16),Z($.buffer),1}catch(e){}}function rt(e){var t=tt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),nt(Math.min(n,Q(Math.max(e,a),65536))))return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var e=at.eventHandlers.length-1;e>=0;--e)at._removeHandler(e);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(ae.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in at.deferredCalls){var s=at.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}at.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),at.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<at.deferredCalls.length;++t)at.deferredCalls[t].targetFunction==e&&(at.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(at.canPerformEventHandlerRequests())for(var e=0;e<at.deferredCalls.length;++e){var t=at.deferredCalls[e];at.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target!=e||t&&t!=at.eventHandlers[n].eventTypeString||at._removeHandler(n--)},_removeHandler:function(e){var t=at.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),at.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++at.inEventHandler,at.currentEventHandler=e,at.runDeferredCalls(),e.handlerFunc(t),at.runDeferredCalls(),--at.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),at.eventHandlers.push(e),at.registerRemoveEventListeners();else for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target==e.target&&at.eventHandlers[n].eventTypeString==e.eventTypeString&&at._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=Zt(),o=en(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,Yt(0,e,637534208,t,r,o),Jt(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Me.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function st(e){var t=K(e)+1,n=Bt(t);return X(e,n,t),n}function it(e,t,n,r){var a=Zt(),i=en(12),o=0;t&&(o=st(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,Yt(0,e,657457152,0,o,i),Jt(a)}function ot(e,t,n,r){it(e,t=t?q(t):"",n,r)}function ut(e){return e>2?q(e):e}var lt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ct(e){return e=ut(e),lt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function dt(e){return ct(e)}function pt(e,t,n){var r=dt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ot(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function ht(e,t,n){return x?Ye(2,1,e,t,n):pt(e,t,n)}function ft(e,t,n){return dt(e)?pt(e,t,n):ht(e,t,n)}function mt(e){}function gt(e,t){}function yt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function bt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function xt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function vt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var wt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){wt.lastError||(wt.lastError=e)},getNewId:function(e){for(var t=wt.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=q(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?wt.registerContext(n,t):0},registerContext:function(e,t){var n=Bt(8);s()[n+4>>2]=Ut();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),wt.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&wt.initExtensions(r),n},makeContextCurrent:function(e){return wt.currentContext=wt.contexts[e],c.ctx=Nt=wt.currentContext&&wt.currentContext.GLctx,!(e&&!Nt)},getContext:function(e){return wt.contexts[e]},deleteContext:function(e){wt.currentContext===wt.contexts[e]&&(wt.currentContext=null),"object"==typeof at&&at.removeAllHandlersOnTarget(wt.contexts[e].GLctx.canvas),wt.contexts[e]&&wt.contexts[e].GLctx.canvas&&(wt.contexts[e].GLctx.canvas.GLctxObject=void 0),Pt(wt.contexts[e].handle),wt.contexts[e]=null},initExtensions:function(e){if(e||(e=wt.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;yt(t),bt(t),xt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),vt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=wt.programs[e],n=wt.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Nt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Nt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Nt.getUniformLocation(t,o);if(u){var l=wt.getNewId(wt.uniforms);r[o]=[i.size,l],wt.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=Nt.getUniformLocation(t,d),l=wt.getNewId(wt.uniforms),wt.uniforms[l]=u}}}}},kt=["default","low-power","high-performance"];function It(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:kt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=dt(e);return i?a.explicitSwapControl?0:wt.createContext(i,a):0}function St(e,t){return It(e,t)}var Nt,Tt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Tt.buffers[e];0===t||10===t?((1===e?A:E)(G(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Tt.varargs+=4,s()[Tt.varargs-4>>2]},getStr:function(e){return q(e)},get64:function(e,t){return e}};function Ct(e){return x?Ye(3,1,e):0}function _t(e,t,n,r,a){if(x)return Ye(4,1,e,t,n,r,a)}function At(e,t,n,r){if(x)return Ye(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Tt.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Et(e){var t=Me.threadExitHandlers.pop();e&&t()}function $t(e,t){Me.threadExitHandlers.push((function(){J.get(e)(t)}))}function Rt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Me.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Me.runningWorkers.push(t);for(var n=Bt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Me.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Wt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Ft(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return E("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return Xt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=nn(16,o):V((u-=o)>0);for(var d=Bt(228),p=0;p<57;++p)i()[(d>>2)+p]=0;s()[e>>2]=d,s()[d+12>>2]=d;var h=d+152;s()[h>>2]=h;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Rt(f),0}function Dt(e){if(x)return Ye(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ve(28),-1}x||Me.initMainThreadBlock();var Mt,Ot=[null,We,ht,Ct,_t,At,Dt],zt={e:Be,r:Pe,x:Ue,b:He,y:Ge,j:qe,c:je,d:Ee,f:De,p:Xe,z:Ke,u:et,q:rt,v:ft,i:mt,t:gt,w:St,m:Ct,n:_t,g:At,o:_e,a:$||c.wasmMemory,k:Et,l:$t,h:Ft,s:Dt},Lt=(Te(),c.___wasm_call_ctors=function(){return(Lt=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)}),Bt=(c._init=function(){return(c._init=c.asm.B).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.C).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.D).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.E).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.G).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.H).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.I).apply(null,arguments)},c._All=function(){return(c._All=c.asm.J).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.K).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.L).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.M).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.N).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.O).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.P).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Q).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.R).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.S).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.T).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.U).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.V).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.W).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.X).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Y).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Z).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm._).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.$).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.aa).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.ba).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ca).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.da).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ea).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.fa).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ga).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ha).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ia).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ja).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ka).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.la).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.ma).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.na).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.oa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.pa).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.qa).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.ra).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.sa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.ta).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ua).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.va).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.wa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.xa).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.ya).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.za).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Aa).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Ba).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ca).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Da).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ea).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Fa).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ga).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Ha).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ia).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Ja).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ka).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.La).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Ma).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Na).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Oa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Pa).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Qa).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Ra).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Ta).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ua).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Va).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Wa).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Xa).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Ya).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Za).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm._a).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.$a).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.ab).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.bb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.cb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.db).apply(null,arguments)},c._malloc=function(){return(Bt=c._malloc=c.asm.eb).apply(null,arguments)}),Pt=c._free=function(){return(Pt=c._free=c.asm.fb).apply(null,arguments)},Vt=c.___errno_location=function(){return(Vt=c.___errno_location=c.asm.gb).apply(null,arguments)},Wt=c._emscripten_get_global_libc=function(){return(Wt=c._emscripten_get_global_libc=c.asm.hb).apply(null,arguments)},Ut=c._pthread_self=function(){return(Ut=c._pthread_self=c.asm.ib).apply(null,arguments)},Ht=c.___pthread_tsd_run_dtors=function(){return(Ht=c.___pthread_tsd_run_dtors=c.asm.jb).apply(null,arguments)},Gt=c._emscripten_main_thread_process_queued_calls=function(){return(Gt=c._emscripten_main_thread_process_queued_calls=c.asm.kb).apply(null,arguments)},qt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.lb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(qt=c._emscripten_register_main_browser_thread_id=c.asm.mb).apply(null,arguments)}),jt=c.__emscripten_do_dispatch_to_thread=function(){return(jt=c.__emscripten_do_dispatch_to_thread=c.asm.nb).apply(null,arguments)},Xt=c._emscripten_sync_run_in_main_thread_4=function(){return(Xt=c._emscripten_sync_run_in_main_thread_4=c.asm.ob).apply(null,arguments)},Kt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Kt=c._emscripten_run_in_main_runtime_thread_js=c.asm.pb).apply(null,arguments)},Yt=c.__emscripten_call_on_thread=function(){return(Yt=c.__emscripten_call_on_thread=c.asm.qb).apply(null,arguments)},Qt=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.rb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Qt=c.__emscripten_thread_init=c.asm.sb).apply(null,arguments)}),Zt=c.stackSave=function(){return(Zt=c.stackSave=c.asm.tb).apply(null,arguments)},Jt=c.stackRestore=function(){return(Jt=c.stackRestore=c.asm.ub).apply(null,arguments)},en=c.stackAlloc=function(){return(en=c.stackAlloc=c.asm.vb).apply(null,arguments)},tn=c._emscripten_stack_set_limits=function(){return(tn=c._emscripten_stack_set_limits=c.asm.wb).apply(null,arguments)},nn=c._memalign=function(){return(nn=c._memalign=c.asm.xb).apply(null,arguments)},rn=c.__emscripten_allow_main_runtime_queued_calls=9824,an=c.__emscripten_main_thread_futex=11448;function sn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function on(e){if(e=e||h,!(pe>0)){if(x)return u(c),oe(),void postMessage({cmd:"loaded"});ie(),pe>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Mt||(Mt=!0,c.calledRun=!0,P||(oe(),ue(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),le()))}}function un(e,t){if(!t||!F||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new sn(e);F||(Me.terminateAllThreads(),c.onExit&&c.onExit(e),P=!0),f(e,new sn(e))}}if(c.cwrap=H,c.PThread=Me,c.PThread=Me,c.wasmMemory=$,c.ExitStatus=sn,fe=function e(){Mt||on(),Mt||(fe=e)},c.run=on,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(F=!1,Me.initWorker()),on(),e.ready});e.exports=a},7234:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,a=n}));var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,d=!1,p=!1;l="object"==typeof window,c="function"==typeof importScripts,d="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,p=!l&&!d&&!c;var h,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}d?(b=c?n(2980).dirname(b)+"/":"//",h=function(e,t){return g||(g=n(7256)),y||(y=n(2980)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=h(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Fe))throw e})),process.on("unhandledRejection",re),s.inspect=function(){return"[Emscripten Module object]"}):p?("undefined"!=typeof read&&(h=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",h=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var v,w,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(v=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&re("no native wasm support detected");var S=!1;function N(e,t){e||re("Assertion failed: "+t)}function T(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);z(e,t=Re(n),n)}return t},array:function(e){var t=Re(e.length);return L(e,t),t}},i=T(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ee()),o[l]=c(r[l])):o[l]=r[l]}var d=i.apply(null,o);return d=function(e){return"string"===t?M(e):"boolean"===t?Boolean(e):e}(d),0!==u&&$e(u),d}function _(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return C(e,t,n,arguments)}}var A,E,$,R,F="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function D(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&F)return F.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function M(e,t){return e?D($,e,t):""}function O(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function z(e,t,n){return O(e,$,t,n)}function L(e,t){E.set(e,t)}function B(e,t){return e%t>0&&(e+=t-e%t),e}function P(e){A=e,s.HEAP8=E=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=R=new Int32Array(e),s.HEAPU8=$=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var V,W=[],U=[],H=[],G=[];function q(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Y(s.preRun.shift());he(W)}function j(){he(U)}function X(){he(H)}function K(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Q(s.postRun.shift());he(G)}function Y(e){W.unshift(e)}function Q(e){G.unshift(e)}U.push({func:function(){_e()}});var Z=0,J=null,ee=null;function te(e){Z++,s.monitorRunDependencies&&s.monitorRunDependencies(Z)}function ne(e){if(Z--,s.monitorRunDependencies&&s.monitorRunDependencies(Z),0==Z&&(null!==J&&(clearInterval(J),J=null),ee)){var t=ee;ee=null,t()}}function re(e){s.onAbort&&s.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function ae(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ie(e){return ae(e,se)}var oe="file://";function ue(e){return ae(e,oe)}var le="tfjs-backend-wasm.wasm";function ce(e){try{if(e==le&&v)return new Uint8Array(v);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){re(e)}}function de(){if(!v&&(l||c)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()})).catch((function(){return ce(le)}));if(f)return new Promise((function(e,t){f(le,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(le)}))}function pe(){var e={a:Ce};function t(e,t){var n=e.exports;s.asm=n,P((w=s.asm.i).buffer),V=s.asm.o,ne()}function n(e){t(e.instance)}function r(t){return de().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),re(e)}))}if(te(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(v||"function"!=typeof WebAssembly.instantiateStreaming||ie(le)||ue(le)||"function"!=typeof fetch?r(n):fetch(le,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function he(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?V.get(n)():V.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function fe(){re()}function me(e,t,n){$.copyWithin(e,t,t+n)}function ge(){return $.length}function ye(e){try{return w.grow(e-A.byteLength+65535>>>16),P(w.buffer),1}catch(e){}}function be(e){var t=ge(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ye(Math.min(n,B(Math.max(e,a),65536))))return!0}return!1}ie(le)||(le=x(le));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(D(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,R[xe.varargs-4>>2]},getStr:function(e){return M(e)},get64:function(e,t){return e}};function ve(e){return 0}function we(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=R[t+8*s>>2],o=R[t+(8*s+4)>>2],u=0;u<o;u++)xe.printChar(e,$[i+u]);a+=o}return R[r>>2]=a,0}function Ie(){return 6}function Se(e){return R[Ae()>>2]=e,e}function Ne(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Se(28),-1}var Te,Ce={a:fe,d:me,e:be,f:ve,c:we,b:ke,g:Ie,h:Ne},_e=(pe(),s.___wasm_call_ctors=function(){return(_e=s.___wasm_call_ctors=s.asm.j).apply(null,arguments)}),Ae=(s._init=function(){return(s._init=s.asm.k).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.l).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.m).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.n).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.p).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.q).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.r).apply(null,arguments)},s._All=function(){return(s._All=s.asm.s).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.t).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.u).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.v).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.w).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.x).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.y).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.z).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.A).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.B).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.C).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.D).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.E).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.F).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.G).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.H).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.I).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.J).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.K).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.L).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.M).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.N).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.O).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.P).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.Q).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.R).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.S).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.T).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.U).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.V).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.W).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.X).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Y).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.Z).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm._).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.$).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.aa).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.ba).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ca).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.da).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ea).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.fa).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ga).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.ha).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ia).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.ja).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.ka).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.la).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.ma).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.na).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.oa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.pa).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.qa).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ra).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.sa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.ta).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ua).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.va).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.wa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.xa).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.ya).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.za).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Aa).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Ba).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ca).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Da).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ea).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Fa).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ga).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Ha).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ia).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Ja).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ka).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.La).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Ma).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Na).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Oa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Pa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Qa).apply(null,arguments)},s.___errno_location=function(){return(Ae=s.___errno_location=s.asm.Ra).apply(null,arguments)}),Ee=s.stackSave=function(){return(Ee=s.stackSave=s.asm.Sa).apply(null,arguments)},$e=s.stackRestore=function(){return($e=s.stackRestore=s.asm.Ta).apply(null,arguments)},Re=s.stackAlloc=function(){return(Re=s.stackAlloc=s.asm.Ua).apply(null,arguments)};function Fe(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function De(e){function n(){Te||(Te=!0,s.calledRun=!0,S||(j(),X(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),K()))}e=e||u,Z>0||(q(),Z>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=_,ee=function e(){Te||De(),Te||(ee=e)},s.run=De,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return De(),e.ready});e.exports=a},6920:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>je,MathBackendWebGL:()=>Jn,forceHalfFloat:()=>tr,gpgpu_util:()=>a,setWebGLContext:()=>l,version_webgl:()=>er,webgl:()=>nr,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>pe,bindCanvasToFramebuffer:()=>P,bindColorTextureToFramebuffer:()=>V,bindTextureToProgramUniformSampler:()=>B,bindTextureUnit:()=>M,bindVertexBufferToProgramAttribute:()=>D,callAndCheck:()=>b,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>F,createProgram:()=>N,createStaticIndexBuffer:()=>A,createStaticVertexBuffer:()=>_,createTexture:()=>$,createVertexShader:()=>k,getBatchDim:()=>j,getExtensionOrThrow:()=>w,getFramebufferErrorMessage:()=>H,getMaxTexturesInShader:()=>ae,getNumChannels:()=>E,getProgramUniformLocation:()=>L,getProgramUniformLocationOrThrow:()=>z,getRowsCols:()=>X,getShapeAs3D:()=>K,getTextureShapeFromLogicalShape:()=>Y,getWebGLDisjointQueryTimerVersion:()=>se,getWebGLErrorMessage:()=>v,getWebGLMaxTextureSize:()=>te,hasExtension:()=>ie,isCapableOfRenderingToFloatTexture:()=>ue,isDownloadFloatTextureEnabled:()=>le,isReshapeFree:()=>Z,isWebGLFenceEnabled:()=>de,isWebGLVersionEnabled:()=>oe,linkProgram:()=>T,resetMaxTextureSize:()=>ne,resetMaxTexturesInShader:()=>re,unbindColorTextureFromFramebuffer:()=>W,unbindTextureUnit:()=>O,validateFramebuffer:()=>U,validateProgram:()=>C,validateTextureSize:()=>R});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>Be,createBufferFromOutputTexture:()=>We,createFloat16MatrixTexture:()=>Re,createFloat16PackedMatrixTexture:()=>Le,createFloat32MatrixTexture:()=>Ee,createIndexBuffer:()=>Ce,createPackedMatrixTexture:()=>Oe,createUnsignedBytesMatrixTexture:()=>De,createVertexBuffer:()=>Te,createVertexShader:()=>Ne,downloadByteEncodedFloatMatrixFromOutputTexture:()=>He,downloadFloat32MatrixFromBuffer:()=>Ue,downloadMatrixFromPackedOutputTexture:()=>qe,downloadPackedMatrixFromBuffer:()=>Ge,getInternalFormatForFloat16MatrixTexture:()=>$e,getInternalFormatForFloat16PackedMatrixTexture:()=>ze,getInternalFormatForFloat32MatrixTexture:()=>Ae,getInternalFormatForPackedMatrixTexture:()=>Me,getInternalFormatForUnsignedBytesMatrixTexture:()=>Fe,uploadDenseMatrixToTexture:()=>Pe,uploadPixelDataToTexture:()=>Ve});var s={};n.r(s),n.d(s,{addImpl:()=>dt.EH,bincountImpl:()=>pt.W,bincountReduceImpl:()=>pt.i,ceilImpl:()=>ht.__,concatImpl:()=>ft.j,equalImpl:()=>mt.tW,expImpl:()=>gt.Ro,expm1Impl:()=>yt.OF,floorImpl:()=>bt.r6,gatherNdImpl:()=>xt.m,gatherV2Impl:()=>vt.i,greaterEqualImpl:()=>kt.HL,greaterImpl:()=>wt.o,lessEqualImpl:()=>St.lx,lessImpl:()=>It.rO,linSpaceImpl:()=>Nt.b,logImpl:()=>Tt.vX,maxImpl:()=>Ct.B,maximumImpl:()=>_t.wS,minimumImpl:()=>At.vP,multiplyImpl:()=>Et.$3,negImpl:()=>$t.uC,notEqualImpl:()=>Rt.Gj,prodImpl:()=>Ft.Qg,rangeImpl:()=>Dt.b,rsqrtImpl:()=>Mt.zd,simpleAbsImpl:()=>ct.bk,sliceImpl:()=>Ot.rT,sparseFillEmptyRowsImpl:()=>zt.c,sparseReshapeImpl:()=>Lt.U,sparseSegmentReductionImpl:()=>Bt.V,squaredDifferenceImpl:()=>Pt.Hz,stridedSliceImpl:()=>Vt.t,stringNGramsImpl:()=>Wt.A,stringSplitImpl:()=>Ut.Q,stringToHashBucketFastImpl:()=>Ht.h,subImpl:()=>Gt.VY,tileImpl:()=>qt.R,topKImpl:()=>jt.W,transposeImpl:()=>Xt.H,uniqueImpl:()=>Kt.S});var i=n(8433);const o={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function l(e,t){o[e]=t}function c(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e?t.getContext("webgl",u)||t.getContext("experimental-webgl",u):t.getContext("webgl2",u)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],c(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var d,p,h;function f(e,t){return[t,e]}function m(e){const t=i.util.sizeFromShape(e),n=Math.ceil(t/4);return i.util.sizeToSquarishShape(n)}function g(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function y(e,t){const n=e;let r,a,s,o,u,l,c,d,p,h;return 2===(0,i.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,d=1,p=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,d=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:d,textureTypeHalfFloat:p,textureTypeFloat:h}}function b(e,t){const n=t();return(0,i.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+v(e,t))}(e),n}function x(e){return!!((0,i.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function v(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function w(e,t){return G(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function k(e,t){const n=G(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=G(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=S.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map(((e,t)=>i.util.rightPad((t+1).toString(),s)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),d=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${i.util.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(d.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(d||(d={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(p||(p={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(h||(h={}));const S=/ERROR: [0-9]+:([0-9]+):/g;function N(e){return G(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function T(e,t){if(b(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function C(e,t){if(b(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function _(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function A(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function E(){return 2===(0,i.env)().getNumber("WEBGL_VERSION")?1:4}function $(e){return G(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function R(e,t){const n=(0,i.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function F(e){return G(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function D(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),b(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),b(e,(()=>e.enableVertexAttribArray(o))),!0)}function M(e,t,n){q(e,n),b(e,(()=>e.activeTexture(e.TEXTURE0+n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function O(e,t){q(e,t),b(e,(()=>e.activeTexture(e.TEXTURE0+t))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function z(e,t,n){return G(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function L(e,t,n){return e.getUniformLocation(t,n)}function B(e,t,n,r){b(e,(()=>M(e,t,r))),b(e,(()=>e.uniform1i(n,r)))}function P(e){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),b(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function V(e,t,n){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function W(e,t){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function U(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+H(e,t))}function H(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function G(e,t,n){const r=b(e,(()=>t()));if(null==r)throw new Error(n);return r}function q(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function j(e,t=2){return i.util.sizeFromShape(e.slice(0,e.length-t))}function X(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function K(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[j(e),...X(e)]),t}function Y(e,t=!1){let n=(0,i.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.util.squeezeShape(e);e=t.newShape}let r=i.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=j(e);let n=2,a=2;return e.length&&([n,a]=X(e)),r=t*(n/2)*(a/2),i.util.sizeToSquarishShape(r).map((e=>2*e))}return i.util.sizeToSquarishShape(r)}function Q(e){return e%2==0}function Z(e,t){if(e=e.slice(-2),t=t.slice(-2),i.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Q(n)&&Q(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Q(e[0])&&Q(t[0])}let J,ee;function te(e){if(null==J){const t=c(e);J=t.getParameter(t.MAX_TEXTURE_SIZE)}return J}function ne(){J=null}function re(){ee=null}function ae(e){if(null==ee){const t=c(e);ee=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ee)}function se(e){if(0===e)return 0;let t;const n=c(e);return t=ie(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ie(n,"EXT_disjoint_timer_query")?1:0,t}function ie(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=c(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ue(e){if(0===e)return!1;const t=c(e);if(1===e){if(!ie(t,"OES_texture_float"))return!1}else if(!ie(t,"EXT_color_buffer_float"))return!1;return ce(t)}function le(e){if(0===e)return!1;const t=c(e);if(1!==e){if(ie(t,"EXT_color_buffer_float"))return ce(t);const e="EXT_color_buffer_half_float";if(ie(t,e)){const n=t.getExtension(e);return function(e,t){const n=y(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!ie(t,"OES_texture_float")&&(!!ie(t,"WEBGL_color_buffer_float")&&ce(t))}function ce(e){const t=y(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function de(e){return 2===e&&null!=c(e).fenceSync}function pe(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const he=(0,i.env)();function fe(){let e,t,n,r,a,s,o,u,l,c;return 2===(0,i.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function me(e,t,n="index"){const r=i.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function ge(e,t,n="index"){const r=i.util.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function ye(e){const t=i.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}he.registerFlag("HAS_WEBGL",(()=>he.getNumber("WEBGL_VERSION")>0)),he.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),he.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),he.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===he.get("WEBGL_VERSION"))),he.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),he.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),he.registerFlag("WEBGL_PACK",(()=>he.getBool("HAS_WEBGL"))),he.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_CLIP",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_PACK_REDUCE",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_LAZILY_UNPACK",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_CONV_IM2COL",(()=>he.getBool("WEBGL_PACK"))),he.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>te(he.getNumber("WEBGL_VERSION")))),he.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>ae(he.getNumber("WEBGL_VERSION")))),he.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=he.getNumber("WEBGL_VERSION");return 0===e?0:se(e)})),he.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>he.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.device_util.isMobile())),he.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ue(he.getNumber("WEBGL_VERSION")))),he.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!he.getBool("WEBGL_FORCE_F16_TEXTURES")&&he.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),he.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>le(he.getNumber("WEBGL_VERSION")))),he.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>de(he.getNumber("WEBGL_VERSION")))),he.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>he.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),he.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),he.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>i.device_util.isMobile()&&he.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),he.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),he.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),he.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),he.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const be="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class xe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=d.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class ve{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=d.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class we{constructor(e){this.variableNames=["A"],this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ke{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=p.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ie{constructor(e,t,n=!1){this.variableNames=["A"];const r=fe(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ye(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Se{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=fe(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ye(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function Ne(e){const t=fe();return k(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Te(e){return _(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ce(e){return A(e,new Uint16Array([0,1,2,2,1,3]))}function _e(e,t,n,r,a,s){R(t,n);const i=$(e),o=e.TEXTURE_2D;return b(e,(()=>e.bindTexture(o,i))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),b(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Ae(e){return e.internalFormatFloat}function Ee(e,t,n,r){const[a,s]=f(t,n);return _e(e,a,s,Ae(r),r.textureFormatFloat,e.FLOAT)}function $e(e){return e.internalFormatHalfFloat}function Re(e,t,n,r){const[a,s]=f(t,n);return _e(e,a,s,$e(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Fe(e){return e.downloadTextureFormat}function De(e,t,n,r){const[a,s]=f(t,n);return _e(e,a,s,Fe(r),e.RGBA,e.UNSIGNED_BYTE)}function Me(e){return e.internalFormatPackedFloat}function Oe(e,t,n,r){const[a,s]=g(t,n);return _e(e,a,s,Me(r),e.RGBA,e.FLOAT)}function ze(e){return e.internalFormatPackedHalfFloat}function Le(e,t,n,r){const[a,s]=g(t,n);return _e(e,a,s,ze(r),e.RGBA,r.textureTypeHalfFloat)}function Be(e,t,n){return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),D(e,t,"clipSpacePos",n,3,20,0)&&D(e,t,"uv",n,2,20,12)}function Pe(e,t,n,r,a,s){let i,o,u;b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Ve(e,t,n){b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function We(e,t,n,r){const a=e.createBuffer();b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return b(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function Ue(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function He(e,t,n,r){const[a,s]=f(t,n),i=new Uint8Array(t*n*4);return b(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function Ge(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=g(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function qe(e,t,n){const r=new Float32Array(t*n*4);return b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class je{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,i.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,l(t,e)):this.gl=c(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,i.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=w(this.gl,e),ie(this.gl,t))this.textureHalfFloatExtension=w(this.gl,t);else if((0,i.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ie(this.gl,r))this.colorBufferHalfFloatExtension=w(this.gl,r);else if((0,i.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ie(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ie(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Te(this.gl),this.indexBuffer=Ce(this.gl),this.framebuffer=F(this.gl),this.textureConfig=y(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;b(e,(()=>e.finish())),b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.deleteFramebuffer(this.framebuffer))),b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),b(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),Re(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),De(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Ve(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),Pe(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Le(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Oe(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(W(this.gl,this.framebuffer),this.outputTexture=null),b(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>He(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Ge(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ue(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=We(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>qe(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=I(t,e);null==this.vertexShader&&(this.vertexShader=Ne(t));const r=N(t);return b(t,(()=>t.attachShader(r,this.vertexShader))),b(t,(()=>t.attachShader(r,n))),T(t,r),this.debug&&C(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=Be(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&b(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&C(this.gl,this.program),b(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?z(this.gl,e,t):L(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),b(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),B(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=g(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&C(this.gl,this.program),U(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),b(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),b(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=w(this.gl,2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||i.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),V(this.gl,e,this.framebuffer),this.debug&&U(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(V(this.gl,this.outputTexture,this.framebuffer),this.debug&&U(this.gl)):W(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;V(r,e,this.framebuffer),this.debug&&U(r),this.outputTexture=e,b(r,(()=>r.viewport(0,0,t,n))),b(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),b(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Xe}=i.backend_util;function Ke(e,t,n){const r=[];if(e.forEach((e=>{const t=i.util.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=st(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?Qe(e,r):Ye(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;return s.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Xe(e.shapeInfo.logicalShape,t.logicalShape),l=at(o),c=o-s;let d;const p=["x","y","z","w","u","v"];d=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let h="";h=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===i.util.sizeFromShape(e.shapeInfo.logicalShape),g=1===i.util.sizeFromShape(t.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=s-2,t=s-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      vec4 outputValue = get${r}(${h});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&i.util.arraysEqual(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=at(l),d=Xe(e.shapeInfo.logicalShape,t.logicalShape),p=l-u;let h;const f=["x","y","z","w","u","v"];h=0===u?"":l<2&&d.length>=1?"coords = 0;":d.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${m});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=fe(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Ze}\n    ${Je}\n    ${et}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.util.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return i.util.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ge(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=me(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ge(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=me(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=me(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=me(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(p+=tt),[p,l,d,a,c,s,n.userCode].join("\n")}function Ye(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=nt(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${rt(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=nt(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&i.util.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=i.util.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${Ye(it(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ot(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${rt(e)}\n      }\n    `;const c=s[0],d=s[1],p=nt(r);return 1===d?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${p}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${p}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${d}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${p};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${p};\n    vec2 uv = uvFromFlat(${c}, ${d}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=i.util.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Ye(it(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ot(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${o}, 1)));\n        ${rt(e)}\n      }\n    `;const d=e.shapeInfo.texShape,p=d[0],h=d[1],f=e.shapeInfo.flatOffset;if(h===s&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${p}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${p}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=nt(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${p}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],o=n[2]*s,u=n[1]*o,{newShape:l,keptDims:c}=i.util.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Ye(it(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ot(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${s}, 1)));\n        ${rt(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===s&&null==d)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=nt(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,u=t[1]*o,{newShape:l,keptDims:c}=i.util.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Ye(it(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ot(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${rt(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,h=p[0],f=p[1];if(f===u&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==d)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${nt(n)};\n      vec2 uv = uvFromFlat(${h}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=i.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Ye(it(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ot(t,s)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,d=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${d}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${rt(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===d&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${d} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${nt(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Qe(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${fe().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=fe();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=s[0],u=s[1],l=fe();if(null!=s&&i.util.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${Qe(it(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ot(s,r)});\n        }\n      `}const o=fe();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=fe();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[i-1]/2);let p=d*Math.ceil(s[i-2]/2),h="int b, int row, int col",f=`b * ${p} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)h=`int b${e}, `+h,p*=s[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${h}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Ze="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Je="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",et="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function nt(e){return`offset${e}`}function rt(e){const t=e.name,n=i.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function at(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function st(e,t,n){const{newShape:r}=i.util.squeezeShape(t),a=t.length,s=e&&3===a&&1===t[0],o=s?t.slice(1):r,u=!e&&a>1&&!i.util.arraysEqual(t,n)&&r.length<a||s;return{useSqueezeShape:u,uniformShape:u?o:t}}function it(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ot(e,t){return t.map((t=>e[t])).join(", ")}function ut(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!i.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!i.util.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function lt(e){return(0,i.env)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var ct=n(224),dt=n(2779),pt=n(8607),ht=n(4769),ft=n(8926),mt=n(7679),gt=n(1211),yt=n(969),bt=n(6574),xt=n(1820),vt=n(4468),wt=n(6272),kt=n(6259),It=n(8405),St=n(635),Nt=n(1325),Tt=n(5223),Ct=n(5126),_t=n(1717),At=n(612),Et=n(1917),$t=n(854),Rt=n(8584),Ft=n(9560),Dt=n(9230),Mt=n(7742),Ot=n(2578),zt=n(2123),Lt=n(3849),Bt=n(3989),Pt=n(212),Vt=n(2210),Wt=n(6841),Ut=n(8639),Ht=n(6626),Gt=n(1649),qt=n(7723),jt=n(9556),Xt=n(7107),Kt=n(5638);const{addImpl:Yt,bincountImpl:Qt,bincountReduceImpl:Zt,ceilImpl:Jt,concatImpl:en,equalImpl:tn,expImpl:nn,expm1Impl:rn,floorImpl:an,gatherNdImpl:sn,gatherV2Impl:on,greaterImpl:un,greaterEqualImpl:ln,lessImpl:cn,lessEqualImpl:dn,linSpaceImpl:pn,logImpl:hn,maxImpl:fn,maximumImpl:mn,minimumImpl:gn,multiplyImpl:yn,negImpl:bn,notEqualImpl:xn,prodImpl:vn,rangeImpl:wn,rsqrtImpl:kn,simpleAbsImpl:In,sliceImpl:Sn,sparseFillEmptyRowsImpl:Nn,sparseReshapeImpl:Tn,sparseSegmentReductionImpl:Cn,stridedSliceImpl:_n,stringNGramsImpl:An,stringSplitImpl:En,stringToHashBucketFastImpl:$n,subImpl:Rn,tileImpl:Fn,topKImpl:Dn,transposeImpl:Mn,uniqueImpl:On}=s;function zn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Ln(e,t){return 1===t?[e]:zn(e,t)}class Bn{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Ln("rc",t),r=at(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Pn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${me(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${ye(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Vn{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Un(t,n),a=Hn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Wn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===h.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===h.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===h.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===h.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===h.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Un(n,r),s=Hn(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=Wn(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,i.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[s],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Wn(e,t,n,r,a){const s=function(e,t){switch(e){case h.PACKED_2X2_FLOAT32:return Me(t);case h.PACKED_2X2_FLOAT16:return ze(t);case h.UNPACKED_FLOAT32:return Ae(t);case h.UNPACKED_FLOAT16:return $e(t);case h.PACKED_4X1_UNSIGNED_BYTE:return Fe(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=g(e[0],e[1]);i=t*n}else{const[t,n]=f(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function Un(e,t){if(e===p.UPLOAD)return h.PACKED_2X2_FLOAT32;if(e===p.RENDER||null==e)return function(e){return(0,i.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?h.PACKED_2X2_FLOAT32:h.UNPACKED_FLOAT32:e?h.PACKED_2X2_FLOAT16:h.UNPACKED_FLOAT16}(t);if(e===p.DOWNLOAD||e===p.PIXELS)return h.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Hn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Gn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const qn="return abs(x);",jn="return x;";class Xn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Kn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Ln("rc",t),r=at(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Yn=i.kernel_impls.whereImpl,Qn={},Zn=(0,i.env)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Jn extends i.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=c((0,i.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,i.env)().getNumber("WEBGL_VERSION"))in Qn||(Qn[t]={}),Qn[t]),this.gpgpu=new je(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Vn(this.gpgpu),this.numMBBeforeWarning=null==(0,i.env)().global.screen?1024:(0,i.env)().global.screen.height*(0,i.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.DataStorage(this,(0,i.engine)())}nextDataId(){return Jn.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,i.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:p.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if((0,i.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:p.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:u}=t;if(null!=s){let t;t=u?new Xn(o,jn):new Gn(o,jn);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,d;if(l&&(c=i.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);d=i.backend_util.mergeRealAndImagArrays(e,t)}else d=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.util.now()-c),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:u}=t;if(null!=a){let t;t=u?new Xn(r,jn):new Gn(r,jn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,i.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,d=null;if("complex64"!==s&&(0,i.env)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);d=this.gpgpu.createBufferFromTexture(t.texture,...m(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=i.backend_util.mergeRealAndImagArrays(t,n)}else if(null==d)c=this.getValuesFromTexture(e);else{const e=i.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(d,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=d){const e=this.gpgpu.gl;b(e,(()=>e.deleteBuffer(d)))}const p=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.engine)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>i.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,i.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=i.util.sizeFromShape(t);if((0,i.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...m(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=(0,i.env)().getBool("WEBGL_PACK")&&!0===r,o=s?K(t):t,u=s?new ke(o):new we(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),d}timerAvailable(){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=i.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=i.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=i.util.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.util.now(),endMs:null}}endTimer(e){return(0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.util.now(),e)}async getQueryTime(e){if((0,i.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Zn){return(0,i.env)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Yn(e.shape,t)}packedUnaryOp(e,t,n){const r=new Xn(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,i.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=In(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,qn,e.dtype);const t=new Gn(e.shape,qn),n=this.compileAndRun(t,[e]);return(0,i.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&i.util.isString(n[0])){const a=n.map((e=>i.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,i.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Kn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Bn(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[j(e.shape),...X(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[j(t),...X(t)],s=new Pn(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=K(r);let i;return i=n?new ve(s):new xe(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===d.DENSE){const t=m(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===i.util.sizeFromShape(s.shape))return o.values=i.util.getTypedArrayFromDType(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.util.sizeFromShape(t.shape)<=(0,i.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Z(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:u}=st(e.packedInputs,t.shape,s);let l="",c="",d="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=i.util.computeStrides(u);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${u[0]>1}_${u[1]>1}`;const p=t.shape.length,h=2===p&&i.util.arraysEqual(t.shape,s),f=1===i.util.sizeFromShape(t.shape),m=i.backend_util.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&i.util.arraysEqual(s,n.texData.texShape),y=e.packedInputs||p>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${p}_${g}_${o}_${u.length}_${f}_${m}_${h}_${l}_${c}_${d}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${(0,i.env)().getNumber("WEBGL_VERSION")}`,s}(e,l,c),h=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ke(a,o,t),l=e.createProgram(u);let c=null;const d=e.getUniformLocation(l,"NAN",!1);1===(0,i.env)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p=!1,h={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];h[r]=e.getUniformLocation(l,r,p),h[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,p),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,p),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",p),b=e.getUniformLocation(l,"outShapeStrides",p),y=e.getUniformLocation(l,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,p)})),{program:t,source:u,webGLProgram:l,uniformLocations:h,customUniformLocations:x,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:d,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),f=null!=this.activeTimers;let g;f&&(g=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(ut(t.inShapeInfos,n),ut([t.outShapeInfo],[r]));const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,o[0],o[1]):e.setOutputMatrixTexture(s,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,i.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:r}=st(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(i.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=i.util.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,h,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,i.env)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=i.util.now();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,i.env)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,i.env)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.tidy)((()=>{if(!(0,i.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i.env)().getBool("DEBUG");(0,i.env)().set("DEBUG",!1);const t=this.abs((0,i.scalar)(1e-8)).dataSync()[0];if((0,i.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:u}=t;if(null!=s)return;const l=null!=this.activeTimers;let c;l&&(c=i.util.now());let d=t.texShape;if(null==d&&(d=Y(n,u),t.texShape=d),null!=a){const e=K(n);let s,o=d[1],h=d[0];const f=a instanceof Uint8Array;u?([o,h]=g(d[0],d[1]),s=new Se(e,[h,o],f)):s=new Ie(e,[h,o],f);const m=this.makeTensorInfo([h,o],r);this.texData.get(m.dataId).usage=f?p.PIXELS:p.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,h,a);const y=!0,b=this.runWebGLProgram(s,[m],r,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=i.util.now()-c)}else{const e=this.acquireTexture(d,o,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*i.util.bytesPerElement(t)}}Jn.nextDataId=0;const er="3.8.0";function tr(){(0,i.env)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.device_util.isBrowser()&&(0,i.registerBackend)("webgl",(()=>new Jn),2);const nr={forceHalfFloat:tr};class rr{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class ar{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=lt(a);let s="";if(r)if(0===a||1===i.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${at(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Ln("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function sr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ir={kernelName:i.Identity,backendName:"webgl",kernelFunc:sr};function or(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=sr({inputs:{x:r},backend:n}),u=sr({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const ur={kernelName:i.Complex,backendName:"webgl",kernelFunc:or},lr="return (a < 0.) ? b * a : a;",cr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",dr={kernelName:i.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",i.util.createScalarValue(s,"float32")),u=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(cr,a.shape,o.shape):new rr(lr,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),l}},pr="return (a < 0.) ? b * a : a;",hr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",fr={kernelName:i.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(hr,r.shape,a.shape):new rr(pr,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function mr({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,u=s,l=r||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Xn(o.shape,t):new Gn(o.shape,e),u.runWebGLProgram(c,[o],l)}}function gr({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,d=u;if(r&&"complex64"===l.dtype){const t=d.texData.get(l.dataId),n=d.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new rr(e,l.shape,c.shape);return d.runWebGLProgram(o,[a,s],(0,i.upcastType)(n.dtype,r.dtype))})),s=or({inputs:{real:r,imag:a},backend:d});return d.disposeIntermediateTensorInfo(r),d.disposeIntermediateTensorInfo(a),s}const p=s||(0,i.upcastType)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||d.shouldExecuteOnCPU([l,c]))&&null!=a){const e=d.texData.get(l.dataId).values,t=d.texData.get(c.dataId).values,n="string"===l.dtype?i.backend_util.fromUint8ToStringArray(e):e,r="string"===l.dtype?i.backend_util.fromUint8ToStringArray(t):t,[s,o]=a(l.shape,c.shape,n,r,p),u=d.makeTensorInfo(o,p);return d.texData.get(u.dataId).values=s,u}let h;return h=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new ar(t,l.shape,c.shape,n):new rr(e,l.shape,c.shape),d.runWebGLProgram(h,[l,c],p)}}function yr(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?hr:pr;if("leakyrelu"===e)return t?cr:lr;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class br{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",p=a?"rc.z, i * 2":"i * 2, rc.z",h=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${h[0]} * ${f[0]});\n          result += (${h[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class xr{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const vr="return a * b;";function wr(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=i.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new xr("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new xr("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=or({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=yn(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let o;return o=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(vr,r.shape,a.shape):new rr(vr,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const kr={kernelName:i.Multiply,backendName:"webgl",kernelFunc:wr};function Ir(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,u=i.util.sizeFromShape(a.shape),l=i.util.inferFromImplicitShape(s,u),c=i.util.sizeFromShape(l);i.util.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const d=o.texData.get(a.dataId);return!d.isPacked||Z(a.shape,l)||null!==d.texture&&Z(d.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[j(e.shape),...X(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[j(t),...X(t)],i=new Pn(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,o)}const Sr={kernelName:i.Reshape,backendName:"webgl",kernelFunc:Ir};class Nr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${i.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Tr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let h="";a%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${h}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function Cr(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=i.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new Nr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Nr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Tr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class _r{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=at(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Ar{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=at(this.rank),a=zn("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Er(e,t,n){const r=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ar(e.shape,t):new _r(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function $r(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=i.util.parseAxisParam(a,e.shape);let u=o;const l=i.backend_util.getAxesPermutation(u,s),c=null!=l;let d=e;c&&(d=Er(e,l,r),u=i.backend_util.getInnerMostAxes(u.length,s)),i.backend_util.assertAxesAreInnerMostDims("sum",u,s);const[p,h]=i.backend_util.computeOutAndReduceShapes(d.shape,u);let f=p;n&&(f=i.backend_util.expandShapeToKeepDim(p,o));const m=i.util.sizeFromShape(h),g=Ir({inputs:{x:d},attrs:{shape:[i.util.sizeFromShape(e.shape)/m,m]},backend:r}),y=Cr(g,(0,i.sumOutType)(e.dtype),"sum",r),b=Ir({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(d),b}(a,s,o,n)}const Rr={kernelName:i.Sum,backendName:"webgl",kernelFunc:$r};function Fr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=Mn(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=Er(a,s,i);return l}const Dr={kernelName:i.Transpose,backendName:"webgl",kernelFunc:Fr};function Mr({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,d=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[d-1]:t.shape[d-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[d-2]:t.shape[d-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=i.util.sizeFromShape(g),x=i.util.sizeFromShape(y),v=b===x||1===b||1===x;i.util.assert(c>=2&&d>=2&&v,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const w=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);i.util.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,p,f]:[b,f,p],I=r?[x,m,h]:[x,h,m],S=Ir({inputs:{x:e},backend:a,attrs:{shape:k}}),N=Ir({inputs:{x:t},backend:a,attrs:{shape:I}}),T=[S,N],C=Math.max(b,x),_=n?S.shape[1]:S.shape[2],A=null!=s,E=null!=o,$="leakyrelu"===l,R=null!=l?yr(l,!0):null;let F;if((1===f||1===m)&&_>1e3&&!1===(A||E||$||null!=R)){let e=S,t=N;n&&(e=Fr({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=Fr({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const s=1===m;let i=e;1!==m&&(i=Ir({inputs:{x:e},backend:a,attrs:{shape:[C,_,1]}}),T.push(i));const o=1===m?2:1;let u=t;s&&(u=Ir({inputs:{x:t},backend:a,attrs:{shape:[C,1,_]}}),T.push(u));const l=wr({inputs:{a:i,b:u},backend:a});F=$r({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const l=(0,i.upcastType)(e.dtype,t.dtype),c=new br(k,I,[C,f,m],n,r,A,R,E,$),d=[S,N];if(null!=s&&d.push(s),E&&d.push(o),$){const e=a.makeTensorInfo([],"float32",i.util.createScalarValue(u,"float32"));d.push(e),T.push(e)}F=a.runWebGLProgram(c,d,l)}const D=Ir({inputs:{x:F},backend:a,attrs:{shape:w}});T.push(F);for(const e of T)a.disposeIntermediateTensorInfo(e);return D}const Or={kernelName:i._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return Mr({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},zr="return abs(x);",Lr={kernelName:i.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=In(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xn(r.shape,zr):new Gn(r.shape,zr),n.runWebGLProgram(a,[r],r.dtype)}},Br=mr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Pr={kernelName:i.Acos,backendName:"webgl",kernelFunc:Br},Vr=mr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Wr={kernelName:i.Acosh,backendName:"webgl",kernelFunc:Vr},Ur="return a + b;",Hr=gr({opSnippet:Ur,packedOpSnippet:Ur,supportsComplex:!0,cpuKernelImpl:Yt}),Gr={kernelName:i.Add,backendName:"webgl",kernelFunc:Hr};class qr{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class jr{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Xr={kernelName:i.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return sr({inputs:{x:a[0]},backend:r});if(a.length>(0,i.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>(0,i.upcastType)(e,t))),o=a.map((e=>e.shape)),u=(0,i.env)().getBool("WEBGL_PACK")?new jr(a[0].shape,o):new qr(a[0].shape,o);return r.runWebGLProgram(u,a,s)}},Kr={kernelName:i.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const d=i.backend_util.getAxesPermutation(c,u);let p=a;null!=d&&(p=Fr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=i.backend_util.getInnerMostAxes(c.length,u)),i.backend_util.assertAxesAreInnerMostDims("all",c,u);const[h,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=Ir({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"all",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},Yr={kernelName:i.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const d=i.backend_util.getAxesPermutation(c,u);let p=a;null!=d&&(p=Fr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=i.backend_util.getInnerMostAxes(c.length,u)),i.backend_util.assertAxesAreInnerMostDims("any",c,u);const[h,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=Ir({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"any",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}};class Qr{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Zr{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=at(u),c=Ln("coords",u);let d,p;if(1===s){p=u+1;const e=at(p);d=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else p=u,d=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const h=["x","y","z","w","u","v"].slice(0,p),f="."+h[p-1],m=h.map((e=>"int "+e)),g=Ln("sourceLocR",p-1).concat("inIdx.r"),y=Ln("sourceLocG",p-1).concat("inIdx.g"),b=Ln("sourceLocB",p-1).concat("inIdx.b"),x=Ln("sourceLocA",p-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${d}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Jr(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=i.backend_util.computeOptimalWindowSize(s),u={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},l=new Qr(u,n,null==r),c=[t];null!=r&&c.push(r);const d=e.runWebGLProgram(l,c,"int32");if(1===d.shape[1])return d;const p=Jr(e,t,n,d);return e.disposeIntermediateTensorInfo(d),p}function ea(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],o=i.backend_util.computeOptimalWindowSize(s),u=new Zr(a,o,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=ea(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function ta(e,t,n,r){const a=[n];if(i.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,i.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,o]=i.backend_util.computeOutAndReduceShapes(t.shape,a),u=i.util.sizeFromShape(o),l=Ir({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(l);const c=Jr(e,l,r);n.push(c);const d=Ir({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return ea(e,t,r)}const na={kernelName:i.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.util.parseAxisParam(s,a.shape);const u=i.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Fr({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const d=ta(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},ra={kernelName:i.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.util.parseAxisParam(s,a.shape);const u=i.backend_util.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Fr({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.backend_util.getInnerMostAxes(o.length,l.shape.length)),i.backend_util.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const d=ta(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},aa=mr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),sa={kernelName:i.Asin,backendName:"webgl",kernelFunc:aa},ia=mr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),oa={kernelName:i.Asinh,backendName:"webgl",kernelFunc:ia},ua=mr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),la={kernelName:i.Atan,backendName:"webgl",kernelFunc:ua},ca=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),da={kernelName:i.Atan2,backendName:"webgl",kernelFunc:ca},pa=mr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),ha={kernelName:i.Atanh,backendName:"webgl",kernelFunc:pa};class fa{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=e.padInfo.top,h=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${h});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class ma{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${h};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${h} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");const w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}}const ga={kernelName:i.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"avgPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.backend_util.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.util.arraysEqual(c.inShape,c.outShape))return sr({inputs:{x:a},backend:n});const d=new fa(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}},ya={kernelName:i.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,d=i.backend_util.computePool3DInfo(a.shape,s,o,[1,1,1],u,l,c),p=new ma(d,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class ba{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xa{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${h}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const va={kernelName:i.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=i.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,d),h=new xa(p);return n.runWebGLProgram(h,[a],o.dtype)}},wa={kernelName:i.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;pe([a,s],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,d=i.backend_util.computePool2DInfo(o.shape,u,l,1,c),p=new ba(d);return n.runWebGLProgram(p,[a],o.dtype)}},ka={kernelName:i.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Mr({a,b:s,transposeA:i,transposeB:o,backend:n})}};class Ia{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Sa{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.backend_util.assertAndGetBroadcastShape(e,t),i.backend_util.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(i.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(i.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Na={kernelName:i.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:u}=e;i.util.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.util.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.util.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,a,s];let d=null;null!=o&&(d=o.shape,c.push(o));let p=null;null!=u&&(p=u.shape,c.push(u));const h=(0,i.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Sa(r.shape,a.shape,s.shape,d,p,l):new Ia(r.shape,a.shape,s.shape,d,p,l);return t.runWebGLProgram(h,c,c[0].dtype)}};class Ta{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ca.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Ca[t]} = start[${t}] + coords.${Ca[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ca=["x","y","z","w","u","v"];class _a{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=at(this.rank),n=Ln("coords",this.rank),r=Ln("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Aa(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[u,l]=i.slice_util.parseSliceParams(a,s,o);if(i.slice_util.assertParamsValid(a,u,l),0===i.util.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Sn(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),d=i.slice_util.isSliceContinous(a.shape,u,l);if(c||!d){const e=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new _a(l):new Ta(l),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=i.slice_util.computeFlatOffset(t,i.util.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),s}(a,u,l,n)}const Ea={kernelName:i.Slice,backendName:"webgl",kernelFunc:Aa},$a={kernelName:i.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;i.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=i.backend_util.getReshaped(a.shape,s,u),c=i.backend_util.getPermuted(l.length,s.length),d=i.backend_util.getReshapedPermuted(a.shape,s,u),p=i.backend_util.getSliceBeginCoords(o,s.length),h=i.backend_util.getSliceSize(d,o,s.length),f=[],m=Ir({inputs:{x:a},backend:n,attrs:{shape:l}}),g=Fr({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Ir({inputs:{x:g},backend:n,attrs:{shape:d}}),b=Aa({inputs:{x:y},backend:n,attrs:{begin:p,size:h}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Ra={kernelName:i.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=Qt(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},Fa=gr({opSnippet:"return float(a != b);",cpuKernelImpl:xn,dtype:"bool"}),Da={kernelName:i.NotEqual,backendName:"webgl",kernelFunc:Fa};function Ma(e){const{inputs:t,backend:n}=e,{input:r}=t;return sr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Oa={kernelName:i.Real,backendName:"webgl",kernelFunc:Ma},za={kernelName:i.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return sr({inputs:{x:s},backend:r});const t=i.zeros(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=or({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Ma({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!i.util.hasEncodingLoss(s.dtype,o)){const e=sr({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Gn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",i.util.getTypedArrayFromDType("bool",1)),t=Fa({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},La="return ceil(x);",Ba=mr({opSnippet:La,packedOpSnippet:La,cpuKernelImpl:Jt}),Pa={kernelName:i.Ceil,backendName:"webgl",kernelFunc:Ba};class Va{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Wa{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Ua={kernelName:i.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let u;u=(0,i.env)().getBool("WEBGL_PACK_CLIP")?new Wa(a.shape):new Va(a.shape);const l=[[s],[o]];return n.runWebGLProgram(u,[a],a.dtype,l)}};class Ha{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Ga(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const qa={kernelName:i.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Ha(r.shape),i=[Ga(r,a.complexTensorInfos.real),Ga(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class ja{constructor(e){this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Xa{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=at(r),s=Ln("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),d=o.join();let p=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${d}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];p+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Ka(o,l,t)}),\n            vec2(${Ka(c,l,t)}));\n        }`}const h=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${h}(${Ka(o,l,f)}),\n          vec2(${Ka(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function Ka(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Ya(e){const{inputs:t,backend:n}=e,{input:r}=t;return sr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Qa={kernelName:i.Imag,backendName:"webgl",kernelFunc:Ya};function Za(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Ma({inputs:{input:e},backend:n}))),a=e.map((e=>Ya({inputs:{input:e},backend:n}))),s=Za(r,t,n),i=Za(a,t,n),o=or({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=i.util.sizeFromShape(e.shape.slice(t));return Ir({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=i.backend_util.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],l=en(s,o,r,u),c=i.backend_util.computeOutShape(e.map((e=>e.shape)),t),d=n.makeTensorInfo(c,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}if(e.length>(0,i.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Za(e.slice(0,r),t,n),s=Za(e.slice(r),t,n),i=Za([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if((0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Xa(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:o}=function(e,t,n){const r=i.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Ir({inputs:{x:e},attrs:{shape:[-1,i.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new ja(s.map((e=>e.shape))),l=n.runWebGLProgram(u,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Ir({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Ja(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=i.util.parseAxisParam(a,t[0].shape)[0],o=i.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===i.util.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>i.util.sizeFromShape(e.shape)>0));if(1===u.length)return sr({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return i.backend_util.assertParamsConsistent(l,s),Za(u,s,n)}const es={kernelName:i.Concat,backendName:"webgl",kernelFunc:Ja};class ts{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",v="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${h}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${h}) *\n                    getW(wR, wC, ${h}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${h}, xR, xC) *\n                    getW(wR, wC, ${h}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${h}, d2),\n                getW(wR, wC, ${h} + 1, d2),\n                getW(wR, wC, ${h} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${h}),\n                  getX(batch, xR, xC, ${h} + 1),\n                  getX(batch, xR, xC, ${h} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${h}, xR, xC),\n                  getX(batch, ${h} + 1, xR, xC),\n                  getX(batch, ${h} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class ns{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,p=e.filterWidth,h=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${h}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${h}) *\n                  getW(wF, wR, wC, ${h}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${h}),\n                  getX(batch, xF, xR, xC, ${h} + 1),\n                  getX(batch, xF, xR, xC, ${h} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${h}, d2),\n                  getW(wF, wR, wC, ${h} + 1, d2),\n                  getW(wF, wR, wC, ${h} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rs{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:d}=n,{left:p,top:h}=o,f=a*r,m=fe(),g="channelsLast"===d,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${h};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${p}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function as({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),d=n.inChannels,p=l[0]*l[1]*l[2],h=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===p||1===h)&&d>1e3,b=l[2]%2!=0&&!!c.isPacked;if(!y&&(0,i.env)().getBool("WEBGL_LAZILY_UNPACK")&&(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const d=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),p={dataId:e.dataId,shape:[1,d,n.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,i.util.assert(Z(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const y=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const b=Mr({a:p,b:y,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o}),x=r.texData.get(b.dataId);i.util.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,x.shape=n.outShape,m=sr({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const i=Ir({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Mr({a:i,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o});m=Ir({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),g.push(i),g.push(c),g.push(d)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function ss({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:d,outWidth:p,outHeight:h,dataFormat:f}=n,m="channelsLast"===f,g=l*c*d,y=h*p,b=[g,y],x=[],v=Ir({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,g,i.util.sizeFromShape(t.shape)/g]}});x.push(v),x.push(w);const k=new rs(b,v.shape,n),I=r.runWebGLProgram(k,[v],"float32"),S=Ir({inputs:{x:I},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(S);const N=null!=a,T=null!=s,C="leakyrelu"===u,_=u?yr(u,!0):null,A=new br(S.shape,w.shape,[1,y,n.outChannels],!0,!1,N,_,T,C),E=[S,w];if(a&&E.push(a),T&&E.push(s),C){const e=r.makeTensorInfo([],"float32",i.util.createScalarValue(o,"float32"));E.push(e),x.push(e)}const $=r.runWebGLProgram(A,E,"float32"),R=Ir({inputs:{x:$},backend:r,attrs:{shape:m?[1,h,p,n.outChannels]:[1,n.outChannels,h,p]}});x.push($);for(const e of x)r.disposeIntermediateTensorInfo(e);return R}const is={kernelName:i.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:d}=r,p=i.backend_util.convertConv2DDataFormat(l),h=i.backend_util.computeConv2DInfo(a.shape,s.shape,o,c,u,d,!1,p);let f;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if((0,i.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=ss({x:a,filter:s,convInfo:h,backend:n});else{const e=new ts(h);f=n.runWebGLProgram(e,[a,s],"float32")}else f=as({x:a,filter:s,convInfo:h,backend:n});const m=Ir({inputs:{x:f},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class os{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class us{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ls{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ds={kernelName:i.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:d}=r,p=i.backend_util.convertConv2DDataFormat(l),h=i.backend_util.computeConv2DInfo(a.shape,d,o,1,u,c,!1,p),f=new os(h);return n.runWebGLProgram(f,[a,s],"float32")}},ps={kernelName:i.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:d}=r,p=i.backend_util.convertConv2DDataFormat(c),h=i.backend_util.computeConv2DInfo(o,s.shape,u,1,l,d,!1,p),f=new us(h);return n.runWebGLProgram(f,[a,s],"float32")}},hs={kernelName:i.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.backend_util.computeConv3DInfo(a.shape,s.shape,o,l,u),d=new ns(c);return n.runWebGLProgram(d,[a,s],"float32")}},fs={kernelName:i.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,filterShape:l}=r,c=i.backend_util.computeConv3DInfo(a.shape,l,o,1,u),d=new ls(c);return n.runWebGLProgram(d,[a,s],"float32")}},ms={kernelName:i.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:u,inputShape:l}=r,c=i.backend_util.computeConv3DInfo(l,s.shape,u,1,o),d=new cs(c);return n.runWebGLProgram(d,[a,s],"float32")}},gs=mr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ys={kernelName:i.Cos,backendName:"webgl",kernelFunc:gs},bs=mr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),xs={kernelName:i.Cosh,backendName:"webgl",kernelFunc:bs};class vs{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const p="bilinear"===r?1:0,[h,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${h} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${h}`],[b,x,v]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${h} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const ws={kernelName:i.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new vs(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class ks{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Is(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${at(r)} coords = getOutputCoords();\n        int end = ${Ss(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Ss(r,"coords")} = idx;\n          val += getX(${Is(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Is(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Ss(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Ns={kernelName:i.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:u}=r,l=a.shape.length,c=i.backend_util.getAxesPermutation([s],l);let d=a;null!=c&&(d=Fr({inputs:{x:a},backend:n,attrs:{perm:c}}));const p=i.backend_util.getInnerMostAxes(1,l)[0];if(p!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=d.shape[p];let f=sr({inputs:{x:d},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new ks(d.shape,!1,u),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new ks(d.shape,o,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Fr({inputs:{x:f},backend:n,attrs:{perm:i.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(d),e}return f}},Ts={kernelName:i.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Qt(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Zt(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Cs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const _s={kernelName:i.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r;i.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const u=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],d="NHWC"===o?a.shape[3]:a.shape[1],p=l*s,h=c*s,f=d/(s*s),m=new Cs("NHWC"===o?[u,p,h,f]:[u,f,p,h],s,o);return n.runWebGLProgram(m,[a],a.dtype)}};class As{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,d=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Es{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,o=e.inHeight,u=e.inWidth,l=e.padInfo.top,c=e.padInfo.left,d=e.strideHeight,p=e.strideWidth,h=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,y=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<m;e++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*h};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let t=0;t<(y+1)/2;t++){const n=2*t,r=n*f;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===p){if(n<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,b+=1===f&&r>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${u}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,r+1<g)){const e=c%2==0?i.util.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(b+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,f>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${u}) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else r<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1 - ${p};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${u} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${u}) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,r+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${p};\n                  if(xCOffset >= 0 && xCOffset < ${u}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${p};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,r+1<g&&(b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<g&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<g&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let x="",v="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${d}, ${p});\n      const ivec2 pads = ivec2(${l}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}const $s={kernelName:i.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;let d=l;null==d&&(d=[1,1]),i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${d}'`));const p=i.backend_util.computeConv2DInfo(a.shape,s.shape,o,d,u,c,!0);let h;return h=(0,i.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Es(p):new As(p),n.runWebGLProgram(h,[a,s],"float32")}};class Rs{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Fs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ds={kernelName:i.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:d}=r,p=i.backend_util.computeConv2DInfo(a.shape,d,o,u,l,c,!0),h=new Rs(p);return n.runWebGLProgram(h,[a,s],"float32")}},Ms={kernelName:i.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:d}=r,p=i.backend_util.computeConv2DInfo(d,s.shape,o,u,l,c,!0),h=new Fs(p);return n.runWebGLProgram(h,[a,s],"float32")}};class Os{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const zs={kernelName:i.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=i.util.sizeFromShape(r.shape),o=Ir({inputs:{x:r},backend:n,attrs:{shape:[s]}}),u=new Os(s),l=n.runWebGLProgram(u,[o],o.dtype),c=Ir({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class Ls{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Bs={kernelName:i.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.backend_util.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);let d;const p=new Ls(c);d=n.runWebGLProgram(p,[a,s],"float32");const h=Ir({inputs:{x:d},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(d),h}},Ps={kernelName:i.Einsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:u,idDims:l}=i.backend_util.decodeEinsumEquation(a,s.length);i.backend_util.checkEinsumDimSizes(o.length,l,s);const{path:c,steps:d}=i.backend_util.getEinsumComputePath(u,l),p=d.length;let h=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=i.backend_util.getEinsumPermutation(f,l[t]);let a;i.backend_util.isIdentityPermutation(e)?a=s[t]:(a=Fr({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);i.util.arraysEqual(a.shape,o)||(a=Ir({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===h?h=a:(h=wr({inputs:{a,b:h},backend:n}),m.push(h))}e<p-1&&(c[e]>=0&&(h=$r({inputs:{x:h},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},Vs=mr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ws={kernelName:i.Elu,backendName:"webgl",kernelFunc:Vs},Us={kernelName:i.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=(0,i.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new rr("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Hs=gr({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:tn}),Gs={kernelName:i.Equal,backendName:"webgl",kernelFunc:Hs},qs=mr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${i.backend_util.ERF_P};\n  float a1 = ${i.backend_util.ERF_A1};\n  float a2 = ${i.backend_util.ERF_A2};\n  float a3 = ${i.backend_util.ERF_A3};\n  float a4 = ${i.backend_util.ERF_A4};\n  float a5 = ${i.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),js={kernelName:i.Erf,backendName:"webgl",kernelFunc:qs},Xs="return exp(x);",Ks=mr({opSnippet:Xs,packedOpSnippet:Xs,cpuKernelImpl:nn}),Ys={kernelName:i.Exp,backendName:"webgl",kernelFunc:Ks};function Qs(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,u=s.shape.slice();let l=a;return a<0&&(i.util.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),Ir({inputs:{x:s},backend:r,attrs:{shape:u}})}const Zs={kernelName:i.ExpandDims,backendName:"webgl",kernelFunc:Qs},Js="return exp(x) - 1.0;",ei=mr({opSnippet:Js,packedOpSnippet:Js,cpuKernelImpl:rn}),ti={kernelName:i.Expm1,backendName:"webgl",kernelFunc:ei};class ni{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ri(e,t,n){const r=n.texData.get(e.dataId),a=i.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=Ir({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),u=o.shape,l=new ni("real",u,t),c=new ni("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],p=n.runWebGLProgram(l,d,"float32"),h=n.runWebGLProgram(c,d,"float32"),f=or({inputs:{real:p,imag:h},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h);const m=Ir({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const ai={kernelName:i.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ri(r,!1,n)}};class si{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ii(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||i.util.inferDtype(a),"string"===s){const e=i.util.getArrayFromDType(s,i.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new si(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const oi={kernelName:i.Fill,backendName:"webgl",kernelFunc:ii};class ui{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const li={kernelName:i.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new ui(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},ci="return floor(x);",di=mr({opSnippet:ci,packedOpSnippet:ci,cpuKernelImpl:an}),pi={kernelName:i.Floor,backendName:"webgl",kernelFunc:di},hi=gr({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),fi={kernelName:i.FloorDiv,backendName:"webgl",kernelFunc:hi};class mi{constructor(e){this.variableNames=["A"];const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class gi{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const yi={kernelName:i.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[c,l],h=[c,l,s];(u||o)&&(null==bi&&(bi=document.createElement("canvas").getContext("2d")),bi.canvas.width=l,bi.canvas.height=c,bi.drawImage(a,0,0,l,c),a=bi.canvas);const f=n.makeTensorInfo(d,"int32");n.texData.get(f.dataId).usage=p.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,i.env)().getBool("WEBGL_PACK")?new gi(h):new mi(h),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let bi;const xi={kernelName:i.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:d,dilations:p,dimRoundingMode:h,activation:f,leakyreluAlpha:m}=r,g=i.backend_util.convertConv2DDataFormat(d),y=i.backend_util.computeConv2DInfo(a.shape,s.shape,l,p,c,h,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,i.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])b=ss({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,r="leakyrelu"===f,l=f?yr(f,!1):null,c=new ts(y,e,l,t,r),d=[a,s];if(o&&d.push(o),u&&d.push(u),r){const e=n.makeTensorInfo([],"float32",i.util.createScalarValue(m,"float32"));d.push(e),x.push(e)}b=n.runWebGLProgram(c,d,"float32")}else b=as({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const v=Ir({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),v}},vi={kernelName:i.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r,m=[];let g=d;null==g&&(g=[1,1]),i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=i.backend_util.computeConv2DInfo(a.shape,s.shape,l,g,c,p,!0),b=(0,i.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=h?yr(h,b):null,v=[a,s],w=null!=o,k=null!=u,I="leakyrelu"===h;if(w&&v.push(o),k&&v.push(u),I){const e=n.makeTensorInfo([],"float32",i.util.createScalarValue(f,"float32"));v.push(e),m.push(e)}let S;S=b?new Es(y,w,x,k,I):new As(y,w,x,k,I);const N=n.runWebGLProgram(S,v,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class wi{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=at(t.length),a=at(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const ki={kernelName:i.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],u=i.util.sizeFromShape(r.shape),[l,c,d,p]=i.backend_util.prepareAndValidate(r,a),h=Ir({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=Ir({inputs:{x:r},backend:n,attrs:{shape:[i.util.sizeFromShape(r.shape)/d,d]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=sn(e,t,r.dtype,c,o,d,p,r.shape,u);return n.makeTensorInfo(l,r.dtype,s.values)}const m=new wi(o,p,[c,d]),g=n.runWebGLProgram(m,[f,h],f.dtype),y=Ir({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Ii{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=at(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function Si(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:u}=r,l=i.util.parseAxisParam(o,a.shape)[0],c=i.backend_util.segment_util.collectGatherOpShapeInfo(a,s,l,u),d=i.util.sizeFromShape(s.shape),p=[],h=Ir({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Ir({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}});p.push(h),p.push(f);const m=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(h),r=on(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Ii(h.shape,m),y=n.runWebGLProgram(g,[h,f],h.dtype);p.push(y);const b=Ir({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Ni={kernelName:i.GatherV2,backendName:"webgl",kernelFunc:Si},Ti=gr({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:un,dtype:"bool"}),Ci={kernelName:i.Greater,backendName:"webgl",kernelFunc:Ti},_i=gr({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ln}),Ai={kernelName:i.GreaterEqual,backendName:"webgl",kernelFunc:_i},Ei={kernelName:i.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ri(r,!0,n)}},$i=mr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ri={kernelName:i.IsFinite,backendName:"webgl",kernelFunc:$i},Fi=mr({opSnippet:"return float(isinf(x));",dtype:"bool"}),Di={kernelName:i.IsInf,backendName:"webgl",kernelFunc:Fi},Mi=mr({opSnippet:"return float(isnan(x));",dtype:"bool"}),Oi={kernelName:i.IsNan,backendName:"webgl",kernelFunc:Mi},zi=gr({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:cn,dtype:"bool"}),Li={kernelName:i.Less,backendName:"webgl",kernelFunc:zi},Bi=gr({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:dn,dtype:"bool"}),Pi={kernelName:i.LessEqual,backendName:"webgl",kernelFunc:Bi},Vi={kernelName:i.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=pn(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Wi=mr({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:hn}),Ui={kernelName:i.Log,backendName:"webgl",kernelFunc:Wi},Hi=mr({opSnippet:"return log(1.0 + x);"}),Gi={kernelName:i.Log1p,backendName:"webgl",kernelFunc:Hi},qi=gr({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),ji={kernelName:i.LogicalAnd,backendName:"webgl",kernelFunc:qi},Xi=mr({opSnippet:"return float(!(x >= 1.0));"}),Ki={kernelName:i.LogicalNot,backendName:"webgl",kernelFunc:Xi},Yi=gr({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Qi={kernelName:i.LogicalOr,backendName:"webgl",kernelFunc:Yi};class Zi{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ji{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const eo={kernelName:i.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:u,beta:l}=r,c=(0,i.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Ji(a.shape,s,o,u,l):new Zi(a.shape,s,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class to{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const no={kernelName:i.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new to(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function ro(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const d=i.backend_util.getAxesPermutation(c,u),p=null!=d,h=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(h){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[d[e]];const r=Mn(e,a.shape,a.dtype,d,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=r}else f=Er(a,d,n);c=i.backend_util.getInnerMostAxes(c.length,u)}i.backend_util.assertAxesAreInnerMostDims("max",c,u);const[m,g]=i.backend_util.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=i.backend_util.expandShapeToKeepDim(m,l)),h){const e=n.texData.get(f.dataId).values,t=fn(e,i.util.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=i.util.sizeFromShape(t),s=Ir({inputs:{x:e},attrs:{shape:[i.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=Cr(s,e.dtype,"max",r),u=Ir({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return p&&n.disposeIntermediateTensorInfo(f),y}const ao={kernelName:i.Max,backendName:"webgl",kernelFunc:ro},so=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:mn}),io={kernelName:i.Maximum,backendName:"webgl",kernelFunc:so},oo={kernelName:i.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;pe(a,"maxPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.backend_util.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.util.arraysEqual(c.inShape,c.outShape))return sr({inputs:{x:a},backend:n});const d=new fa(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}},uo={kernelName:i.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=i.backend_util.computePool3DInfo(a.shape,s,o,[1,1,1],u,c,l),p=new ma(d,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class lo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class co{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,p=l-1-e.padInfo.left,h=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${h} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const po={kernelName:i.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,p=i.backend_util.computePool3DInfo(o.shape,u,l,[1,1,1],c,d),h=new ma(p,"max",!0),f=n.runWebGLProgram(h,[o],o.dtype),m=new co(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},ho={kernelName:i.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,u=s;pe([s,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:d,dimRoundingMode:p}=r,h=i.backend_util.computePool2DInfo(u.shape,l,c,1,d,p),f=new fa(h,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new lo(h),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},fo={kernelName:i.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:u}=t,l=n;i.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];i.util.assert(i.backend_util.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const d=i.backend_util.computePool2DInfo(r.shape,a,s,c,o),[p,h]=function(e,t,n,r){let a=new fa(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new fa(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,d,l);return[p,h]}},mo={kernelName:i.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,u=r.shape.length,l=i.util.parseAxisParam(s,r.shape);let c=l;const d=i.backend_util.getAxesPermutation(c,u),p=null!=d,h=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(p){if(h){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[d[e]];const n=Mn(e,r.shape,r.dtype,d,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Er(r,d,o);f.push(m),c=i.backend_util.getInnerMostAxes(c.length,u)}i.backend_util.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=i.backend_util.computeOutAndReduceShapes(m.shape,c);let b=g;a&&(b=i.backend_util.expandShapeToKeepDim(g,l));const x=function(e,t,n,r){const a=i.util.sizeFromShape(t),s=Ir({inputs:{x:e},attrs:{shape:[i.util.sizeFromShape(e.shape)/a,a]},backend:r}),o=Cr(s,"float32","mean",r),u=Ir({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},go={kernelName:i.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.util.parseAxisParam(s,a.shape);let c=l;const d=i.backend_util.getAxesPermutation(c,u);let p=a;null!=d&&(p=Fr({inputs:{x:a},backend:n,attrs:{perm:d}}),c=i.backend_util.getInnerMostAxes(c.length,a.shape.length)),i.backend_util.assertAxesAreInnerMostDims("min",c,u);const[h,f]=i.backend_util.computeOutAndReduceShapes(p.shape,c),m=Ir({inputs:{x:p},backend:n,attrs:{shape:[-1,i.util.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"min",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.backend_util.expandShapeToKeepDim(h,l)}}:{inputs:{x:g},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=d&&n.disposeIntermediateTensorInfo(p),y}},yo=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:gn}),bo={kernelName:i.Minimum,backendName:"webgl",kernelFunc:yo};class xo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class vo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Ln("rc",r),u=Ln("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;p=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const wo={kernelName:i.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new vo(r.shape,a,s):new xo(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},ko=gr({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Io={kernelName:i.Mod,backendName:"webgl",kernelFunc:ko};class So{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const No=gr({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),To={kernelName:i.RealDiv,backendName:"webgl",kernelFunc:No},Co="return a - b;",_o=gr({opSnippet:Co,packedOpSnippet:Co,supportsComplex:!0,cpuKernelImpl:Rn}),Ao={kernelName:i.Sub,backendName:"webgl",kernelFunc:_o};function Eo(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=i.util.parseAxisParam([s],a.shape),u=ro({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.backend_util.expandShapeToKeepDim(u.shape,o),c=Ir({inputs:{x:u},backend:n,attrs:{shape:l}}),d=_o({inputs:{a,b:c},backend:n}),p=Ks({inputs:{x:d},backend:n}),h=$r({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=Ir({inputs:{x:h},backend:n,attrs:{shape:l}}),m=No({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}const $o={kernelName:i.Softmax,backendName:"webgl",kernelFunc:Eo},Ro={kernelName:i.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:Eo({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new So(l,c,s),p=[[i]],h=n.runWebGLProgram(d,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),h}},Fo="return -x;",Do={kernelName:i.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=bn(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,i.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xn(r.shape,Fo):new Gn(r.shape,Fo),n.runWebGLProgram(a,[r],r.dtype)}},Mo=i.kernel_impls.nonMaxSuppressionV3Impl,Oo={kernelName:i.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:p}=Mo(c,d,o,u,l);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},zo=i.kernel_impls.nonMaxSuppressionV4Impl,Lo={kernelName:i.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,d=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h,validOutputs:f}=zo(d,p,o,u,l,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Bo=i.kernel_impls.nonMaxSuppressionV5Impl,Po={kernelName:i.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){i.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,d=n.readSync(a.dataId),p=n.readSync(s.dataId),h=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=Bo(d,p,h,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Vo{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Wo={kernelName:i.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:u}=r,l=i.util.sizeFromShape(a.shape),c=new Vo(l,s,o,u),d=Ir({inputs:{x:a},backend:n,attrs:{shape:[l]}}),p=n.runWebGLProgram(c,[d],a.dtype);n.disposeIntermediateTensorInfo(d);const h=Ir({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(p),h}};function Uo(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Ma({inputs:{input:r},backend:n}),t=Uo({inputs:{x:e},backend:n}),a=Ya({inputs:{input:r},backend:n}),s=Uo({inputs:{x:a},backend:n}),i=or({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return ii({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ho={kernelName:i.ZerosLike,backendName:"webgl",kernelFunc:Uo},Go={kernelName:i.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Ma({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Ya({inputs:{input:a},backend:r}),i=Uo({inputs:{x:s},backend:r}),o=or({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return ii({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},qo={kernelName:i.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Qs({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),i.util.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Ja({inputs:t.map((e=>{const t=Qs({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class jo{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Ln("rc",r),u=Ln("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let h="";for(let e=0,t=1===r?2:4;e<t;e++)h+=`\n        ${d[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;h+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const Ko=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r,u=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xo(a.shape,s,o):new jo(a.shape,s,o),l=[[o]];return n.runWebGLProgram(u,[a],a.dtype,l)},Yo={kernelName:i.PadV2,backendName:"webgl",kernelFunc:Ko},Qo=gr({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Zo={kernelName:i.Pow,backendName:"webgl",kernelFunc:Qo},Jo={kernelName:i.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=[],c=i.util.parseAxisParam(s,a.shape);let d=c;const p=i.backend_util.getAxesPermutation(d,u);let h,f=a;if(null!=p&&(f=Fr({inputs:{x:a},backend:n,attrs:{perm:p}}),d=i.backend_util.getInnerMostAxes(d.length,u),l.push(f)),i.backend_util.assertAxesAreInnerMostDims("prod",d,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=vn(f.shape,f.dtype,e,d);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=i.backend_util.computeOutAndReduceShapes(f.shape,d),r=i.util.sizeFromShape(t),s=Ir({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Cr(s,(0,i.sumOutType)(a.dtype),"prod",n);h=Ir({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(s),l.push(o)}if(o){l.push(h);const e=i.backend_util.expandShapeToKeepDim(h.shape,c);h=Ir({inputs:{x:h},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},eu=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=wn(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},tu={kernelName:i.Range,backendName:"webgl",kernelFunc:eu},nu=mr({opSnippet:"return 1.0 / x;"}),ru={kernelName:i.Reciprocal,backendName:"webgl",kernelFunc:nu},au=mr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),su={kernelName:i.Relu,backendName:"webgl",kernelFunc:au},iu=mr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ou={kernelName:i.Relu6,backendName:"webgl",kernelFunc:iu};class uu{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class lu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const cu={kernelName:i.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,d=(0,i.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lu(a.shape,l,c,s,o):new uu(a.shape,l,c,s,o);return n.runWebGLProgram(d,[a],"float32")}};class du{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const pu={kernelName:i.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new du(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class hu{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class fu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let p;p=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const mu={kernelName:i.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,d=(0,i.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fu(a.shape,l,c,s,o):new hu(a.shape,l,c,s,o);return n.runWebGLProgram(d,[a],a.dtype)}};class gu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,p=1/c,h=2*Math.ceil(d)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${h});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const yu={kernelName:i.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new gu(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class bu{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=at(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class xu{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Ln("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=at(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const vu={kernelName:i.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,u=i.util.parseAxisParam(s,a.shape);if(0===o)return sr({inputs:{x:a},backend:n});const l=(0,i.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xu(a.shape,u):new bu(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class wu{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ku={kernelName:i.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,u=n,l=new wu(r.shape,s),[c,d]=i.backend_util.getImageCenter(o,r.shape[1],r.shape[2]),p=[[c,d,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[r],r.dtype,p)}},Iu=mr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Su={kernelName:i.Round,backendName:"webgl",kernelFunc:Iu},Nu=mr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:kn}),Tu={kernelName:i.Rsqrt,backendName:"webgl",kernelFunc:Nu};class Cu{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=at(a.length),u=at(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const p=`getUpdates(${d})`,h=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${h};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const _u={kernelName:i.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:p}=i.backend_util.calculateShapes(s,a,o),h=[p/c,c];if(0===p)return n.makeTensorInfo(o,a.dtype);const f=Ir({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=Ir({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Cu(l,u,f.shape.length,m.shape.length,d,h),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Ir({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Au{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=at(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Eu={kernelName:i.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new Au(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],(0,i.upcastType)(a.dtype,s.dtype))}},$u=mr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${i.backend_util.SELU_SCALEALPHA};\n  float scale = ${i.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Ru={kernelName:i.Selu,backendName:"webgl",kernelFunc:$u},Fu=mr({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Du={kernelName:i.Sigmoid,backendName:"webgl",kernelFunc:Fu},Mu=mr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Ou={kernelName:i.Sign,backendName:"webgl",kernelFunc:Mu},zu=mr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Lu={kernelName:i.Sin,backendName:"webgl",kernelFunc:zu},Bu=mr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Pu={kernelName:i.Sinh,backendName:"webgl",kernelFunc:Bu},Vu=mr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Wu={kernelName:i.Softplus,backendName:"webgl",kernelFunc:Vu},Uu={kernelName:i.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;i.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const c=[],d=Ko({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=i.backend_util.getReshaped(d.shape,s,u,!1),h=i.backend_util.getPermuted(p.length,s.length,!1),f=i.backend_util.getReshapedPermuted(d.shape,s,u,!1),m=Ir({inputs:{x:d},backend:n,attrs:{shape:p}}),g=Fr({inputs:{x:m},backend:n,attrs:{perm:h}}),y=Ir({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(d),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Hu={kernelName:i.SparseFillEmptyRows,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,p,h,f,m]=Nn(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},Gu={kernelName:i.SparseReshape,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=Tn(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},qu={kernelName:i.SparseSegmentMean,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Cn(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},ju={kernelName:i.SparseSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Cn(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},Xu={kernelName:i.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,strides:d,outputSize:p}=i.backend_util.calculateShapes(s,a,u),h=new Cu(c,l,a.shape.length,s.shape.length,d,[p,1],!1),f=n.runWebGLProgram(h,[s,a,o],s.dtype),m=Ir({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},Ku={kernelName:i.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,u=i.util.parseAxisParam(o,a.shape)[0],l=i.backend_util.prepareSplitSize(a,s,u),c=a.shape.length,d=new Array(c).fill(0),p=a.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const r=Aa({inputs:{x:a},backend:n,attrs:{begin:d,size:t}});return d[u]+=e,r}))}},Yu=mr({opSnippet:"return sqrt(x);"}),Qu={kernelName:i.Sqrt,backendName:"webgl",kernelFunc:Yu},Zu=mr({opSnippet:"return x * x;"}),Ju={kernelName:i.Square,backendName:"webgl",kernelFunc:Zu},el="return (a - b) * (a - b);",tl=gr({opSnippet:el,packedOpSnippet:el}),nl={kernelName:i.SquaredDifference,backendName:"webgl",kernelFunc:tl},rl={kernelName:i.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Gn(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class al{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=at(n.length),s=at(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const sl={kernelName:i.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=i.slice_util.sliceInfo(a.shape,s,o,u,l,c,d,p,h),v=Ir({inputs:{x:a},backend:n,attrs:{shape:b}});let w;if(f){const e=Aa({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=Ir({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([v])){const e=n.texData.get(v.dataId).values,t=(0,i.buffer)(v.shape,v.dtype,e),r=_n(x,t,g,m);w=n.makeTensorInfo(x,v.dtype,r.values)}else{const e=new al(m,g,x);w=n.runWebGLProgram(e,[v],v.dtype)}const k=Ir({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}},il={kernelName:i.StringNGrams,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.readSync(c.dataId),h=n.readSync(d.dataId),[f,m]=An(p,h,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},ol={kernelName:i.StringSplit,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=En(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},ul={kernelName:i.StringToHashBucketFast,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=$n(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},ll=mr({opSnippet:"return tan(x);"}),cl={kernelName:i.Tan,backendName:"webgl",kernelFunc:ll},dl=mr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),pl={kernelName:i.Tanh,backendName:"webgl",kernelFunc:dl};class hl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=at(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function fl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>i.util.decodeString(e))):e,r=(0,i.buffer)(a.shape,a.dtype,t),o=Fn(r,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new hl(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const ml={kernelName:i.Tile,backendName:"webgl",kernelFunc:fl};class gl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class yl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function bl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function xl(e){let t=1;for(;t<e;)t*=2;return t}const vl={kernelName:i.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,u=(0,i.env)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,i.env)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,d=c[c.length-1];if(n.shouldExecuteOnCPU([a])||d<u||s>l){const e=n.readSync(a.dataId),[t,r]=Dn(e,c,a.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===d)return[a,ii({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const p=n.texData.get(a.dataId),h=null!==p&&p.isPacked,f=h?n.unpackTensor(a):a,m=i.util.sizeFromShape(c)/d,g=Ir({inputs:{x:f},attrs:{shape:[m,d]},backend:n});h&&bl(n,f);const y=xl(s),b=xl(d);let x=null;const v=()=>null===x?[g,g]:[g,x],w=(e,t,r)=>{const a=v(),s=new gl(r),i=[[d],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,a,"int32",i),bl(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=v(),r=new yl([m,e/2]),a=[[d],[null===x?1:0],[y]],s=x;x=n.runWebGLProgram(r,t,"int32",a),bl(n,s);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=Aa({inputs:{x},backend:n,attrs:{begin:0,size:[m,s]}}),bl(n,k);let I=Si({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});bl(n,g);const S=c.slice(0,-1);S.push(s),k=x,x=Ir({inputs:{x},attrs:{shape:S},backend:n}),bl(n,k);const N=I;return I=Ir({inputs:{x:I},attrs:{shape:S},backend:n}),bl(n,N),[I,x]}};class wl{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const kl={kernelName:i.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,p,h]=a.shape,[f,m]=null!=l?l:[d,p],g=new wl(d,p,i,o,u,[c,f,m,h]);return n.runWebGLProgram(g,[a,s],"float32")}},Il={kernelName:i.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;pe(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=On(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Sl={kernelName:i.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const d=[],p=new Array(o).fill(0),h=i.shape.slice();h[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[s]=e;const t=Aa({inputs:{x:i},backend:n,attrs:{begin:p,size:h}}),r=Ir({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Nl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Tl=[eo,no,Or,Lr,Pr,Wr,Gr,Xr,Kr,Yr,na,ra,sa,oa,da,la,ha,ya,ga,va,wa,ka,Na,$a,Ra,za,Pa,Ua,qa,ur,es,ds,ps,is,fs,ms,hs,ys,xs,ws,Ns,Ts,_s,Ds,Ms,$s,zs,Bs,Ps,Ws,Us,Gs,js,Ys,Zs,ti,ai,oi,li,pi,fi,yi,xi,vi,ki,Ni,Ci,Ai,ir,Ei,Qa,Ri,Di,Oi,dr,Li,Pi,Vi,Gi,Ui,ji,Ki,Qi,ao,uo,oo,po,ho,fo,io,mo,go,bo,wo,Io,Ro,kr,Do,Oo,Lo,Po,Da,Wo,Go,qo,Yo,Zo,fr,Jo,tu,Oa,To,ru,ou,su,Sr,cu,pu,mu,yu,vu,ku,Su,Tu,_u,Eu,Ru,Du,Ou,Lu,Pu,Ea,$o,Wu,Uu,Hu,Gu,qu,ju,Xu,Ku,Qu,Ju,nl,rl,sl,il,ol,ul,Ao,Rr,cl,pl,ml,vl,kl,Dr,Il,Sl,{kernelName:i.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,u=a.shape.length,l=[];let c=0;const d=i.backend_util.getAxesPermutation([c],u);let p=a;null!=d&&(p=Fr({inputs:{x:a},backend:n,attrs:{perm:d}}),l.push(p),c=i.backend_util.getInnerMostAxes(1,u)[0]);const h=i.backend_util.segment_util.computeOutShape(p.shape,c,o),f=i.util.sizeFromShape([p.shape[c]]),m=Ir({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.sumOutType)(a.dtype),y=(e,t,r,a,s)=>{const o=e.shape[0],u=e.shape[1],c=i.backend_util.segment_util.segOpComputeOptimalWindowSize(u,s),d=new Nl({windowSize:c,inSize:u,batchSize:o,numSegments:s},t),p=n.compileAndRun(d,[e,r],a);if(l.push(p),p.shape[1]===s)return p;const h=eu({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=fl({inputs:{x:h},backend:n,attrs:{reps:[u/c]}});return l.push(h),l.push(f),y(p,t,f,a,s)},b=Ir({inputs:{x:y(m,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:h}});let x=b;if(null!=d){l.push(b);const e=i.backend_util.getUndoAxesPermutation(d);x=Fr({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Ho];for(const e of Tl)(0,i.registerKernel)(e)},4933:(e,t,n)=>{"use strict";n.d(t,{g_:()=>fr,Ue:()=>_,YL:()=>mr,iw:()=>T,gJ:()=>gr});var r={};n.r(r),n.d(r,{json:()=>O});var a={};n.r(a),n.d(a,{json:()=>z});var s={};n.r(s),n.d(s,{json:()=>L});var i={};n.r(i),n.d(i,{json:()=>B});var o={};n.r(o),n.d(o,{json:()=>P});var u={};n.r(u),n.d(u,{json:()=>V});var l={};n.r(l),n.d(l,{json:()=>W});var c={};n.r(c),n.d(c,{json:()=>U});var d={};n.r(d),n.d(d,{json:()=>H});var p={};n.r(p),n.d(p,{json:()=>G});var h={};n.r(h),n.d(h,{json:()=>q});var f={};n.r(f),n.d(f,{json:()=>j});var m={};n.r(m),n.d(m,{json:()=>X});var g={};n.r(g),n.d(g,{json:()=>K});var y={};n.r(y),n.d(y,{json:()=>Y});var b={};n.r(b),n.d(b,{json:()=>Q});var x={};n.r(x),n.d(x,{json:()=>Z});var v={};n.r(v),n.d(v,{json:()=>J});var w={};n.r(w),n.d(w,{json:()=>ee});var k,I,S=n(8433);!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(k||(k={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(I||(I={}));const N={};function T(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};N[e]=n}function C(e){return N[e]}function _(e){delete N[e]}function A(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return E(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>E(e,n,r,a)));const o=E(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:S.util.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function E(e,t,n,r){const[a,s]=F(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[R(a,e)]));return void 0!==i?t[R(a,i)][s]:void 0}function $(e,t){const[n,r,a]=F(e);return[R(n,t&&t.currentContextId),r,a]}function R(e,t){return t?`${e}-${t}`:e}function F(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function D(e,t,n){let r=A("pad",e,t,n);if("explicit"===r){r=A("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function M(e){return e.kept?e:(0,S.clone)(e)}const O=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],B=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],V=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],U=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],H=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],G=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],q=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],j=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],X=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],K=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],Y=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Q=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Z=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],J=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],ee=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class te{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[r,a,s,i,o,u,l,c,d,p,h,f,m,g,y,b,x,v,w].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=$(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?d.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=$(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=$(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const h={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(h.initNodes=s),h}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=C(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=re(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=re(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=he(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=he(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=se(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=se(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=pe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=pe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=ae(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ae(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=me(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=me(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=de(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=de(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=fe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=fe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=ue(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ue(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=le(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=le(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=oe(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=oe(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=$(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ie(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=$(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=$(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function ne(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,S.env)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function re(e,t,n,r=!1){const a=e[t];return null!=a?ne(a.s,r):n}function ae(e,t,n){const r=e[t];return r?r.b:n}function se(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function ie(e){switch("string"==typeof e&&(e=k[e]),e){case k.DT_FLOAT:return"float32";case k.DT_INT32:case k.DT_INT64:case k.DT_INT8:case k.DT_UINT8:return"int32";case k.DT_BOOL:return"bool";case k.DT_DOUBLE:return"float32";case k.DT_STRING:return"string";default:return null}}function oe(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function ue(e,t,n){const r=e[t];return r&&r.type?ie(r.type):n}function le(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>ie(e))):n}function ce(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function de(e,t,n){const r=e[t];return r&&r.shape?ce(r.shape):n}function pe(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function he(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>ne(e,r))):n}function fe(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>ce(e))):n}function me(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class ge{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return E(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return E(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return se(this.node.rawAttrs,e,t);if(null!=n.s)return re(this.node.rawAttrs,e,t);if(null!=n.b)return ae(this.node.rawAttrs,e,t);if(null!=n.shape)return de(this.node.rawAttrs,e,t);if(null!=n.type)return ue(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return pe(this.node.rawAttrs,e,t);if(null!=n.list.s)return he(this.node.rawAttrs,e,t);if(null!=n.list.shape)return fe(this.node.rawAttrs,e,t);if(null!=n.list.b)return me(this.node.rawAttrs,e,t);if(null!=n.list.type)return le(this.node.rawAttrs,e,t)}return t}}var ye=n(6407),be=n(3135),xe=n(5228),ve=n(4841),we=n(1274),ke=n(9322),Ie=n(9165),Se=n(827),Ne=n(4513),Te=n(632),Ce=n(3453),_e=n(5265),Ae=n(6235),Ee=n(7839),$e=n(1470),Re=n(2421),Fe=n(1891),De=n(7037),Me=n(9812),Oe=n(369),ze=n(6825),Le=n(1661),Be=n(173),Pe=n(2699),Ve=n(3233),We=n(4650),Ue=n(4842),He=n(3426),Ge=n(6943),qe=n(2597),je=n(7474),Xe=n(4386),Ke=n(7370),Ye=n(9036),Qe=n(766),Ze=n(7409),Je=n(7809),et=n(5503),tt=n(625),nt=n(9331),rt=n(4434),at=n(3254),st=n(3694),it=n(3261),ot=n(248),ut=n(1869),lt=n(1173),ct=n(2279),dt=n(3582),pt=n(2634),ht=n(9451),ft=n(9133),mt=n(8151),gt=n(6230);function yt(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){S.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];S.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function bt(e){return"number"!=typeof e&&!e.some((e=>e<0))}function xt(e,t,n){let r=vt(e,n);const a=!bt(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=vt(e.shape,r)})),!bt(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function vt(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class wt{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,S.scalar)(0),(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),yt(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,S.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,S.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return yt(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,S.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,S.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return yt(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,S.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,S.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,S.tidy)((()=>{t=(0,S.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=(0,S.reshape)((0,S.slice)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class kt{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);yt(t,e.shape,"TensorList shape mismatch: "),(0,S.keep)(e)})),this.idTensor=(0,S.scalar)(0),this.maxNumElements=r,(0,S.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new kt([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);yt(e,this.elementShape,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,e);return(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,r)));return(0,S.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=xt(this.elementShape,this.tensors,e),r=this.tensors.pop();return yt(r.shape,e,"TensorList shape mismatch: "),(0,S.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(yt(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,S.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);yt(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=xt(this.elementShape,this.tensors,t);return(0,S.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);yt(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,S.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);yt(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=xt(this.elementShape,this.tensors,n);return 0===e.length?(0,S.tensor)([],[0].concat(r)):(0,S.tidy)((()=>{const t=e.map((e=>(0,S.reshape)(this.tensors[e],r)));return(0,S.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);yt(this.elementShape,t,"TensorList shape mismatch: ");const n=xt(this.elementShape,this.tensors,t);return 0===this.size()?(0,S.tensor)([],[0].concat(n)):(0,S.tidy)((()=>{const e=this.tensors.map((e=>(0,S.reshape)(e,n)));return(0,S.concat)(e,0)}))}}var It=n(1355),St=n(4794),Nt=n(4624),Tt=n(1405),Ct=n(4718),_t=n(473),At=n(5176),Et=n(1174),$t=n(6877),Rt=n(1749),Ft=n(5020),Dt=n(557);function Mt(e,t,n){const[r,a]=A("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=A("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=A("strides",e,t,n),d=D(e,t,n),p=A("dataFormat",e,t,n).toUpperCase(),h=A("dilations",e,t,n);let[f,m]=A("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:p,dilations:h,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:A("leakyreluAlpha",e,t,n)}}var Ot=n(4006),zt=n(4135),Lt=n(686),Bt=n(6708),Pt=n(4917),Vt=n(7846),Wt=n(5002),Ut=n(7245),Ht=n(3596),Gt=n(9640),qt=n(6577),jt=n(4600),Xt=n(2271),Kt=n(6380),Yt=n(6567);function Qt(e,t,n){return{boxes:A("boxes",e,t,n),scores:A("scores",e,t,n),maxOutputSize:A("maxOutputSize",e,t,n),iouThreshold:A("iouThreshold",e,t,n),scoreThreshold:A("scoreThreshold",e,t,n),softNmsSigma:A("softNmsSigma",e,t,n)}}var Zt=n(3243),Jt=n(9608),en=n(6092),tn=n(9494);class nn{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,S.scalar)(0),this.tensorMap=new Map,(0,S.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return tn.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,S.tidy)((()=>{const e=(0,S.unstack)(t),r=n.length,a=e.length;S.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,S.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,S.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,S.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var rn=n(6477),an=n(6500),sn=n(636),on=n(7630),un=n(6573),ln=n(624),cn=n(2856),dn=n(8651),pn=n(5750),hn=n(5912),fn=n(8687),mn=n(4653),gn=n(9065),yn=n(7505),bn=n(9648),xn=n(682),vn=n(1510),wn=n(9758),kn=n(3307),In=n(5130),Sn=n(5735),Nn=n(5475),Tn=n(781),Cn=n(2998),_n=n(47),An=n(7394),En=n(7405),$n=n(3865),Rn=n(5746),Fn=n(6884),Dn=n(4926),Mn=n(7486),On=n(2676),zn=n(5158),Ln=n(9590),Bn=n(4968),Pn=n(2991),Vn=n(4136),Wn=n(7501),Un=n(8644),Hn=n(3100),Gn=n(7494),qn=n(7020),jn=n(8447),Xn=n(3710),Kn=n(4415),Yn=n(1300),Qn=n(1483),Zn=n(9682),Jn=n(7918),er=n(8441),tr=n(9112),nr=n(8247);function rr(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ye.I(A("a",e,t,n),A("b",e,t,n))];case"AddN":return[be.Q(A("tensors",e,t,n))];case"FloorMod":case"Mod":return[xe.w(A("a",e,t,n),A("b",e,t,n))];case"Mul":return[ve.d(A("a",e,t,n),A("b",e,t,n))];case"RealDiv":case"Div":return[we.h(A("a",e,t,n),A("b",e,t,n))];case"DivNoNan":return[ke.N(A("a",e,t,n),A("b",e,t,n))];case"FloorDiv":return[Ie.q(A("a",e,t,n),A("b",e,t,n))];case"Sub":return[Se.l(A("a",e,t,n),A("b",e,t,n))];case"Minimum":return[Ne.L(A("a",e,t,n),A("b",e,t,n))];case"Maximum":return[Te.g(A("a",e,t,n),A("b",e,t,n))];case"Pow":return[Ce.s(A("a",e,t,n),A("b",e,t,n))];case"SquaredDifference":return[_e.$(A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ae.W(A("x",e,t,n))];case"Acos":return[Ee.K(A("x",e,t,n))];case"Acosh":return[$e._(A("x",e,t,n))];case"Asin":return[Re.Z(A("x",e,t,n))];case"Asinh":return[Fe.V(A("x",e,t,n))];case"Atan":return[De.z(A("x",e,t,n))];case"Atan2":return[Me.f(A("x",e,t,n),A("y",e,t,n))];case"Atanh":return[Oe.C(A("x",e,t,n))];case"Ceil":return[ze.m(A("x",e,t,n))];case"Complex":return[Le.P(A("real",e,t,n),A("imag",e,t,n))];case"Cos":return[Be.m(A("x",e,t,n))];case"Cosh":return[Pe.f(A("x",e,t,n))];case"Elu":return[Ve.p(A("x",e,t,n))];case"Erf":return[We.q(A("x",e,t,n))];case"Exp":return[Ue.Q(A("x",e,t,n))];case"Expm1":return[He.t(A("x",e,t,n))];case"Floor":return[Ge.G(A("x",e,t,n))];case"Log":return[qe.c(A("x",e,t,n))];case"Log1p":return[je.K(A("x",e,t,n))];case"Imag":return[Xe.a(A("x",e,t,n))];case"Neg":return[Ke.W(A("x",e,t,n))];case"Reciprocal":return[Ye.M(A("x",e,t,n))];case"Real":return[Qe.k(A("x",e,t,n))];case"Relu":return[Ze.U(A("x",e,t,n))];case"Round":return[Je.N(A("x",e,t,n))];case"Selu":return[et.U(A("x",e,t,n))];case"Sigmoid":return[tt.X(A("x",e,t,n))];case"Sin":return[nt.O(A("x",e,t,n))];case"Sign":return[rt.X(A("x",e,t,n))];case"Sinh":return[at.R(A("x",e,t,n))];case"Softplus":return[st.W(A("x",e,t,n))];case"Sqrt":return[it._(A("x",e,t,n))];case"Square":return[ot.h(A("x",e,t,n))];case"Tanh":return[ut.A(A("x",e,t,n))];case"Tan":return[lt.O(A("x",e,t,n))];case"ClipByValue":return[ct.i(A("x",e,t,n),A("clipValueMin",e,t,n),A("clipValueMax",e,t,n))];case"Relu6":return[dt.b(A("x",e,t,n))];case"Rsqrt":return[pt.b(E(e.inputNames[0],t,n))];case"Prod":return[ht.W(A("x",e,t,n),A("axes",e,t,n))];case"LeakyRelu":return[ft.h(A("x",e,t,n),A("alpha",e,t,n))];case"Prelu":return[mt.A(A("x",e,t,n),A("alpha",e,t,n))];case"IsNan":return[gt.i(E(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=A("thenBranch",e,t,n),a=A("elseBranch",e,t,n),s=A("cond",e,t,n),i=A("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=A("body",e,t,n),a=A("cond",e,t,n),s=A("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[M(A("pred",e,t,n))];case"Switch":{const r=A("pred",e,t,n);let a=A("data",e,t,n);return a.kept||(a=M(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==E(e,t,n)));return r?[M(E(r,t,n))]:void 0}case"Enter":{const r=A("frameName",e,t,n),a=A("tensor",e,t,n);return n.enterFrame(r),[M(a)]}case"Exit":{const r=A("tensor",e,t,n);return n.exitFrame(),[M(r)]}case"NextIteration":{const r=A("tensor",e,t,n);return n.nextIteration(),[M(r)]}case"TensorArrayV3":{const r=A("size",e,t,n),a=A("dtype",e,t,n),s=A("elementShape",e,t,n),i=A("dynamicSize",e,t,n),o=A("clearAfterRead",e,t,n),u=A("identicalElementShapes",e,t,n),l=A("name",e,t,n),c=new wt(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,S.scalar)(1)]}case"TensorArrayWriteV3":{const r=A("tensorArrayId",e,t,n),a=A("index",e,t,n),s=A("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=A("tensorArrayId",e,t,n),a=A("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=A("tensorArrayId",e,t,n),a=A("indices",e,t,n),s=A("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=A("tensorArrayId",e,t,n),a=A("indices",e,t,n),s=A("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=A("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=A("tensorArrayId",e,t,n),a=A("tensor",e,t,n),s=A("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,S.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=A("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=A("tensorListId",e,t,n),a=A("index",e,t,n),s=A("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=A("tensorListId",e,t,n),a=A("index",e,t,n),s=A("elementShape",e,t,n),i=A("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=A("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new kt([],n,e.dtype,r),i=(0,S.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(A("tensor",e,t,n),r,A("elementShape",e,t,n),A("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=A("elementShape",e,t,n),a=A("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new kt([],e,t,n)}(r,a,A(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=A("tensorListId",e,t,n),a=A("indices",e,t,n),s=A("elementShape",e,t,n),i=A("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=A("tensorListId",e,t,n),a=A("elementShape",e,t,n),s=A("elementDType",e,t,n),i=A("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);yt(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,S.unstack)(e);return new kt(a,t,r)}(A("tensor",e,t,n),A("elementShape",e,t,n),A("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=A("tensorListId",e,t,n),a=n.getTensorList(r.id),s=A("dtype",e,t,n),i=A("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=A("tensorListId",e,t,n),a=A("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=A("tensorListId",e,t,n),a=A("elementShape",e,t,n),s=A("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=A("tensor",e,t,n),a=A("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=vt(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,S.tidy)((()=>{const n=[];e=(0,S.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=(0,S.reshape)((0,S.slice)(e,o,u),s)}return e.dispose(),n})),u=new kt([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,A("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=A("stride",e,t,n),a=A("pad",e,t,n),s=A("dataFormat",e,t,n).toUpperCase(),i=A("dilation",e,t,n);return[It.P(A("x",e,t,n),A("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=A("strides",e,t,n),a=D(e,t,n),s=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[St.T(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Mt(e,t,n);return[Nt.conv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Mt(e,t,n);return[Nt.depthwiseConv2d({x:A("x",e,t,n),filter:A("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=A("outputShape",e,t,n),a=A("strides",e,t,n),s=D(e,t,n);return[Tt.b(A("x",e,t,n),A("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=A("strides",e,t,n),a=D(e,t,n),s=A("dilations",e,t,n),i=A("dataFormat",e,t,n).toUpperCase();return[Ct.B(A("input",e,t,n),A("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("dataFormat",e,t,n).toUpperCase(),i=A("dilations",e,t,n);return[_t.p(A("x",e,t,n),A("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("kernelSize",e,t,n);return[At.w(A("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("kernelSize",e,t,n);return[Et._(A("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("kernelSize",e,t,n),i=A("includeBatchInIndex",e,t,n),{result:o,indexes:u}=$t.I(A("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("kernelSize",e,t,n);return[Rt.u(A("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("kernelSize",e,t,n);return[Ft.Y(A("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=A("strides",e,t,n),a=A("pad",e,t,n),s=A("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Dt.W(A("x",e,t,n),A("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=A("shape",e,t,n),a=A("dtype",e,t,n),s=A("value",e,t,n);return[Ot.h(r,s,a)]}case"LinSpace":{const r=A("start",e,t,n),a=A("stop",e,t,n),s=A("num",e,t,n);return[zt.S(r,a,s)]}case"Multinomial":{const r=A("logits",e,t,n),a=A("numSamples",e,t,n),s=A("seed",e,t,n);return[Lt.S(r,a,s)]}case"OneHot":{const r=A("indices",e,t,n),a=A("depth",e,t,n),s=A("onValue",e,t,n),i=A("offValue",e,t,n);return[Bt.l(r,a,s,i)]}case"Ones":return[Pt.i(A("shape",e,t,n),A("dtype",e,t,n))];case"OnesLike":return[Vt.J(A("x",e,t,n))];case"RandomUniform":return[Wt.L(A("shape",e,t,n),A("minval",e,t,n),A("maxval",e,t,n),A("dtype",e,t,n))];case"Range":{const r=A("start",e,t,n),a=A("stop",e,t,n),s=A("step",e,t,n);return[Ut.w(r,a,s,A("dtype",e,t,n))]}case"TruncatedNormal":{const r=A("shape",e,t,n),a=A("mean",e,t,n),s=A("stdDev",e,t,n),i=A("seed",e,t,n);return[Ht.X(r,a,s,A("dtype",e,t,n),i)]}case"Zeros":return[Gt.l(A("shape",e,t,n),A("dtype",e,t,n))];case"ZerosLike":return[qt.P(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Qt(e,t,n),l=await jt.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Qt(e,t,n),u=A("padToMaxOutputSize",e,t,n),l=await jt.BHj.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Qt(e,t,n);return[await jt.BHj.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Xt.p(A("condition",e,t,n),"bool"),a=[await Kt.i(r)];return r.dispose(),a}case"ListDiff":return Yt.O(A("x",e,t,n),A("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=A("x",e,t,n),a=A("k",e,t,n),s=A("sorted",e,t,n),i=Zt.h(r,a,s);return[i.values,i.indices]}case"Unique":{const r=A("x",e,t,n),a=Jt.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=A("x",e,t,n),a=A("axis",e,t,n),s=Jt.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=A("images",e,t,n),a=A("size",e,t,n),s=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[jt.BHj.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=A("images",e,t,n),a=A("size",e,t,n),s=A("alignCorners",e,t,n),i=A("halfPixelCenters",e,t,n);return[jt.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=A("image",e,t,n),a=A("boxes",e,t,n),s=A("boxInd",e,t,n),i=A("cropSize",e,t,n),o=A("method",e,t,n),u=A("extrapolationValue",e,t,n);return[jt.BHj.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=A("default",e,t,n);return[E(e.name,t,n)||r];case"Placeholder":return[E(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[M(A("x",e,t,n))];case"IdentityN":return A("x",e,t,n).map((e=>M(e)));case"Snapshot":return[M(A("x",e,t,n))];case"Shape":return[en.R(A("x",e,t,n).shape,"int32")];case"ShapeN":return A("x",e,t,n).map((e=>en.R(e.shape)));case"Size":return[tn.i(A("x",e,t,n).size,"int32")];case"Rank":return[tn.i(A("x",e,t,n).rank,"int32")];case"NoOp":return[tn.i(1)];case"Print":const a=A("x",e,t,n),s=A("data",e,t,n),i=A("message",e,t,n),o=A("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Equal":return[rn.D(A("a",e,t,n),A("b",e,t,n))];case"NotEqual":return[an.Q(A("a",e,t,n),A("b",e,t,n))];case"Greater":return[sn.p(A("a",e,t,n),A("b",e,t,n))];case"GreaterEqual":return[on.b(A("a",e,t,n),A("b",e,t,n))];case"Less":return[un.d(A("a",e,t,n),A("b",e,t,n))];case"LessEqual":return[ln.z(A("a",e,t,n),A("b",e,t,n))];case"LogicalAnd":return[cn.H(A("a",e,t,n),A("b",e,t,n))];case"LogicalNot":return[dn.h(A("a",e,t,n))];case"LogicalOr":return[pn.K(A("a",e,t,n),A("b",e,t,n))];case"Select":case"SelectV2":return[hn.a(A("condition",e,t,n),A("a",e,t,n),A("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[fn.O(A("a",e,t,n),A("b",e,t,n),A("transposeA",e,t,n),A("transposeB",e,t,n))];case"Einsum":return[mn.W(A("equation",e,t,n),...A("tensors",e,t,n))];case"Transpose":return[gn.p(A("x",e,t,n),A("perm",e,t,n))];case"_FusedMatMul":const[r,a]=A("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=A("numArgs",e,t,n),u=A("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=A("args",e,t,n);return[Nt.matMul({a:A("a",e,t,n),b:A("b",e,t,n),transposeA:A("transposeA",e,t,n),transposeB:A("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[yn.t(A("x",e,t,n),A("mean",e,t,n),A("variance",e,t,n),A("offset",e,t,n),A("scale",e,t,n),A("epsilon",e,t,n))];case"LRN":return[bn.G(A("x",e,t,n),A("radius",e,t,n),A("bias",e,t,n),A("alpha",e,t,n),A("beta",e,t,n))];case"Softmax":return[xn.X(A("x",e,t,n))];case"LogSoftmax":return[vn.C(A("x",e,t,n))];case"SparseToDense":return[wn.e(A("sparseIndices",e,t,n),A("outputShape",e,t,n),A("sparseValues",e,t,n),A("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[kn.F(A("x",e,t,n),r,a)]}case"Mean":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[In.J(A("x",e,t,n),r,a)]}case"Min":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[Sn.V(A("x",e,t,n),r,a)]}case"Sum":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[Nn.S(A("x",e,t,n),r,a)]}case"All":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[Tn.$(A("x",e,t,n),r,a)]}case"Any":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[Cn.Y(A("x",e,t,n),r,a)]}case"ArgMax":{const r=A("axis",e,t,n);return[_n.N(A("x",e,t,n),r)]}case"ArgMin":{const r=A("axis",e,t,n);return[An.v(A("x",e,t,n),r)]}case"Prod":{const r=A("axis",e,t,n),a=A("keepDims",e,t,n);return[ht.W(A("x",e,t,n),r,a)]}case"Cumsum":{const r=A("axis",e,t,n),a=A("exclusive",e,t,n),s=A("reverse",e,t,n);return[En.z(A("x",e,t,n),r,a,s)]}case"Bincount":const r=A("x",e,t,n),a=A("weights",e,t,n),s=A("size",e,t,n);return[$n.y(r,a,s)];case"DenseBincount":{const r=A("x",e,t,n),a=A("weights",e,t,n),s=A("size",e,t,n),i=A("binaryOutput",e,t,n);return[Rn.p(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=A("n",e,t,n),a=A("axis",e,t,n);let s=A("tensors",e,t,n);return s=s.slice(0,r),[Fn.z(s,a)]}case"Gather":{const r=A("x",e,t,n),a=A("indices",e,t,n);return[Dn.I(r,Xt.p(a,"int32"),0)]}case"GatherV2":{const r=A("axis",e,t,n),a=A("batchDims",e,t,n),s=A("x",e,t,n),i=A("indices",e,t,n);return[Dn.I(s,Xt.p(i,"int32"),r,a)]}case"Reverse":{const r=A("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=A("x",e,t,n);return[Mn.G(s,a)]}case"ReverseV2":{const r=A("axis",e,t,n),a=A("x",e,t,n);return[Mn.G(a,r)]}case"Slice":{const r=A("begin",e,t,n),a=A("size",e,t,n);return[On.t(A("x",e,t,n),r,a)]}case"StridedSlice":{const r=A("begin",e,t,n),a=A("end",e,t,n),s=A("strides",e,t,n),i=A("beginMask",e,t,n),o=A("endMask",e,t,n),u=A("ellipsisMask",e,t,n),l=A("newAxisMask",e,t,n),c=A("shrinkAxisMask",e,t,n),d=A("x",e,t,n);return[zn.N(d,r,a,s,i,o,u,l,c)]}case"Pack":return(0,S.tidy)((()=>{const r=A("axis",e,t,n),a=A("tensors",e,t,n),s=a[0].shape,i=Ln.L(a[0]).shape,o=a.map((e=>{const t=S.util.arraysEqual(e.shape,s);if(!t&&!S.util.arraysEqual(Ln.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:Bn.X(e,s)}));return[Pn.k(o,r)]}));case"Unpack":{const r=A("axis",e,t,n),a=A("tensor",e,t,n);return Vn.H(a,r)}case"Tile":{const r=A("reps",e,t,n);return[Wn.G(A("x",e,t,n),r)]}case"Split":case"SplitV":{const r=A("axis",e,t,n),a=A("numOrSizeSplits",e,t,n),s=A("x",e,t,n);return Un.V(s,a,r)}case"ScatterNd":{const r=A("indices",e,t,n),a=A("values",e,t,n),s=A("shape",e,t,n);return[Hn.s(r,a,s)]}case"GatherNd":{const r=A("x",e,t,n),a=A("indices",e,t,n);return[Gn.d(r,a)]}case"SparseToDense":{const r=A("sparseIndices",e,t,n),a=A("outputShape",e,t,n),s=A("sparseValues",e,t,n),i=A("defaultValue",e,t,n);return[wn.e(r,s,a,s.dtype===i.dtype?i:Xt.p(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=jt.rVs.sparseFillEmptyRows(A("indices",e,t,n),A("values",e,t,n),A("denseShape",e,t,n),A("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=jt.rVs.sparseReshape(A("inputIndices",e,t,n),A("inputShape",e,t,n),A("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[jt.rVs.sparseSegmentMean(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];case"SparseSegmentSum":return[jt.rVs.sparseSegmentSum(A("data",e,t,n),A("indices",e,t,n),A("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"FFT":return[qn.k(A("x",e,t,n))];case"IFFT":return[jn.S(A("x",e,t,n))];case"RFFT":return[Xn.Q(A("x",e,t,n))];case"IRFFT":return[Kn.w(A("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=jt.Z_8.stringNGrams(A("data",e,t,n),A("dataSplits",e,t,n),A("separator",e,t,n),A("nGramWidths",e,t,n),A("leftPad",e,t,n),A("rightPad",e,t,n),A("padWidth",e,t,n),A("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=jt.Z_8.stringSplit(A("input",e,t,n),A("delimiter",e,t,n),A("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[jt.Z_8.stringToHashBucketFast(A("input",e,t,n),A("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return S.tidy((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Xt.p(A("x",e,t,n),A("dtype",e,t,n))];case"ExpandDims":{const r=A("axis",e,t,n);return[Yn.d(A("x",e,t,n),r)]}case"Squeeze":{const r=A("axis",e,t,n);return[Ln.L(A("x",e,t,n),r)]}case"Reshape":return[Bn.X(A("x",e,t,n),A("shape",e,t,n))];case"MirrorPad":return[Qn.V(A("x",e,t,n),A("padding",e,t,n),A("mode",e,t,n))];case"PadV2":case"Pad":return[Zn.v(A("x",e,t,n),A("padding",e,t,n),A("constantValue",e,t,n))];case"SpaceToBatchND":{const r=A("blockShape",e,t,n),a=A("paddings",e,t,n);return[Jn.f(A("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=A("blockShape",e,t,n),a=A("crops",e,t,n);return[er.E(A("x",e,t,n),r,a)]}case"DepthToSpace":{const r=A("blockSize",e,t,n),a=A("dataFormat",e,t,n).toUpperCase();return[tr.n(A("x",e,t,n),r,a)]}case"BroadcastTo":return[nr.U(A("x",e,t,n),A("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=A("keyDType",e,t,n),s=A("valueDType",e,t,n),i=new nn(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=A("tableHandle",e,t,n,r),s=A("keys",e,t,n),i=A("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=A("tableHandle",e,t,n,r),s=A("keys",e,t,n),i=A("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=A("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=C(e.op);if(a&&a.customExecutor)return a.customExecutor(new ge(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return S.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class ar{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function sr(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>F(e)[0]));let c=[];null!=r&&(c=r.map((e=>F(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(lr(e)||cr(e)||dr(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const ir=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],or=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],ur=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function lr(e){return ir.indexOf(e.op)>=0}function cr(e){return or.indexOf(e.op)>=0}function dr(e){return ur.indexOf(e.op)>=0}class pr{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new pr(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=sr(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>F(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[F(e)[0]])),a=t.map((e=>F(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return(0,S.tidy)((()=>{const n=new ar(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=F(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=rr(t,r,n,this._resourceManager);if(S.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>E(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[R(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new ar(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>E(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[F(e)[0]])),i=n.map((e=>F(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=sr(e,o,this.weightMap,this._initNodes),p=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),h=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=F(t),a=[];a[r]=e[t],h[n]=a}));const f={},m=this.getFrozenTensorIds(h),g={};for(;p.length>0;){const e=this.processStack(s,p,t,h,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!lr(e)&&!E(e.name,h,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return h}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&A("isConstant",e.node,r,n)&&([c]=$(e.node.name,n)),null==r[e.node.name]){const d=rr(e.node,r,n,this._resourceManager);c||([c]=$(e.node.name,n));const p=n.currentContext;S.util.isPromise(d)?l.push(d.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=$(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!E(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!E(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=F(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));S.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&S.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=F(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=F(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class hr{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class fr{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new hr}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=S.io.browserHTTPRequest(e,this.loadOptions);else{const t=S.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(S.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=S.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new pr(te.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=te.Instance.transformGraph(e.modelInitializer);this.initializer=new pr(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=S.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof S.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function mr(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new fr(e,t);return await n.load(),n}const gr="3.8.0"},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,p=!1){const h=[];for(let e=0;e<t.length;e++)t[e]>s&&h.push({score:t[e],boxIndex:e,suppressBeginIndex:0});h.sort(d);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&h.length>0;){const t=h.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>s&&r(h,t,d))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),p&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),p=Math.max(a[1],a[3]),h=(o-s)*(u-i),f=(d-l)*(p-c);if(h<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(h+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>b});var r=n(8713),a=n(2885),s=n(5938),i=n(9121),o=n(6151),u=n(9122),l=n(569);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{d(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?l.oj(`${r}ms`,9):r.error,o=l.oj(e,25),u=t.rank,c=t.size,d=l.oj(t.shape.toString(),14);let p="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;p+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${c}\t%c${p}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var h=n(4077),f=n(747);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=x.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return x.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);l.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:d,attrs:p}=e,h=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,d,t,h,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.HD(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),i=new h.es(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,l.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new h.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new h._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof h._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.hu(a instanceof h.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,l.p8)((0,l.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l.cO(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),v);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.hu(l.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.hu(t.every((e=>e instanceof h.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.hu(n.value instanceof h.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.hu(l.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];l.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.hu(s.every((e=>e instanceof h.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new y(t)}return(0,a.iG)(e._tfengine.ENV),(0,h.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const x=b();function v(e,t){const n={a:e,b:t};return x.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>i,Vi:()=>o,iG:()=>u});var r=n(569);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return o}let o=null;function u(e){o=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>u,cF:()=>l,MX:()=>c,N8:()=>d,SR:()=>p,sq:()=>h,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>v,N_:()=>w,cj:()=>k,x3:()=>I,ze:()=>S,jq:()=>N,y3:()=>T,VY:()=>C});var r=n(7097),a=n(2885),s=n(4077),i=n(747);function o(){(0,a.OB)().set("PROD",!0)}function u(){(0,a.OB)().set("DEBUG",!0)}function l(){(0,a.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.BV.disposeVariables()}function p(){return r.BV}function h(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function v(){return r.BV.ready()}function w(){return r.BV.backendName}function k(e){r.BV.removeBackend(e)}function I(e){return r.BV.findBackend(e)}function S(e){return r.BV.findBackendFactory(e)}function N(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function C(e,t){(0,a.OB)().setPlatform(e,t)}(0,s.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>p,pn:()=>d,h7:()=>l,fN:()=>c,UQ:()=>o,ti:()=>u});var r=n(7097),a=n(4077),s=n(3740),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(a)),[a],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),h(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...a)),a,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof a.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.BV.gradients((()=>e(t)),[t],n);return h(s),{grad:s[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof a.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),h(s.grads),s}}function d(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function p(e){return r.BV.customGrad(e)}function h(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},8433:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>He.SY,Acos:()=>He.VG,Acosh:()=>He.Sp,AdadeltaOptimizer:()=>_t,AdagradOptimizer:()=>Et,AdamOptimizer:()=>Ft,AdamaxOptimizer:()=>Ot,Add:()=>He.mm,AddN:()=>He.Xz,All:()=>He.oT,Any:()=>He.IK,ArgMax:()=>He.sJ,ArgMin:()=>He.aJ,Asin:()=>He.M2,Asinh:()=>He.qw,Atan:()=>He.jM,Atan2:()=>He.QC,Atanh:()=>He.Oy,AvgPool:()=>He.Jh,AvgPool3D:()=>He._k,AvgPool3DGrad:()=>He.IM,AvgPoolGrad:()=>He.RO,BatchMatMul:()=>He.XL,BatchToSpaceND:()=>He.zw,Bincount:()=>He.zv,BroadcastTo:()=>He.Ly,Cast:()=>He.RF,Ceil:()=>He.gJ,ClipByValue:()=>He.xn,Complex:()=>He.Zz,ComplexAbs:()=>He.yj,Concat:()=>He.Eh,Conv2D:()=>He.mh,Conv2DBackpropFilter:()=>He.wU,Conv2DBackpropInput:()=>He.wm,Conv3D:()=>He.x1,Conv3DBackpropFilterV2:()=>He.o2,Conv3DBackpropInputV2:()=>He.ik,Cos:()=>He.mc,Cosh:()=>He.TR,CropAndResize:()=>He.Vc,Cumsum:()=>He.iH,DataStorage:()=>Pn.JL,DenseBincount:()=>He.QR,DepthToSpace:()=>He.T0,DepthwiseConv2dNative:()=>He.ci,DepthwiseConv2dNativeBackpropFilter:()=>He.sL,DepthwiseConv2dNativeBackpropInput:()=>He.y7,Diag:()=>He.$w,Dilation2D:()=>He.p4,Dilation2DBackpropFilter:()=>He.Vn,Dilation2DBackpropInput:()=>He.ek,ENV:()=>g.Vi,Einsum:()=>He.$g,Elu:()=>He.SX,EluGrad:()=>He.HE,Environment:()=>g.qA,Equal:()=>He.hd,Erf:()=>He.Om,Exp:()=>He.NE,ExpandDims:()=>He.YF,Expm1:()=>He.Y0,FFT:()=>He.vw,Fill:()=>He.de,FlipLeftRight:()=>He.Uy,Floor:()=>He.OR,FloorDiv:()=>He.je,FromPixels:()=>He.eB,FusedBatchNorm:()=>He.sH,FusedConv2D:()=>He._V,FusedDepthwiseConv2D:()=>He.lu,GatherNd:()=>He.q1,GatherV2:()=>He.qi,Greater:()=>He.iZ,GreaterEqual:()=>He.Ac,IFFT:()=>He.Qg,Identity:()=>He.iJ,Imag:()=>He.J_,IsFinite:()=>He.av,IsInf:()=>He.iW,IsNan:()=>He.r7,KernelBackend:()=>Pn.Zu,LRN:()=>He.eZ,LRNGrad:()=>He.Hh,LeakyRelu:()=>He.J$,Less:()=>He.vt,LessEqual:()=>He.CA,LinSpace:()=>He.e7,Log:()=>He.Zb,Log1p:()=>He.kU,LogSoftmax:()=>He.qC,LogicalAnd:()=>He.PY,LogicalNot:()=>He.Vf,LogicalOr:()=>He.MZ,Max:()=>He.Yo,MaxPool:()=>He.mT,MaxPool3D:()=>He.OA,MaxPool3DGrad:()=>He.OU,MaxPoolGrad:()=>He.OV,MaxPoolWithArgmax:()=>He.vF,Maximum:()=>He.BM,Mean:()=>He.q2,Min:()=>He.c1,Minimum:()=>He.q8,MirrorPad:()=>He.jQ,Mod:()=>He.Vb,MomentumOptimizer:()=>Lt,Multinomial:()=>He.NZ,Multiply:()=>He.wY,Neg:()=>He.ku,NonMaxSuppressionV3:()=>He.uv,NonMaxSuppressionV4:()=>He.cy,NonMaxSuppressionV5:()=>He.W0,NotEqual:()=>He.yQ,OP_SCOPE_SUFFIX:()=>Vt.zvA,OneHot:()=>He.we,OnesLike:()=>He.qW,Optimizer:()=>Ct,Pack:()=>He.Qi,PadV2:()=>He.ly,Pool:()=>He.Kg,Pow:()=>He.pe,Prelu:()=>He.o0,Prod:()=>He.Dl,RMSPropOptimizer:()=>Bt,Range:()=>He.e6,Rank:()=>Pt.yw,Real:()=>He.xJ,RealDiv:()=>He.oH,Reciprocal:()=>He.$H,Reduction:()=>Wt.I,Relu:()=>He.qk,Relu6:()=>He.Sb,Reshape:()=>He.HZ,ResizeBilinear:()=>He._Y,ResizeBilinearGrad:()=>He.zb,ResizeNearestNeighbor:()=>He.dp,ResizeNearestNeighborGrad:()=>He.Hm,Reverse:()=>He.mK,RotateWithOffset:()=>He.b9,Round:()=>He.e0,Rsqrt:()=>He.bV,SGDOptimizer:()=>zt,ScatterNd:()=>He.xQ,Select:()=>He.Ph,Selu:()=>He.oF,Sigmoid:()=>He.a5,Sign:()=>He.i5,Sin:()=>He.RQ,Sinh:()=>He.w3,Slice:()=>He.p2,Softmax:()=>He.Gc,Softplus:()=>He.MR,SpaceToBatchND:()=>He.TQ,SparseFillEmptyRows:()=>He.O3,SparseReshape:()=>He.nh,SparseSegmentMean:()=>He.YW,SparseSegmentSum:()=>He.Zj,SparseToDense:()=>He.D2,SplitV:()=>He.L8,Sqrt:()=>He.FK,Square:()=>He.bK,SquaredDifference:()=>He._t,Step:()=>He.h8,StridedSlice:()=>He.m2,StringNGrams:()=>He._J,StringSplit:()=>He.s1,StringToHashBucketFast:()=>He.Xk,Sub:()=>He.Tr,Sum:()=>He.GB,Tan:()=>He.sE,Tanh:()=>He.MI,Tensor:()=>xe.es,TensorBuffer:()=>xe.YD,Tile:()=>He.n9,TopK:()=>He.cW,Transform:()=>He.wx,Transpose:()=>He.G3,Unique:()=>He.kp,Unpack:()=>He.To,UnsortedSegmentSum:()=>He.Qv,Variable:()=>xe._w,ZerosLike:()=>He.Ru,_FusedMatMul:()=>He.us,abs:()=>Vt.WnP,acos:()=>Vt.Khb,acosh:()=>Vt.__u,add:()=>Vt.IHx,addN:()=>Vt.QBD,all:()=>Vt.$6P,any:()=>Vt.YjB,argMax:()=>Vt.NqF,argMin:()=>Vt.vHJ,asin:()=>Vt.ZRM,asinh:()=>Vt.VfV,atan:()=>Vt.z4N,atan2:()=>Vt.fvJ,atanh:()=>Vt.C80,avgPool:()=>Vt.wS1,avgPool3d:()=>Vt.uR5,backend:()=>bt.y3,backend_util:()=>d,basicLSTMCell:()=>Vt.zEQ,batchNorm:()=>Vt.tgs,batchNorm2d:()=>Vt.Dxk,batchNorm3d:()=>Vt.JY5,batchNorm4d:()=>Vt.p3b,batchToSpaceND:()=>Vt.E4h,bincount:()=>Vt.yE8,booleanMaskAsync:()=>Vt.anm,broadcastTo:()=>Vt.UFq,browser:()=>i,buffer:()=>Vt.f3b,cast:()=>Vt.pju,ceil:()=>Vt.mDi,clipByValue:()=>Vt.iUl,clone:()=>Vt.d9v,complex:()=>Vt.PYB,concat:()=>Vt.zoF,concat1d:()=>Vt.gME,concat2d:()=>Vt.Izb,concat3d:()=>Vt.MNy,concat4d:()=>Vt.ZaL,conv1d:()=>Vt.PAt,conv2d:()=>Vt.Tek,conv2dTranspose:()=>Vt.bc,conv3d:()=>Vt.pdZ,conv3dTranspose:()=>Vt.$QV,copyRegisteredKernels:()=>Ge.T3,cos:()=>Vt.mCk,cosh:()=>Vt.f9Y,cosineWindow:()=>Vt.mew,cumsum:()=>Vt.zbp,customGrad:()=>Nt.cb,denseBincount:()=>Vt.ppE,deprecationWarn:()=>bt.MX,depthToSpace:()=>Vt.nTT,depthwiseConv2d:()=>Vt.B10,device_util:()=>r,diag:()=>Vt.Ka3,dilation2d:()=>Vt.WmZ,disableDeprecationWarnings:()=>bt.cF,dispose:()=>bt.B9,disposeVariables:()=>bt.N8,div:()=>Vt.hiC,divNoNan:()=>Vt.NTj,dot:()=>Vt.AKD,dropout:()=>Vt.rvX,einsum:()=>Vt.WYO,elu:()=>Vt.pyx,enableDebugMode:()=>bt.R,enableProdMode:()=>bt.G4,enclosingPowerOfTwo:()=>Vt.GRh,engine:()=>bt.SR,env:()=>g.OB,equal:()=>Vt.DgJ,erf:()=>Vt.qNN,exp:()=>Vt.Qqt,expandDims:()=>Vt.dt4,expm1:()=>Vt.t$B,eye:()=>Vt.iyy,fft:()=>Vt.kp_,fill:()=>Vt.hlL,findBackend:()=>bt.x3,findBackendFactory:()=>bt.ze,floor:()=>Vt.GWj,floorDiv:()=>Vt.qPi,fused:()=>Vt.imm,gather:()=>Vt.Iqj,gatherND:()=>Vt.dbB,gather_util:()=>o,getBackend:()=>bt.N_,getGradient:()=>Ge.uk,getKernel:()=>Ge.pI,getKernelsForBackend:()=>Ge.tr,grad:()=>Nt.UQ,grads:()=>Nt.ti,greater:()=>Vt.pjt,greaterEqual:()=>Vt.brS,ifft:()=>Vt.Sxn,imag:()=>Vt.asL,image:()=>Vt.BHj,inTopKAsync:()=>Vt.V3u,io:()=>a,irfft:()=>Vt.wx0,isFinite:()=>Vt.xVT,isInf:()=>Vt.UWc,isNaN:()=>Vt.i2d,keep:()=>bt.Cn,kernel_impls:()=>p,leakyRelu:()=>Vt.hi7,less:()=>Vt.d9m,lessEqual:()=>Vt.zN1,linalg:()=>Vt.$r2,linspace:()=>Vt.SX3,localResponseNormalization:()=>Vt.G9k,log:()=>Vt.cM7,log1p:()=>Vt.Krr,logSigmoid:()=>Vt.e_t,logSoftmax:()=>Vt.CmS,logSumExp:()=>Vt.l_t,logicalAnd:()=>Vt.HvI,logicalNot:()=>Vt.hJK,logicalOr:()=>Vt.K5V,logicalXor:()=>Vt.egP,losses:()=>Vt.MB5,matMul:()=>Vt.OI3,math:()=>s,max:()=>Vt.Fp7,maxPool:()=>Vt._sB,maxPool3d:()=>Vt.YQQ,maxPoolWithArgmax:()=>Vt.Ip$,maximum:()=>Vt.gWQ,mean:()=>Vt.J69,memory:()=>bt.sq,meshgrid:()=>Vt.ry_,min:()=>Vt.VV$,minimum:()=>Vt.LTh,mirrorPad:()=>Vt.VdP,mod:()=>Vt.wQq,moments:()=>Vt.Gi7,movingAverage:()=>Vt.p_,mul:()=>Vt.dC7,multiRNNCell:()=>Vt.rq4,multinomial:()=>Vt.SJ_,neg:()=>Vt.W76,nextFrame:()=>qt,norm:()=>Vt.KOy,notEqual:()=>Vt.Quu,oneHot:()=>Vt.lfX,ones:()=>Vt.iUs,onesLike:()=>Vt.JpU,op:()=>Vt.op,outerProduct:()=>Vt.N2O,pad:()=>Vt.vku,pad1d:()=>Vt.pNR,pad2d:()=>Vt.koy,pad3d:()=>Vt.t1L,pad4d:()=>Vt.lGY,pool:()=>Vt.d_R,pow:()=>Vt.sQ3,prelu:()=>Vt.AL3,print:()=>Vt.S0v,prod:()=>Vt.WVs,profile:()=>bt.N5,rand:()=>Vt.TN_,randomGamma:()=>Vt.wzB,randomNormal:()=>Vt.nGf,randomUniform:()=>Vt.LGj,range:()=>Vt.w6H,ready:()=>bt.Cd,real:()=>Vt.kwC,reciprocal:()=>Vt.M25,registerBackend:()=>bt.jq,registerGradient:()=>Ge.Li,registerKernel:()=>Ge.wC,relu:()=>Vt.UYe,relu6:()=>Vt.btT,removeBackend:()=>bt.cj,reshape:()=>Vt.XLQ,reverse:()=>Vt.GYS,reverse1d:()=>Vt.SDf,reverse2d:()=>Vt.diP,reverse3d:()=>Vt.sx7,reverse4d:()=>Vt.mG2,rfft:()=>Vt.QEs,round:()=>Vt.NMM,rsqrt:()=>Vt.bp0,scalar:()=>Vt.iD$,scatterND:()=>Vt.snQ,scatter_util:()=>Je,selu:()=>Vt.U8D,separableConv2d:()=>Vt.U_I,serialization:()=>u,setBackend:()=>bt.CQ,setPlatform:()=>bt.VY,setdiff1dAsync:()=>Vt.ODp,sigmoid:()=>Vt.XD2,sign:()=>Vt.Xxe,signal:()=>Vt.tdS,sin:()=>Vt.O$l,sinh:()=>Vt.R_K,slice:()=>Vt.tPi,slice1d:()=>Vt.jZU,slice2d:()=>Vt.SmN,slice3d:()=>Vt.CnO,slice4d:()=>Vt.p0P,slice_util:()=>et,softmax:()=>Vt.XAC,softplus:()=>Vt.Wvh,spaceToBatchND:()=>Vt.fBT,sparse:()=>Vt.rVs,sparseToDense:()=>Vt.ers,spectral:()=>Vt.uN7,split:()=>Vt.Vl2,sqrt:()=>Vt._b3,square:()=>Vt.h62,squaredDifference:()=>Vt.$i,squeeze:()=>Vt.L9e,stack:()=>Vt.knu,step:()=>Vt.Nbs,stridedSlice:()=>Vt.NXj,string:()=>Vt.Z_8,sub:()=>Vt.luU,sum:()=>Vt.Smz,sumOutType:()=>Pt.z4,tan:()=>Vt.ORZ,tanh:()=>Vt.AEp,tensor:()=>Vt.XeE,tensor1d:()=>Vt.RRF,tensor2d:()=>Vt.odF,tensor3d:()=>Vt.wOQ,tensor4d:()=>Vt.yXz,tensor5d:()=>Vt.Bfx,tensor6d:()=>Vt.xZs,tensor_util:()=>at,test_util:()=>l,tidy:()=>bt.lu,tile:()=>Vt.Gg6,time:()=>bt.XV,topk:()=>Vt.hg7,train:()=>Ht,transpose:()=>Vt.p4s,truncatedNormal:()=>Vt.Xu6,unique:()=>Vt.Two,unregisterGradient:()=>Ge.bt,unregisterKernel:()=>Ge.nE,unsortedSegmentSum:()=>Vt.pUJ,unstack:()=>Vt.HHK,upcastType:()=>Pt.x8,util:()=>st,valueAndGrad:()=>Nt.h7,valueAndGrads:()=>Nt.fN,variable:()=>Vt.VD$,variableGrads:()=>Nt.pn,version_core:()=>yt,where:()=>Vt.arb,whereAsync:()=>Vt.itS,zeros:()=>Vt.lls,zerosLike:()=>Vt.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>m,isMobile:()=>f});var a={};n.r(a),n.d(a,{browserFiles:()=>Se,browserHTTPRequest:()=>Fe,concatenateArrayBuffers:()=>C,copyModel:()=>de,decodeWeights:()=>I,encodeWeights:()=>k,fromMemory:()=>Oe,getLoadHandlers:()=>z,getModelArtifactsForJSON:()=>E,getModelArtifactsInfoForJSON:()=>$,getSaveHandlers:()=>O,http:()=>Re,isHTTPScheme:()=>Ee,listModels:()=>le,loadWeights:()=>Ce,moveModel:()=>pe,registerLoadRouter:()=>M,registerSaveRouter:()=>D,removeModel:()=>ce,weightsLoaderFactory:()=>_e,withSaveHandler:()=>ze});var s={};n.r(s),n.d(s,{confusionMatrix:()=>Ue});var i={};n.r(i),n.d(i,{fromPixels:()=>Qe,fromPixelsAsync:()=>Ke,toPixels:()=>Ye});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>Ze});var u={};n.r(u),n.d(u,{Serializable:()=>tt,SerializationMap:()=>nt,registerClass:()=>rt});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>it,encodeStrings:()=>gt,expectArrayBuffersEqual:()=>mt,expectArraysClose:()=>ot,expectArraysEqual:()=>dt,expectNumbersClose:()=>pt,expectPromiseToFail:()=>ct,expectValuesInRange:()=>ft,testEpsilon:()=>ut});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>Mn,computeOutShape:()=>Dn,segOpComputeOptimalWindowSize:()=>Fn});var d={};n.r(d),n.d(d,{ERF_A1:()=>cn,ERF_A2:()=>dn,ERF_A3:()=>pn,ERF_A4:()=>hn,ERF_A5:()=>fn,ERF_P:()=>ln,PARALLELIZE_THRESHOLD:()=>Jt,SELU_SCALE:()=>un.$,SELU_SCALEALPHA:()=>un.y,applyActivation:()=>Zt.QH,assertAndGetBroadcastShape:()=>Xt.$N,assertAxesAreInnerMostDims:()=>jt.lB,assertParamsConsistent:()=>Kt,assignToTypedArray:()=>kn,axesAreInnerMostDims:()=>jt.YB,calculateShapes:()=>Je.calculateShapes,checkEinsumDimSizes:()=>_n,combineLocations:()=>jt.Vh,complexWithEvenIndex:()=>xn,complexWithOddIndex:()=>vn,computeConv2DInfo:()=>Qt.Ix,computeConv3DInfo:()=>Qt.jw,computeDefaultPad:()=>Qt.aO,computeDilation2DInfo:()=>Qt.Rf,computeOptimalWindowSize:()=>en,computeOutAndReduceShapes:()=>jt.kz,computeOutShape:()=>Yt,computePool2DInfo:()=>Qt.Xw,computePool3DInfo:()=>Qt.pl,convertConv2DDataFormat:()=>Qt.sl,decodeEinsumEquation:()=>Tn,eitherStridesOrDilationsAreOne:()=>Qt.jT,expandShapeToKeepDim:()=>jt.rv,exponent:()=>Sn,exponents:()=>In,fromStringArrayToUint8:()=>zn,fromUint8ToStringArray:()=>On,getAxesPermutation:()=>jt.Q3,getBroadcastDims:()=>Xt.XF,getComplexWithIndex:()=>wn,getEinsumComputePath:()=>An,getEinsumPermutation:()=>Cn,getFusedBiasGradient:()=>Zt.pf,getFusedDyActivation:()=>Zt.Fr,getImageCenter:()=>tn,getInnerMostAxes:()=>jt.sY,getPermuted:()=>rn,getReductionAxes:()=>Xt.RR,getReshaped:()=>nn,getReshapedPermuted:()=>an,getSliceBeginCoords:()=>sn,getSliceSize:()=>on,getUndoAxesPermutation:()=>jt.LJ,isIdentityPermutation:()=>En,log:()=>gn,mergeRealAndImagArrays:()=>yn,prepareAndValidate:()=>Ze,prepareSplitSize:()=>Rn,segment_util:()=>c,shouldFuse:()=>Zt.uy,slice_util:()=>et,splitRealAndImagArrays:()=>bn,tupleValuesAreOne:()=>Qt.I0,upcastType:()=>Pt.x8,validateInput:()=>Je.validateInput,validateUpdateShape:()=>Je.validateUpdateShape,warn:()=>mn});var p={};n.r(p),n.d(p,{nonMaxSuppressionV3Impl:()=>Ln.GP,nonMaxSuppressionV4Impl:()=>Ln.qP,nonMaxSuppressionV5Impl:()=>Ln.pA,whereImpl:()=>Bn.Z});var h=n(7097);function f(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function m(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var g=n(2885);const y=(0,g.OB)();y.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),y.registerFlag("IS_BROWSER",(()=>m())),y.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),y.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),y.registerFlag("PROD",(()=>!1)),y.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>y.getBool("DEBUG"))),y.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),y.registerFlag("IS_TEST",(()=>!1)),y.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),y.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var b=n(1661),x=n(701),v=n(569);const w={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function k(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:S(await Promise.all(r)),specs:n}}function I(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=(0,v.NA)(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=w[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=R()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=(0,v.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=w[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,x.X)(e,o,"float32"),i=(0,x.X)(r,o,"float32");n[t]=(0,b.P)(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=(0,x.X)(l,o,i))}return n}function S(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const N="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function T(e){return N?Buffer.byteLength(e):new Blob([e]).size}function C(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function _(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function A(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function E(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function $(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:T(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:T(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function R(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class F{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==F.instance&&(F.instance=new F),F.instance}static registerSaveRouter(e){F.getInstance().saveRouters.push(e)}static registerLoadRouter(e){F.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return F.getHandlers(e,"save")}static getLoadHandlers(e,t){return F.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?F.getInstance().loadRouters:F.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const D=e=>F.registerSaveRouter(e),M=e=>F.registerLoadRouter(e),O=e=>F.getSaveHandlers(e),z=(e,t)=>F.getLoadHandlers(e,t),L="tensorflowjs",B="models_store",P="model_info_store";function V(){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function W(e){const t=e.result;t.createObjectStore(B,{keyPath:"modelPath"}),t.createObjectStore(P,{keyPath:"modelPath"})}class U{constructor(e){if(this.indexedDB=V(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(L,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(B,"readonly"),r=t.objectStore(B).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=$(t),s=a.transaction(P,"readwrite");let i=s.objectStore(P);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(B,"readwrite");const o=u.objectStore(B).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(P);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}U.URL_SCHEME="indexeddb://";const H=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};F.registerSaveRouter(H),F.registerLoadRouter(H);class G{constructor(){this.indexedDB=V()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(L,1);n.onupgradeneeded=()=>W(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(P,"readonly"),s=a.objectStore(P).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(L,1);r.onupgradeneeded=()=>W(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(P,"readwrite"),i=s.objectStore(P),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(B,"readwrite");const r=u.objectStore(B).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const q="/",j="tensorflowjs_models",X="info",K="model_topology",Y="weight_specs",Q="weight_data",Z="model_metadata";function J(e){return{info:[j,e,X].join(q),topology:[j,e,K].join(q),weightSpecs:[j,e,Y].join(q),weightData:[j,e,Q].join(q),modelMetadata:[j,e,Z].join(q)}}function ee(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function te(e){const t=e.split(q);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(q)}class ne{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=J(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=$(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(N)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ee(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(N){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ne.URL_SCHEME="localstorage://";const re=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ne.URL_SCHEME)?(t=e.slice(ne.URL_SCHEME.length),new ne(t)):null;var t};F.registerSaveRouter(re),F.registerLoadRouter(re);class ae{constructor(){(0,v.hu)((0,g.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,v.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=j+q,n=q+X;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[te(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=J(e=(t=e).startsWith(ne.URL_SCHEME)?t.slice(ne.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ee(n),r}}const se="://";class ie{constructor(){this.managers={}}static getInstance(){return null==ie.instance&&(ie.instance=new ie),ie.instance}static registerManager(e,t){(0,v.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(se)&&(e=e.slice(0,e.indexOf(se))),(0,v.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ie.getInstance();(0,v.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function oe(e){if(-1===e.indexOf(se))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ie.getSchemes().join(",")}`);return{scheme:e.split(se)[0],path:e.split(se)[1]}}async function ue(e,t,n=!1){(0,v.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=F.getLoadHandlers(e);(0,v.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,v.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=F.getSaveHandlers(t);(0,v.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,v.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=oe(e).scheme,u=oe(e).path,l=o===oe(e).scheme,c=await a.load();n&&l&&await ie.getManager(o).removeModel(u);const d=await i.save(c);return n&&!l&&await ie.getManager(o).removeModel(u),d.modelArtifactsInfo}async function le(){const e=ie.getSchemes(),t={};for(const n of e){const e=await ie.getManager(n).listModels();for(const r in e)t[n+se+r]=e[r]}return t}async function ce(e){const t=oe(e);return ie.getManager(t.scheme).removeModel(t.path)}async function de(e,t){return ue(e,t,!1)}async function pe(e,t){return ue(e,t,!0)}class he{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,g.OB)().get("IS_BROWSER")){(0,g.OB)().setPlatform("browser",new he);try{ie.registerManager(ne.URL_SCHEME,new ae)}catch(e){}try{ie.registerManager(U.URL_SCHEME,new G)}catch(e){}}let fe;(0,g.OB)().get("IS_NODE")&&(0,g.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,g.OB)().global.fetch?(0,g.OB)().global.fetch(e,t):(null==fe&&(fe=n(5410)),fe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var me=n(2657),ge=n(2271),ye=n(8723),be=n(9798),xe=n(4077);(0,h.wv)();const ve={buffer:me.f,cast:ge.p,clone:ye.d,print:be.S};function we(e){return new Promise((e=>setTimeout(e))).then(e)}(0,xe.Vp)(ve);class ke{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ke.URL_SCHEME)&&(e=e.slice(ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=A(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await we((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await we((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:$(e)}}}}ke.URL_SCHEME="downloads://";class Ie{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=E(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,C(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>_(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=_(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Se(e){return new Ie(e)}function Ne(e,t,n,r){!function(e){(0,v.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,v.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,v.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,v.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Te(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,g.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ne(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ne(a,t.onProgress,.5,1)}async function Ce(e,t="",n,r){return _e((e=>Te(e,{requestInit:r})))(e,t,n)}function _e(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=w[u]*v.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),d={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=I(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]})),p+=n})),d}}F.registerSaveRouter((e=>(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ke.URL_SCHEME)?function(e="model"){return new ke(e)}(e.slice(ke.URL_SCHEME.length)):null));class Ae{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,v.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,g.OB)().platform.fetch,(0,v.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,v.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=A(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:$(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return E(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,C(await Te(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ee(e){return null!=e.match(Ae.URL_SCHEME_REGEX)}Ae.URL_SCHEME_REGEX=/^https?:\/\//;const $e=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ee(e))):Ee(e),n)return Re(e,t)}return null};function Re(e,t){return new Ae(e,t)}function Fe(e,t){return Re(e,t)}F.registerSaveRouter($e),F.registerLoadRouter($e);class De{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Me{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Oe(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new De(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new De({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ze(e){return new Me(e)}var Le=n(3740),Be=n(8687),Pe=n(6708),Ve=n(2668),We=n(9065);const Ue=(0,Ve.op)({confusionMatrix_:function(e,t,n){const r=(0,Le._1)(e,"labels","confusionMatrix"),a=(0,Le._1)(t,"predictions","confusionMatrix");v.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),v.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),v.hu(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),v.hu(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),v.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,Pe.l)((0,ge.p)(r,"int32"),n),i=(0,Pe.l)((0,ge.p)(a,"int32"),n),o=(0,We.p)(s),u=(0,Be.O)(o,i);return(0,ge.p)(u,"int32")}});var He=n(9121),Ge=n(6151),qe=n(9906);let je;function Xe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ge.pI)(He.eB,h.BV.backendName)){const n={pixels:e},r={numChannels:t};return h.BV.runKernel(He.eB,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==je&&(je=document.createElement("canvas").getContext("2d")),je.canvas.width=u,je.canvas.height=l,je.drawImage(e,0,0,u,l),c=je.getImageData(0,0,u,l).data),4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}const p=[l,u,t];return(0,qe.w)(d,p,"int32")}async function Ke(e,t=3){let n=null;if((0,g.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Xe(n,t)}async function Ye(e,t){let n=(0,Le._1)(e,"img","toPixels");if(!(e instanceof xe.es)){const e=n;n=(0,ge.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Qe=(0,Ve.op)({fromPixels_:Xe});function Ze(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,v.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,v.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}var Je=n(3028),et=n(7650);class tt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class nt{constructor(){this.classNameMap={}}static getMap(){return null==nt.instance&&(nt.instance=new nt),nt.instance}static register(e){nt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rt(e){(0,v.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,v.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,v.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),nt.register(e)}var at=n(747),st=n(9122);const it=.1;function ot(e,t,n){return null==n&&(n=ut()),lt(e,t,((e,t)=>ht(e,t,n)))}function ut(){return 32===h.BV.backend.floatPrecision()?.001:it}function lt(e,t,n){let r=!0;if(((0,v.fU)(e)||(0,v.fU)(t))&&(r=!1),(0,v.fU)(e)&&(0,v.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Le.C)(e),r=(0,Le.C)(t);if(!(0,v.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,v.fU)(e)?e:(0,v.xH)(e),s=(0,v.fU)(t)?t:(0,v.xH)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ct(e,t){e().then((()=>t.fail()),(()=>t()))}function dt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,v.HD)(e)||(0,v.HD)(e[0])||(0,v.HD)(t)||(0,v.HD)(t[0])?lt(e,n,((e,t)=>e==t)):lt(e,t,((e,t)=>ht(e,t,0)))}function pt(e,t,n){if(null==n&&(n=ut()),!ht(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function ht(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ft(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function mt(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function gt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?gt(n):e[t]=(0,st.encodeString)(n)}return e}const yt="3.8.0";var bt=n(4368),xt=n(6407),vt=n(1274),wt=n(4841),kt=n(3261),It=n(248),St=n(6577),Nt=n(633),Tt=n(9494);class Ct extends tt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,bt.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Nt.pn)(e,t)}dispose(){null!=this.iterations_&&(0,bt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Tt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ct,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _t extends Ct{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(s,this.rho),(0,wt.d)((0,It.h)(a),1-this.rho)),t=(0,wt.d)((0,vt.h)((0,kt._)((0,xt.I)(i,this.epsilon)),(0,kt._)((0,xt.I)(s,this.epsilon))),a),n=(0,xt.I)((0,wt.d)(i,this.rho),(0,wt.d)((0,It.h)(t),1-this.rho));s.assign(e),i.assign(n);const o=(0,xt.I)((0,wt.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,bt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,bt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}_t.className="Adadelta",rt(_t);var At=n(4006);class Et extends Ct{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,bt.lu)((()=>(0,At.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)(s,(0,It.h)(a));s.assign(e);const t=(0,xt.I)((0,wt.d)((0,vt.h)(a,(0,kt._)((0,xt.I)(e,h.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,bt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Et.className="Adagrad",rt(Et);var $t=n(3453),Rt=n(827);class Ft extends Ct{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,bt.lu)((()=>{this.accBeta1=(0,Tt.i)(t).variable(),this.accBeta2=(0,Tt.i)(n).variable()})),null==r&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Rt.l)(1,this.accBeta1),r=(0,Rt.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=h.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,bt.lu)((()=>(0,St.P)(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,bt.lu)((()=>(0,St.P)(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=(0,xt.I)((0,wt.d)(o,this.beta1),(0,wt.d)(i,1-this.beta1)),c=(0,xt.I)((0,wt.d)(u,this.beta2),(0,wt.d)((0,It.h)(i),1-this.beta2)),d=(0,vt.h)(l,n),p=(0,vt.h)(c,r);o.assign(l),u.assign(c);const f=(0,xt.I)((0,wt.d)((0,vt.h)(d,(0,xt.I)((0,kt._)(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,wt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,wt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,bt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,bt.lu)((()=>{this.accBeta1.assign((0,$t.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,$t.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ft.className="Adam",rt(Ft);var Dt=n(6235),Mt=n(632);class Ot extends Ct{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,bt.lu)((()=>{this.iteration=(0,Tt.i)(0).variable(),this.accBeta1=(0,Tt.i)(t).variable()})),null==r&&(this.epsilon=h.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Rt.l)(1,this.accBeta1),r=(0,vt.h)(-this.learningRate,(0,xt.I)((0,wt.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=h.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,St.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,St.P)(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=(0,xt.I)((0,wt.d)(o,this.beta1),(0,wt.d)(i,1-this.beta1)),c=(0,wt.d)(u,this.beta2),d=(0,Dt.W)(i),p=(0,Mt.g)(c,d);o.assign(l),u.assign(p);const f=(0,xt.I)((0,wt.d)((0,vt.h)(r,n),(0,vt.h)(l,(0,xt.I)(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,xt.I)(this.iteration,1)),this.accBeta1.assign((0,wt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,bt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Ot.className="Adamax",rt(Ot);class zt extends Ct{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=h.BV.registeredVariables[t];(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,bt.Cn)((0,Tt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zt.className="SGD",rt(zt);class Lt extends zt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Tt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,bt.lu)((()=>{let e;const t=(0,xt.I)((0,wt.d)(this.m,a),s);e=this.useNesterov?(0,xt.I)((0,wt.d)(this.c,(0,xt.I)(s,(0,wt.d)(t,this.m))),r):(0,xt.I)((0,wt.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,bt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Lt.className="Momentum",rt(Lt);class Bt extends Ct{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=h.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=h.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,wt.d)(i,this.decay),(0,wt.d)((0,It.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,xt.I)((0,wt.d)(t,this.decay),(0,wt.d)(s,1-this.decay)),u=(0,vt.h)((0,wt.d)(s,this.learningRate),(0,kt._)((0,Rt.l)(e,(0,xt.I)((0,It.h)(a),this.epsilon)))),l=(0,xt.I)((0,wt.d)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=(0,Rt.l)(r,l);r.assign(c)}else{const e=(0,xt.I)((0,wt.d)(i,this.decay),(0,wt.d)((0,It.h)(s),1-this.decay)),t=(0,xt.I)((0,wt.d)(o,this.momentum),(0,vt.h)((0,wt.d)(s,this.learningRate),(0,kt._)((0,xt.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Rt.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,bt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,bt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,bt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Bt.className="RMSProp",rt(Bt);var Pt=n(1221),Vt=n(4600),Wt=n(9876);class Ut{static sgd(e){return new zt(e)}static momentum(e,t,n=!1){return new Lt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Bt(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Ft(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _t(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Ot(e,t,n,r,a)}static adagrad(e,t=.1){return new Et(e,t)}}const Ht={sgd:Ut.sgd,momentum:Ut.momentum,adadelta:Ut.adadelta,adagrad:Ut.adagrad,rmsprop:Ut.rmsprop,adamax:Ut.adamax,adam:Ut.adam},Gt="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function qt(){return new Promise((e=>Gt((()=>e()))))}var jt=n(3591),Xt=n(2200);function Kt(e,t){const n=e[0].length;e.forEach(((e,t)=>{v.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),v.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)v.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Yt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Qt=n(2582),Zt=n(9323);const Jt=30;function en(e){return e<=Jt?e:(0,v.jP)(e,Math.floor(Math.sqrt(e)))}function tn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function rn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function an(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function sn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function on(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var un=n(3179);const ln=.3275911,cn=.254829592,dn=-.284496736,pn=1.421413741,hn=-1.453152027,fn=1.061405429;function mn(...e){(0,g.OB)().getBool("IS_TEST")||console.warn(...e)}function gn(...e){(0,g.OB)().getBool("IS_TEST")||console.log(...e)}function yn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function bn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function xn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function vn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function wn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function kn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function In(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Sn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Nn=/->/g;function Tn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Nn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");(0,v.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Cn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function _n(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,v.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function An(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=$n(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function En(e){return e.every(((e,t)=>e===t))}function $n(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Rn(e,t,n=0){let r=[];if("number"==typeof t)(0,v.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,v.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,v.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Fn(e,t){let n,r=!1;for(e<=Jt?(n=e,r=!0):n=(0,v.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,v.jP)(e,n+1);return n}function Dn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Mn(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function On(e){try{return e.map((e=>(0,st.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function zn(e){return e.map((e=>(0,st.encodeString)(e)))}var Ln=n(3337),Bn=n(8333),Pn=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>d,M2:()=>p,qw:()=>h,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>v,XL:()=>w,zw:()=>k,zv:()=>I,Ly:()=>S,RF:()=>N,gJ:()=>T,xn:()=>C,Zz:()=>_,yj:()=>A,Eh:()=>E,mh:()=>$,wU:()=>R,wm:()=>F,x1:()=>D,o2:()=>M,ik:()=>O,mc:()=>z,TR:()=>L,iH:()=>B,Vc:()=>P,QR:()=>V,T0:()=>W,ci:()=>U,sL:()=>H,y7:()=>G,$w:()=>q,p4:()=>j,ek:()=>X,Vn:()=>K,oH:()=>Y,$g:()=>Q,SX:()=>Z,HE:()=>J,Om:()=>ee,hd:()=>te,NE:()=>ne,YF:()=>re,Y0:()=>ae,vw:()=>se,de:()=>ie,Uy:()=>oe,OR:()=>ue,je:()=>le,sH:()=>ce,qi:()=>de,q1:()=>pe,iZ:()=>he,Ac:()=>fe,iJ:()=>me,Qg:()=>ge,J_:()=>ye,av:()=>be,iW:()=>xe,r7:()=>ve,J$:()=>we,vt:()=>ke,CA:()=>Ie,e7:()=>Se,Zb:()=>Ne,kU:()=>Te,PY:()=>Ce,Vf:()=>_e,MZ:()=>Ae,qC:()=>Ee,eZ:()=>$e,Hh:()=>Re,Yo:()=>Fe,BM:()=>De,mT:()=>Me,OV:()=>Oe,OA:()=>ze,OU:()=>Le,vF:()=>Be,q2:()=>Pe,c1:()=>Ve,q8:()=>We,jQ:()=>Ue,Vb:()=>He,NZ:()=>Ge,wY:()=>qe,ku:()=>je,yQ:()=>Xe,uv:()=>Ke,cy:()=>Ye,W0:()=>Qe,qW:()=>Ze,we:()=>Je,Qi:()=>et,ly:()=>tt,Kg:()=>nt,pe:()=>rt,o0:()=>at,Dl:()=>st,e6:()=>it,xJ:()=>ot,$H:()=>ut,qk:()=>lt,HZ:()=>ct,dp:()=>dt,Hm:()=>pt,_Y:()=>ht,zb:()=>ft,Sb:()=>mt,mK:()=>gt,e0:()=>yt,bV:()=>bt,xQ:()=>xt,Ph:()=>vt,oF:()=>wt,p2:()=>kt,RQ:()=>It,w3:()=>St,i5:()=>Nt,a5:()=>Tt,MR:()=>Ct,FK:()=>_t,GB:()=>At,TQ:()=>Et,L8:()=>$t,Gc:()=>Rt,O3:()=>Ft,nh:()=>Dt,YW:()=>Mt,Zj:()=>Ot,D2:()=>zt,_t:()=>Lt,bK:()=>Bt,m2:()=>Pt,_J:()=>Vt,s1:()=>Wt,Xk:()=>Ut,Tr:()=>Ht,sE:()=>Gt,MI:()=>qt,n9:()=>jt,cW:()=>Xt,wx:()=>Kt,G3:()=>Yt,kp:()=>Qt,To:()=>Zt,Qv:()=>Jt,Ru:()=>en,h8:()=>tn,eB:()=>nn,b9:()=>rn,us:()=>an,_V:()=>sn,lu:()=>on});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",d="ArgMin",p="Asin",h="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",v="AvgPool3DGrad",w="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="Cast",T="Ceil",C="ClipByValue",_="Complex",A="ComplexAbs",E="Concat",$="Conv2D",R="Conv2DBackpropFilter",F="Conv2DBackpropInput",D="Conv3D",M="Conv3DBackpropFilterV2",O="Conv3DBackpropInputV2",z="Cos",L="Cosh",B="Cumsum",P="CropAndResize",V="DenseBincount",W="DepthToSpace",U="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",q="Diag",j="Dilation2D",X="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",Y="RealDiv",Q="Einsum",Z="Elu",J="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",ie="Fill",oe="FlipLeftRight",ue="Floor",le="FloorDiv",ce="FusedBatchNorm",de="GatherV2",pe="GatherNd",he="Greater",fe="GreaterEqual",me="Identity",ge="IFFT",ye="Imag",be="IsFinite",xe="IsInf",ve="IsNan",we="LeakyRelu",ke="Less",Ie="LessEqual",Se="LinSpace",Ne="Log",Te="Log1p",Ce="LogicalAnd",_e="LogicalNot",Ae="LogicalOr",Ee="LogSoftmax",$e="LRN",Re="LRNGrad",Fe="Max",De="Maximum",Me="MaxPool",Oe="MaxPoolGrad",ze="MaxPool3D",Le="MaxPool3DGrad",Be="MaxPoolWithArgmax",Pe="Mean",Ve="Min",We="Minimum",Ue="MirrorPad",He="Mod",Ge="Multinomial",qe="Multiply",je="Neg",Xe="NotEqual",Ke="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Qe="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",it="Range",ot="Real",ut="Reciprocal",lt="Relu",ct="Reshape",dt="ResizeNearestNeighbor",pt="ResizeNearestNeighborGrad",ht="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",yt="Round",bt="Rsqrt",xt="ScatterNd",vt="Select",wt="Selu",kt="Slice",It="Sin",St="Sinh",Nt="Sign",Tt="Sigmoid",Ct="Softplus",_t="Sqrt",At="Sum",Et="SpaceToBatchND",$t="SplitV",Rt="Softmax",Ft="SparseFillEmptyRows",Dt="SparseReshape",Mt="SparseSegmentMean",Ot="SparseSegmentSum",zt="SparseToDense",Lt="SquaredDifference",Bt="Square",Pt="StridedSlice",Vt="StringNGrams",Wt="StringSplit",Ut="StringToHashBucketFast",Ht="Sub",Gt="Tan",qt="Tanh",jt="Tile",Xt="TopK",Kt="Transform",Yt="Transpose",Qt="Unique",Zt="Unpack",Jt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",an="_FusedMatMul",sn="FusedConv2D",on="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,uk:()=>u,tr:()=>l,wC:()=>c,Li:()=>d,nE:()=>p,bt:()=>h,T3:()=>f});var r=n(2885),a=n(5938);const s=(0,a.R)("kernelRegistry",(()=>new Map)),i=(0,a.R)("gradRegistry",(()=>new Map));function o(e,t){const n=m(e,t);return s.get(n)}function u(e){return i.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function p(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function h(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){l(e).forEach((e=>{c(Object.assign({},e,{backendName:t}))}))}function m(e,t){return`${t}_${e}`}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return r.BV.runKernel(a.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return r.BV.runKernel(a.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.mm,u)}})},3135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({addN_:function(e){i.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.BV.runKernel(a.Xz,o)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(a.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMin")},i={axis:t};return r.BV.runKernel(a.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return r.BV.runKernel(a.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return r.BV.runKernel(a.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return r.BV.runKernel(a.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return r.BV.runKernel(a.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>d});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const d=(0,l.op)({avgPool_:function(e,t,n,l,d){const p=(0,s._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let h=p,f=!1;3===p.rank&&(f=!0,h=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===h.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${h.rank}.`)),null!=d&&i.hu(i.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${l}.`));const m={x:h},g={filterSize:t,strides:n,pad:l,dimRoundingMode:d};let y=r.BV.runKernel(a.Jh,m,g);return y=(0,o.p)(y,p.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2668),l=n(4968);const c=(0,u.op)({avgPool3d_:function(e,t,n,u,c,d="NDHWC"){const p=(0,s._1)(e,"x","avgPool3d","float32");let h=p,f=!1;4===p.rank&&(f=!0,h=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===h.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${h.rank}.`)),i.hu("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),null!=c&&i.hu(i.GN(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:h},g={filterSize:t,strides:n,pad:u,dimRoundingMode:c,dataFormat:d};let y=r.BV.runKernel(a._k,m,g);return y=(0,o.p)(y,h.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>d});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,s._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(a.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const d=(0,s._1)(e,"x","batchNorm"),p=(0,s._1)(t,"mean","batchNorm"),h=(0,s._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s._1)(l,"scale","batchNorm")),null!=u&&(m=(0,s._1)(u,"offset","batchNorm")),i.hu(p.rank===h.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:p,variance:h},y={varianceEpsilon:c},b=r.BV.runKernel(a.sH,g,y);return(0,o.X)(b,d.shape)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,s._1)(e,"x","bincount"),u=(0,s._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const l={x:o,weights:u},c={size:n};return r.BV.runKernel(a.zv,l,c)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const d={x:n},p={reps:c};return r.BV.runKernel(a.n9,d,p)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>s})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(4077),a=n(569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.BV.runKernel(a.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil")};return r.BV.runKernel(a.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,s._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),o=(0,s._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.BV.runKernel(a.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(a.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(3740),a=n(569),s=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,d){const p=(0,r._1)(e,"x","conv1d"),h=(0,r._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===h.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${h.rank}.`)),null!=d&&a.hu(a.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`)),a.hu(f.shape[2]===h.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${h.shape[1]}.`)),a.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],v=(0,s.T)(y,g,b,o,"NHWC",x,d);return m?(0,u.X)(v,[v.shape[2],v.shape[3]]):(0,u.X)(v,[v.shape[0],v.shape[2],v.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",d=[1,1],p){const h=(0,s._1)(e,"x","conv2d"),f=(0,s._1)(t,"filter","conv2d");let m=h,g=!1;3===h.rank&&(g=!0,m=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&i.hu(i.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:d,dimRoundingMode:p},v=r.BV.runKernel(a.mh,b,x);return g?(0,l.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,u,l="NHWC",c){let d=e;3===e.rank&&(d=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),s.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const h="NHWC"===l?d.shape[3]:d.shape[1],f="NHWC"===l?p.shape[3]:p.shape[1];s.hu(h===n[2],(()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${n[2]}.`)),s.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&s.hu(s.GN(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:d,dy:p},g={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:n};return r.BV.runKernel(a.wU,m,g)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u,l="NHWC",c){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,p=t,h=!1;3===t.rank&&(h=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.hu(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===l?d[3]:d[1],m="NHWC"===l?p.shape[3]:p.shape[1];s.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&s.hu(s.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const g={dy:p,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:d},b=r.BV.runKernel(a.wm,g,y);return h?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(3740),a=n(9832);const s=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,s,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,u,l,s,i,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",d=[1,1,1]){const p=(0,s._1)(e,"x","conv3d"),h=(0,s._1)(t,"filter","conv3d");let f=p,m=!1;4===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===h.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${h.rank}.`)),i.hu(f.shape[4]===h.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${h.shape[3]}.`)),i.hu((0,o.jT)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:h},y={strides:n,pad:u,dataFormat:c,dilations:d},b=r.BV.runKernel(a.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,d=!1;4===t.rank&&(d=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const p=l[4],h=c.shape[4];s.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),s.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),s.hu(h===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=r.BV.runKernel(a.ik,f,m);return d?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,c]=l(t);let d;if("channelsLast"===o)d=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,c,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,l,d]=c(t);let p,h;if("NDHWC"===i)h="channelsLast",p=[u,l,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",p=[u,l,d,e[1],e[1]]}return o(e,p,n,r,a,!1,h,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[c,h,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,h,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,h,f]=e}const[g,y,,b]=t,[x,v]=l(n),[w,k]=l(r),I=d(g,w),S=d(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,r,a,s,i,o,l){let c,d,h;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[1];return[p((e[0]-t+2*r)/n+1,a),p((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);d=a[0],h=a[1]}else if("same"===e){d=Math.ceil(t/r),h=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(h-1)*a+i-n),u=Math.floor(e/2),l=e-u,p=Math.floor(o/2);c={top:u,bottom:l,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),h=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},d=p((t-s+u+f)/r+1,o),h=p((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:d,outWidth:h}}(a,h,f,x,v,I,S,s,o),_=i?b*m:b;let A;return"channelsFirst"===o?A=[c,_,T,C]:"channelsLast"===o&&(A=[c,T,C,_]),{batchSize:c,dataFormat:o,inHeight:h,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:_,padInfo:N,strideHeight:x,strideWidth:v,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,h,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,h,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,h,f,m]=e}const[y,b,x,,v]=t,[w,k,I]=c(n),[S,N,T]=c(r),C=d(y,S),_=d(b,N),A=d(x,T),{padInfo:E,outDepth:$,outHeight:R,outWidth:F}=function(e,t,n,r,a,s,i,o,l,c,d){let h,f,m,g;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[1],o=e[2];return[p((e[0]-t+2*a)/r+1,s),p((i-t+2*a)/r+1,s),p((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,d);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+l-n,d=(g-1)*i+c-r,p=Math.floor(e/2),y=e-p,b=Math.floor(u/2),x=u-b,v=Math.floor(d/2);h={top:b,bottom:x,left:v,right:d-v,front:p,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-l+1)/s),g=Math.ceil((r-c+1)/i)}return{padInfo:h,outDepth:f,outHeight:m,outWidth:g}}(a,h,f,m,w,k,I,C,_,A,o),D=s?v*g:v;let M;return"channelsFirst"===i?M=[l,D,$,R,F]:"channelsLast"===i&&(M=[l,$,R,F,D]),{batchSize:l,dataFormat:i,inDepth:h,inHeight:f,inWidth:m,inChannels:g,outDepth:$,outHeight:R,outWidth:F,outChannels:D,padInfo:E,strideDepth:w,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:_,effectiveFilterWidth:A,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:M,filterShape:t}}function u(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function h(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function f(e,t){return h(e)||h(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>r,Xw:()=>a,pl:()=>s,Ix:()=>i,jw:()=>o,aO:()=>u,I0:()=>h,jT:()=>f,sl:()=>m})},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos")};return r.BV.runKernel(a.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh")};return r.BV.runKernel(a.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,s._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(a.iH,o,u)}})},5746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const u=(0,s._1)(e,"x","denseBincount"),l=(0,s._1)(t,"weights","denseBincount");i.hu("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.hu(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(l.size===u.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${l.shape}.`));const c={x:u,weights:l},d={size:n,binaryOutput:o};return r.BV.runKernel(a.QR,c,d)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,s._1)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const d={x:o},p={blockSize:t,dataFormat:n};return r.BV.runKernel(a.T0,d,p)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,l="NHWC",c=[1,1],d){const p=(0,s._1)(e,"x","depthwiseConv2d"),h=(0,s._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===h.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),i.hu(f.shape[3]===h.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null!=d&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`));const g={x:f,filter:h},y={strides:n,pad:o,dataFormat:l,dilations:c,dimRoundingMode:d},b=r.BV.runKernel(a.ci,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(7097),a=n(9121),s=n(2668),i=n(4968);const o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:d},h={strides:s,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return r.BV.runKernel(a.sL,p,h)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(7097),a=n(9121),s=n(2668),i=n(4968);const o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],l){let c=t,d=!1;3===t.rank&&(d=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},h={strides:s,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=r.BV.runKernel(a.y7,p,h);return d?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const d=(0,s._1)(e,"x","dilation2d"),p=(0,s._1)(t,"filter","dilation2d");i.hu(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let h=d,f=!1;3===d.rank&&(h=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:h,filter:p},g={strides:n,pad:o,dilations:l},y=r.BV.runKernel(a.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(a.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(747),a=n(3740),s=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),o=(0,a._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,s.h)(n,o),d=(0,l.P)(c),p=(0,i.D)(o,d);return(0,u.a)(p,d,c)}})},548:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(3740),a=n(569),s=n(8687),i=n(2668),o=n(4968);const u=(0,i.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),i=(0,r._1)(t,"t2","dot");a.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(a.hu(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),r=(0,s.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),r=(0,s.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,s.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,s.O)(n,e)}}})},4653:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"einsum"))),i={equation:e};return r.BV.runKernel(a.$g,n,i)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu")};return r.BV.runKernel(a.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(a.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.BV.runKernel(a.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return r.BV.runKernel(a.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor")};return r.BV.runKernel(a.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.je,u)}})},4624:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>S});var r=n(7097),a=n(633),s=n(9121),i=n(747),o=n(3740),u=n(569),l=n(6407),c=n(2200),d=n(4794),p=n(6013),h=n(9832),f=n(2582),m=n(9323),g=n(2668),y=n(4968);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:v,bias:w,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(k=k||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,d.T)(e,t,n,g,b,x,v);return null!=w&&(r=(0,l.I)(r,w)),(0,m.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","conv2d"),T=(0,o._1)(t,"filter","conv2d");let C=N,_=!1;3===N.rank&&(_=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),null!=v&&u.hu(u.GN(g),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${v} but got pad ${g}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${C.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),u.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const A=f.Ix(C.shape,T.shape,n,x,g,v);let E,$;null!=w&&(E=(0,o._1)(w,"bias","fused conv2d"),[E]=(0,i.makeTypesMatch)(E,N),c.$N(A.outShape,E.shape)),null!=I&&($=(0,o._1)(I,"prelu weights","fused conv2d"));const R=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k);u.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,h._)(a.shape,o,r,n,g),(0,p.p)(a,o,r.shape,n,g)];if(null!=i){const e=(0,m.pf)(i,o);l.push(e)}return l},F={x:C,filter:T,bias:E,preluActivationWeights:$},D={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:v,activation:k,leakyreluAlpha:S};return null==w?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s._V,F,D);return n([t,e,a]),_&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s._V,F,D);return a([t,e,i,n]),_&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(C,T,E)}});var x=n(4718),v=n(8098),w=n(4375);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:d,dataFormat:p="NHWC",dilations:h=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(e,t,n,d,p,h,g);return null!=b&&(r=(0,l.I)(r,b)),(0,m.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","depthwiseConv2d"),T=(0,o._1)(t,"filter","depthwiseConv2d");let C=N,_=!1;3===N.rank&&(_=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==h&&(h=[1,1]),u.hu(f.jT(n,h),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`)),null!=g&&u.hu(u.GN(d),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${d}.`));const A=f.Ix(C.shape,T.shape,n,h,d,g,!0);let E,$;null!=b&&(E=(0,o._1)(b,"bias","fused conv2d"),[E]=(0,i.makeTypesMatch)(E,N),c.$N(A.outShape,E.shape)),null!=I&&($=(0,o._1)(I,"prelu weights","fused depthwiseConv2d"));const R=(e,t)=>{u.hu(f.I0(h),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${h}'`));const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k),l=(0,w.v)(a.shape,o,r,n,d,h,g),c=(0,v.z)(a,o,r.shape,n,d,h,g);return null!=i?[l,c,(0,m.pf)(E,o)]:[l,c]},F={x:C,filter:T,bias:E,preluActivationWeights:$},D={strides:n,pad:d,dataFormat:p,dilations:h,dimRoundingMode:g,activation:k,leakyreluAlpha:S};return null==b?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s.lu,F,D);return n([t,e,a]),_&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:R}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s.lu,F,D);return a([t,e,i,n]),_&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:R}}))(C,T,E)}});var I=n(8687);const S=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:d=!1,bias:p,activation:h="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,h)){let r=(0,I.O)(e,t,n,d);return null!=p&&(r=(0,l.I)(r,p)),(0,m.QH)(r,h,f,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const v=n?b.shape[b.rank-2]:b.shape[b.rank-1],w=d?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],S=d?x.shape[x.rank-2]:x.shape[x.rank-1],N=b.shape.slice(0,-2),T=x.shape.slice(0,-2),C=u.NA(N),_=u.NA(T);u.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),u.hu(u.cO(N,T),(()=>`Error in fused matMul: outer dimensions (${N}) and (${T}) of Tensors with shapes ${b.shape} and ${x.shape} must match.`)),u.hu(v===w,(()=>`Error in fused matMul: inner shapes (${v}) and (${w}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${d} must match.`));const A=b.shape.slice(0,-2).concat([k,S]),E=n?(0,y.X)(b,[C,v,k]):(0,y.X)(b,[C,k,v]),$=d?(0,y.X)(x,[_,S,w]):(0,y.X)(x,[_,w,S]);let R,F;null!=p&&(R=(0,o._1)(p,"bias","fused matMul"),[R]=(0,i.makeTypesMatch)(R,b),c.$N(A,R.shape)),null!=f&&(F=(0,o._1)(f,"prelu weights","fused matMul"));const D=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)((0,y.X)(e,s.shape),s,h);let u,l;return n||d?!n&&d?(u=(0,I.O)(o,a,!1,!1),l=(0,I.O)(o,r,!0,!1)):n&&!d?(u=(0,I.O)(a,o,!1,!0),l=(0,I.O)(r,o,!1,!1)):(u=(0,I.O)(a,o,!0,!0),l=(0,I.O)(o,r,!0,!0)):(u=(0,I.O)(o,a,!1,!0),l=(0,I.O)(r,o,!0,!1)),null!=p?[u,l,(0,m.pf)(i,o)]:[u,l]},M={a:E,b:$,bias:R,preluActivationWeights:F},O={transposeA:n,transposeB:d,activation:h,leakyreluAlpha:g};return null==p?(0,a.cb)(((e,t,n)=>{const a=r.BV.runKernel(s.us,M,O);return n([e,t,a]),{value:(0,y.X)(a,A),gradFunc:D}}))(E,$):(0,a.cb)(((e,t,n,a)=>{const i=r.BV.runKernel(s.us,M,O);return a([e,t,i,n]),{value:(0,y.X)(i,A),gradFunc:D}}))(E,$,R)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var r=n(2200),a=n(3233),s=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),d=n(625),p=n(1901),h=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,p.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,h.S)(n,a)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,d.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.BV.runKernel(a.qi,o,u)}})},7494:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,s._1)(t,"indices","gatherND","int32"),i={params:(0,s._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(a.q1,i)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,s._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,d=!1;3===l.rank&&(d=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a._Y,p,h);return d?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,s._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,d=!1;3===l.rank&&(d=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,p={images:c},h={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a.dp,p,h);return d?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3963:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,s._1)(e,"x","isFinite")};return r.BV.runKernel(a.av,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isInf_:function(e){const t={x:(0,s._1)(e,"x","isInf")};return r.BV.runKernel(a.iW,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return r.BV.runKernel(a.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(a.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.CA,l)}})},4135:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.BV.runKernel(a.e7,{},s)}},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,s._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=c,p=!1;3===c.rank&&(p=!0,d=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const h={x:d},f={depthRadius:t,bias:n,alpha:o,beta:l},m=r.BV.runKernel(a.eZ,h,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log")};return r.BV.runKernel(a.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},3888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(633),a=n(3740),s=n(4841),i=n(7370),o=n(2668),u=n(625),l=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,a._1)(e,"x","logSigmoid");return(0,r.cb)((e=>({value:(0,i.W)((0,l.W)((0,i.W)(e))),gradFunc:t=>(0,s.d)(t,(0,u.X)((0,i.W)(e)))})))(t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>h});var r=n(633),a=n(3740),s=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),d=n(827),p=n(5475);const h=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),a=(0,d.l)(e,r),c=(0,d.l)((0,s.p)(a,"float32"),(0,o.c)((0,p.S)((0,i.Q)(a),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.Q)(r);return(0,d.l)(e,(0,l.d)((0,p.S)(e,t,!0),a))}}}))(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(3740),a=n(569),s=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),d=n(4968),p=n(827),h=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,a.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,p.l)(c,m),y=(0,o.Q)(g),b=(0,h.S)(y,f),x=(0,u.c)(b),v=(0,s.I)((0,d.X)(m,x.shape),x);if(n){const e=(0,i.rv)(v.shape,f);return(0,d.X)(v,e)}return v}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),o=(0,s._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(a.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),o=(0,s._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.MZ,u)}})},596:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var r=n(3740),a=n(2200),s=n(2856),i=n(8651),o=n(5750);const u=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),u=(0,r._1)(t,"b","logicalXor","bool");return(0,a.$N)(n.shape,u.shape),(0,s.H)((0,o.K)(e,t),(0,i.h)((0,s.H)(e,t)))}})},9876:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,s.makeTypesMatch)(u,l);const c={a:u,b:l},d={transposeA:n,transposeB:o};return r.BV.runKernel(a.XL,c,d)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const d=(0,s._1)(e,"x","maxPool");let p=d,h=!1;3===d.rank&&(h=!0,p=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:p},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(a.mT,f,m);return h?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({maxPool3d_:function(e,t=[1,1,1],n,o,l,c="NDHWC"){const d=(0,s._1)(e,"x","maxPool3d");let p=d,h=!1;4===d.rank&&(h=!0,p=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.hu(5===p.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.hu("NDHWC"===c,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),null!=l&&i.hu(i.GN(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`));const f={x:p},m={filterSize:t,strides:n,pad:o,dimRoundingMode:l,dataFormat:c},g=r.BV.runKernel(a.OA,f,m);return h?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6877:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:(0,s._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},c=r.BV.runKernel(a.vF,u,l);return{result:c[0],indexes:c[1]}}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(a.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(a.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,s._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return r.BV.runKernel(a.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.wY,u)}})},686:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(4968);const u=(0,i.op)({multinomial_:function(e,t,n,i=!1){const u=(0,s._1)(e,"logits","multinomial"),l=u.size,c=u.rank;if(l<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${l}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);n=n||Math.random();const d={logits:1===c?(0,o.X)(u,[1,-1]):u},p={numSamples:t,seed:n,normalized:i},h=r.BV.runKernel(a.NZ,d,p);return 1===c?(0,o.X)(h,[h.size]):h}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(3740),a=n(569),s=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),d=n(4968),p=n(9494),h=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,d.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,o.F)((0,s.W)(e),n);if(t===-1/0)return(0,u.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,h._)((0,m.S)((0,c.s)((0,s.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,h._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,s=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let u=o.shape;if(s){const t=(0,a.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,d.X)(o,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,s._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.BV.runKernel(a.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(569),s=n(1661),i=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return r.BV.runKernel(a.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>s,op:()=>i});var r=n(7097),a=n(569);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},4600:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>I.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>s._,IHx:()=>i.I,QBD:()=>o.Q,$6P:()=>u.$,YjB:()=>l.Y,NqF:()=>c.N,vHJ:()=>d.v,ZRM:()=>p.Z,VfV:()=>h.V,z4N:()=>f.z,fvJ:()=>m.f,C80:()=>g.C,wS1:()=>y.w,uR5:()=>b.u,zEQ:()=>C,tgs:()=>A.t,Dxk:()=>$,JY5:()=>R,p3b:()=>F,E4h:()=>_.E,yE8:()=>D.y,anm:()=>Dn,UFq:()=>M.U,f3b:()=>O.f,pju:()=>z.p,mDi:()=>L.m,iUl:()=>B.i,d9v:()=>P.d,PYB:()=>V.P,zoF:()=>v.z,gME:()=>W,Izb:()=>U,MNy:()=>H,ZaL:()=>G,PAt:()=>q.P,Tek:()=>j.T,bc:()=>X.b,pdZ:()=>K.p,$QV:()=>Q,mCk:()=>Z.m,f9Y:()=>J.f,mew:()=>Hn,zbp:()=>ee.z,ppE:()=>te.p,nTT:()=>ne.n,B10:()=>re.B,Ka3:()=>ie,WmZ:()=>oe.W,hiC:()=>ue.h,NTj:()=>le.N,AKD:()=>ce.A,rvX:()=>Wn,WYO:()=>de.W,pyx:()=>pe.p,GRh:()=>Un,DgJ:()=>he.D,qNN:()=>fe.q,Qqt:()=>me.Q,dt4:()=>ge.d,t$B:()=>ye.t,iyy:()=>ve,kp_:()=>nn.k,hlL:()=>we.h,GWj:()=>ke.G,qPi:()=>Ie.q,imm:()=>qn,Iqj:()=>Se.I,dbB:()=>Vn.d,pjt:()=>Ne.p,brS:()=>Te.b,Sxn:()=>rn.S,asL:()=>Ce.a,BHj:()=>Dr,V3u:()=>Gn,wx0:()=>an.w,xVT:()=>_e.x,UWc:()=>Ae.U,i2d:()=>Ee.i,hi7:()=>$e.h,d9m:()=>Re.d,zN1:()=>Fe.z,$r2:()=>Mr,SX3:()=>De.S,G9k:()=>Me.G,cM7:()=>Oe.c,Krr:()=>ze.K,e_t:()=>Le.e,CmS:()=>Be.C,l_t:()=>Pe.l,HvI:()=>Ve.H,hJK:()=>We.h,K5V:()=>Ue.K,egP:()=>He.e,MB5:()=>Or,OI3:()=>w.O,Fp7:()=>Ge.F,_sB:()=>qe._,YQQ:()=>je.Y,Ip$:()=>Xe.I,gWQ:()=>Ke.g,J69:()=>Ye.J,ry_:()=>Je,VV$:()=>et.V,LTh:()=>tt.L,VdP:()=>nt.V,wQq:()=>rt.w,Gi7:()=>ot,p_:()=>Ln,dC7:()=>k.d,rq4:()=>ut,SJ_:()=>lt.S,W76:()=>ct.W,KOy:()=>On.K,Quu:()=>dt.Q,lfX:()=>pt.l,iUs:()=>Qe.i,JpU:()=>ht.J,op:()=>I.op,N2O:()=>ft,vku:()=>mt.v,pNR:()=>gt,koy:()=>yt,t1L:()=>bt,lGY:()=>xt,d_R:()=>vt.d,sQ3:()=>wt.s,AL3:()=>kt.A,S0v:()=>It.S,WVs:()=>St.W,TN_:()=>Nt,wzB:()=>Ct,nGf:()=>_t,LGj:()=>At.L,w6H:()=>Et.w,kwC:()=>$t.k,M25:()=>Rt.M,UYe:()=>Ft.U,btT:()=>Dt.b,XLQ:()=>be.X,GYS:()=>Mt.G,SDf:()=>Ot,diP:()=>zt,sx7:()=>Lt,mG2:()=>Bt,QEs:()=>sn.Q,NMM:()=>Pt.N,bp0:()=>Vt.b,iD$:()=>Wt.i,snQ:()=>Bn.s,U8D:()=>Ut.U,U_I:()=>Ht.U,ODp:()=>Gt.O,XD2:()=>S.X,Xxe:()=>qt.X,tdS:()=>Fr,O$l:()=>jt.O,R_K:()=>Xt.R,tPi:()=>N.t,jZU:()=>Kt,SmN:()=>Yt,CnO:()=>Qt,p0P:()=>Zt,XAC:()=>Jt.X,Wvh:()=>en.W,fBT:()=>tn.f,rVs:()=>zr,ers:()=>Pn.e,uN7:()=>Rr,Vl2:()=>on.V,_b3:()=>un._,h62:()=>st.h,$i:()=>ln.$,L9e:()=>cn.L,knu:()=>dn.k,Nbs:()=>pn.N,NXj:()=>hn.N,Z_8:()=>Lr,luU:()=>it.l,Smz:()=>fn.S,ORZ:()=>mn.O,AEp:()=>T.A,XeE:()=>gn.X,RRF:()=>yn.R,odF:()=>xn,wOQ:()=>vn.w,yXz:()=>wn,Bfx:()=>kn,xZs:()=>In,Gg6:()=>xe.G,hg7:()=>Sn.h,p4s:()=>Mn.p,Xu6:()=>Nn.X,Two:()=>Tn.T,pUJ:()=>Cn.p,HHK:()=>_n.H,VD$:()=>An,arb:()=>En.a,itS:()=>$n.i,lls:()=>Rn.l,P84:()=>Fn.P});var r=n(6235),a=n(7839),s=n(1470),i=n(6407),o=n(3135),u=n(781),l=n(2998),c=n(47),d=n(7394),p=n(2421),h=n(1891),f=n(7037),m=n(9812),g=n(369),y=n(5176),b=n(1749),x=n(3740),v=n(6884),w=n(8687),k=n(4841),I=n(2668),S=n(625),N=n(2676),T=n(1869);const C=(0,I.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),u=(0,x._1)(t,"lstmKernel","basicLSTMCell"),l=(0,x._1)(n,"lstmBias","basicLSTMCell"),c=(0,x._1)(r,"data","basicLSTMCell"),d=(0,x._1)(a,"c","basicLSTMCell"),p=(0,x._1)(s,"h","basicLSTMCell"),h=(0,v.z)([c,p],1),f=(0,w.O)(h,u),m=(0,i.I)(f,l),g=m.shape[0],y=m.shape[1]/4,b=[g,y],I=(0,N.t)(m,[0,0],b),C=(0,N.t)(m,[0,y],b),_=(0,N.t)(m,[0,2*y],b),A=(0,N.t)(m,[0,3*y],b),E=(0,i.I)((0,k.d)((0,S.X)(I),(0,T.A)(C)),(0,k.d)(d,(0,S.X)((0,i.I)(o,_))));return[E,(0,k.d)((0,T.A)(E),(0,S.X)(A))]}});var _=n(8441),A=n(7505),E=n(569);const $=(0,I.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),E.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),E.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}}),R=(0,I.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),E.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),E.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}}),F=(0,I.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),E.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),E.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}});var D=n(3865),M=n(8247),O=n(2657),z=n(2271),L=n(6825),B=n(2279),P=n(8723),V=n(1661);const W=(0,I.op)({concat1d_:function(e){return(0,v.z)(e,0)}}),U=(0,I.op)({concat2d_:function(e,t){return(0,v.z)(e,t)}}),H=(0,I.op)({concat3d_:function(e,t){return(0,v.z)(e,t)}}),G=(0,I.op)({concat4d_:function(e,t){return(0,v.z)(e,t)}});var q=n(1355),j=n(4794),X=n(1405),K=n(473),Y=n(7594);const Q=(0,I.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,x._1)(e,"x","conv3dTranspose"),i=(0,x._1)(t,"filter","conv3dTranspose");return(0,Y._)(n,s,i,r,a)}});var Z=n(173),J=n(2699),ee=n(7405),te=n(5746),ne=n(9112),re=n(4718),ae=n(7097),se=n(9121);const ie=(0,I.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return ae.BV.runKernel(se.$w,t)}});var oe=n(557),ue=n(1274),le=n(9322),ce=n(548),de=n(4653),pe=n(3233),he=n(6477),fe=n(4650),me=n(4842),ge=n(1300),ye=n(3426),be=n(4968),xe=n(7501);const ve=(0,I.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,O.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=(0,be.X)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,xe.G)((0,ge.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)((0,ge.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var we=n(4006),ke=n(6943),Ie=n(9165),Se=n(4926),Ne=n(636),Te=n(7630),Ce=n(4386),_e=n(3963),Ae=n(4365),Ee=n(6230),$e=n(9133),Re=n(6573),Fe=n(624),De=n(4135),Me=n(9648),Oe=n(2597),ze=n(7474),Le=n(3888),Be=n(1510),Pe=n(1391),Ve=n(2856),We=n(8651),Ue=n(5750),He=n(596),Ge=n(3307),qe=n(1174),je=n(5020),Xe=n(6877),Ke=n(632),Ye=n(5130),Qe=n(4917),Ze=n(4077);function Je(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,x._1)(e,"x","meshgrid",e instanceof Ze.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,x._1)(t,"y","meshgrid",t instanceof Ze.es?t.dtype:"float32");const s=(0,E.NA)(r.shape),i=(0,E.NA)(a.shape);return"xy"===n?(r=(0,be.X)(r,[1,-1]),a=(0,be.X)(a,[-1,1]),[(0,w.O)((0,Qe.i)([i,1],r.dtype),r),(0,w.O)(a,(0,Qe.i)([1,s],a.dtype))]):(r=(0,be.X)(r,[-1,1]),a=(0,be.X)(a,[1,-1]),[(0,w.O)(r,(0,Qe.i)([1,i],r.dtype)),(0,w.O)((0,Qe.i)([s,1],a.dtype),a)])}var et=n(5735),tt=n(4513),nt=n(1483),rt=n(5228),at=n(3591),st=n(248),it=n(827);const ot=(0,I.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const r=(0,E.EC)(t,e.shape),a=(0,Ye.J)(e,r,n);let s=a.shape;n||(s=(0,at.rv)(a.shape,r));const i=(0,st.h)((0,it.l)((0,z.p)(e,"float32"),(0,be.X)(a,s)));return{mean:a,variance:(0,Ye.J)(i,r,n)}}}),ut=(0,I.op)({multiRNNCell_:function(e,t,n,r){const a=(0,x._1)(t,"data","multiRNNCell"),s=(0,x.sI)(n,"c","multiRNNCell"),i=(0,x.sI)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var lt=n(686),ct=n(7370),dt=n(6500),pt=n(6708),ht=n(7846);const ft=(0,I.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),r=(0,x._1)(t,"v2","outerProduct");E.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,be.X)(n,[-1,1]),s=(0,be.X)(r,[1,-1]);return(0,w.O)(a,s)}});var mt=n(9682);const gt=(0,I.op)({pad1d_:function(e,t,n=0){return(0,E.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,mt.v)(e,[t],n)}}),yt=(0,I.op)({pad2d_:function(e,t,n=0){return(0,E.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),bt=(0,I.op)({pad3d_:function(e,t,n=0){return(0,E.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),xt=(0,I.op)({pad4d_:function(e,t,n=0){return(0,E.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}});var vt=n(5860),wt=n(3453),kt=n(8151),It=n(9798),St=n(9451);const Nt=(0,I.op)({rand_:function(e,t,n){const r=(0,E.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ae.BV.makeTensor(a,e,n)}});var Tt=n(6845);const Ct=(0,I.op)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.T9(t,n,r,a),i=(0,O.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),_t=(0,I.op)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.Yi(t,n,r,!1,a),i=(0,O.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var At=n(5002),Et=n(7245),$t=n(766),Rt=n(9036),Ft=n(7409),Dt=n(3582),Mt=n(7486);const Ot=(0,I.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return E.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Mt.G)(t,0)}}),zt=(0,I.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Mt.G)(n,t)}}),Lt=(0,I.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Mt.G)(n,t)}}),Bt=(0,I.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Mt.G)(n,t)}});var Pt=n(7809),Vt=n(2634),Wt=n(9494),Ut=n(5503),Ht=n(8678),Gt=n(6567),qt=n(4434),jt=n(9331),Xt=n(3254);const Kt=(0,I.op)({slice1d_:function(e,t,n){const r=(0,x._1)(e,"x","slice1d");return E.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,[t],[n])}}),Yt=(0,I.op)({slice2d_:function(e,t,n){const r=(0,x._1)(e,"x","slice2d");return E.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),Qt=(0,I.op)({slice3d_:function(e,t,n){const r=(0,x._1)(e,"x","slice3d");return E.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),Zt=(0,I.op)({slice4d_:function(e,t,n){const r=(0,x._1)(e,"x","slice4d");return E.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}});var Jt=n(682),en=n(3694),tn=n(7918),nn=n(7020),rn=n(8447),an=n(4415),sn=n(3710),on=n(8644),un=n(3261),ln=n(5265),cn=n(9590),dn=n(2991),pn=n(1901),hn=n(5158),fn=n(5475),mn=n(1173),gn=n(701),yn=n(6092),bn=n(7852);function xn(e,t,n){if((0,E.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,x.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,bn.H)(e,t,r,n)}var vn=n(9906);function wn(e,t,n){if((0,E.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,x.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function kn(e,t,n){if((0,E.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,x.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function In(e,t,n){if((0,E.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,x.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,bn.H)(e,t,r,n)}var Sn=n(3243),Nn=n(3596),Tn=n(9608),Cn=n(8749),_n=n(4136);function An(e,t=!0,n,r){return ae.BV.makeVariable(e,t,n,r)}var En=n(5912),$n=n(6380),Rn=n(9640),Fn=n(6577);const Dn=async function(e,t,n){const r=(0,x._1)(e,"tensor","boolMask"),a=(0,x._1)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;E.hu(i>0,(()=>"mask cannot be scalar")),E.k5(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=(0,be.X)(r,l),d=(0,be.X)(a,[-1]),p=await(0,$n.i)(d),h=(0,cn.L)(p,[1]),f=(0,Se.I)(c,h,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),h.dispose(),c.dispose(),d.dispose(),p.dispose(),f};var Mn=n(9065),On=n(3561),zn=n(747);const Ln=(0,I.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),u=(0,x._1)(n,"decay","movingAverage");(0,zn.assertTypesMatch)(s,o),E.hu(E.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Wt.i)(1),c=(0,it.l)(l,u);let d=(0,k.d)((0,it.l)(o,s),c);if(a){E.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(r,"step","movingAverage");d=(0,ue.h)(d,(0,it.l)(l,(0,wt.s)(u,e)))}return(0,i.I)(s,d)}});var Bn=n(3100),Pn=n(9758),Vn=n(7494);const Wn=(0,I.op)({dropout_:function(e,t,n,r){const a=(0,x._1)(e,"x","dropout");if(E.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),E.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ze.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(E.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,u=(0,ue.h)((0,ke.G)((0,i.I)((0,At.L)(s,0,1,"float32",r),o)),o);return(0,k.d)(a,u)}});function Un(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Hn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return(0,yn.R)(a,"float32")}const Gn=async function(e,t,n=1){const r=(0,x._1)(e,"predictions","inTopK"),a=(0,x._1)(t,"targets","inTopK");(0,E.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,E.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,E.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,E.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=(0,E.WP)("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,gn.X)(c,a.shape,"bool")};var qn=n(4624);const jn=(0,I.op)({hammingWindow_:function(e){return Hn(e,.54,.46)}}),Xn=(0,I.op)({hannWindow_:function(e){return Hn(e,.5,.5)}}),Kn=(0,I.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push((0,N.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=(0,v.z)([(0,N.t)(e,s,t-r),(0,we.h)([r],a)]);i.push(o),s+=n}return 0===i.length?xn([],[0,t]):(0,be.X)((0,v.z)(i),[i.length,t])}}),Yn=(0,I.op)({stft_:function(e,t,n,r,a=Xn){null==r&&(r=Un(t));const s=Kn(e,t,n),i=(0,k.d)(s,a(t));return(0,sn.Q)(i,r)}}),Qn=(0,I.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),u=(0,x._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];E.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),E.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),E.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),E.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),E.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),E.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return ae.BV.runKernel(se.Vc,c,d)}}),Zn=(0,I.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");E.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ae.BV.runKernel(se.Uy,n,{})}}),Jn=(0,I.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,x._1)(e,"image","rotateWithOffset","float32");E.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return ae.BV.runKernel(se.b9,s,i)}});function er(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),E.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),E.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),E.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),E.hu(1===t.rank,(()=>"scores must be a 1D tensor")),E.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),E.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const tr=(0,I.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),o=er(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ae.BV.runKernel(se.uv,{boxes:s,scores:i},u)}});var nr=n(3337);const rr=(0,I.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=er(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=ae.BV.runKernel(se.W0,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),ar=(0,I.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=er(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=ae.BV.runKernel(se.cy,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}});var sr=n(3305),ir=n(5098);const or=(0,I.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,x._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,u,l,c,d=(0,k.d)((0,yn.R)([r]),255);if(E.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),E.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),E.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),E.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,u,l]=(0,on.V)(a,[1,1,1],-1);const e=(0,k.d)(o,.2989),t=(0,k.d)(u,.587),n=(0,k.d)(l,.114);c=(0,i.I)((0,i.I)(e,t),n)}else c=e;"otsu"===t&&(d=function(e,t){let n,r,a,s,o,u,l=(0,yn.R)([-1]),c=(0,yn.R)([0]),d=(0,yn.R)([0]);for(let p=0;p<e.size-1;p++){n=(0,N.t)(e,0,p+1),r=(0,N.t)(e,p+1),o=(0,ue.h)((0,fn.S)(n),t),u=(0,ue.h)((0,fn.S)(r),t);const h=(0,fn.S)((0,k.d)(n,(0,Et.w)(0,n.size)));a=(0,ue.h)(h,(0,fn.S)(n));const f=(0,we.h)(r.shape,n.size),m=(0,i.I)((0,Et.w)(0,r.size),f),g=(0,k.d)(r,m);s=(0,ue.h)((0,fn.S)(g),(0,fn.S)(r));const y=(0,it.l)(a,s),b=(0,it.l)(a,s),x=(0,k.d)(o,u);d=(0,k.d)((0,k.d)(x,y),b);const v=(0,Ne.p)(d,c);c=(0,En.a)(v,d,c),l=(0,En.a)(v,(0,yn.R)([p]),l)}return l}((0,D.y)((0,z.p)((0,Pt.N)(c),"int32"),(0,gn.X)([]),256),s));const p=n?(0,Fe.z)(c,d):(0,Ne.p)(c,d);return(0,z.p)((0,k.d)(p,255),"int32")}}),ur=(0,I.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=(0,x._1)(e,"image","transform","float32"),o=(0,x._1)(t,"transforms","transform","float32");E.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),E.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),E.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ae.BV.runKernel(se.wx,u,l)}}),lr=(0,I.op)({bandPart_:function(e,t,n){(0,E.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,E.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,x._1)(e,"a","bandPart");(0,E.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=(0,be.X)((0,Et.w)(0,s,1,"int32"),[-1,1]),u=(0,Et.w)(0,i,1,"int32"),l=(0,it.l)(o,u),c=(0,Ve.H)((0,Fe.z)(l,(0,Wt.i)(+t,"int32")),(0,Te.b)(l,(0,Wt.i)(-n,"int32"))),d=(0,Rn.l)([s,i],r.dtype);return(0,be.X)((0,dn.k)((0,_n.H)((0,be.X)(r,[-1,s,i])).map((e=>(0,En.a)(c,e,d)))),a)}}),cr=(0,I.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,E.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,E.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,on.V)(e,e.shape[0],0).map((e=>(0,cn.L)(e,[0])));(0,E.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ae.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,k.d)((0,fn.S)((0,k.d)(n[r],e)),n[r]);e=(0,it.l)(e,t)}return(0,ue.h)(e,(0,On.K)(e,"euclidean"))})));return t?(0,dn.k)(n,0):n}});var dr=n(4368);function pr(e,t=!1){return ae.BV.tidy((()=>{(0,E.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=ve(n),s=(0,P.d)(e);const i=xn([[1]],[1,1]);let o=(0,P.d)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=ae.BV.tidy((()=>{const t=(0,N.t)(s,[e,e],[n-e,1]),u=(0,On.K)(t),l=(0,N.t)(s,[e,e],[1,1]),c=(0,En.a)((0,Ne.p)(l,0),xn([[-1]]),xn([[1]])),d=(0,it.l)(l,(0,k.d)(c,u)),p=(0,ue.h)(t,d);o=1===p.shape[0]?(0,P.d)(i):(0,v.z)([i,(0,N.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const h=(0,ct.W)((0,ue.h)((0,w.O)(c,d),u)),f=(0,N.t)(s,[e,0],[n-e,r]),m=(0,k.d)(h,o),g=(0,Mn.p)(o);if(0===e)s=(0,it.l)(f,(0,w.O)(m,(0,w.O)(g,f)));else{const t=(0,it.l)(f,(0,w.O)(m,(0,w.O)(g,f)));s=(0,v.z)([(0,N.t)(s,[0,0],[e,r]),t],0)}const y=(0,Mn.p)(m),b=(0,N.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,it.l)(b,(0,w.O)((0,w.O)(b,o),y));else{const t=(0,it.l)(b,(0,w.O)((0,w.O)(b,o),y));a=(0,v.z)([(0,N.t)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,dr.B9)([t,u,l])}return!t&&n>r&&(a=(0,N.t)(a,[0,0],[n,r]),s=(0,N.t)(s,[0,0],[r,r])),[a,s]}))}const hr=(0,I.op)({qr_:function(e,t=!1){if((0,E.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return pr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,_n.H)((0,be.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=pr(e,t);a.push(n),s.push(r)})),[(0,be.X)((0,dn.k)(a,0),e.shape),(0,be.X)((0,dn.k)(s,0),e.shape)]}}});var fr=n(9876);const mr=(0,I.op)({computeWeightedLoss_:function(e,t,n=fr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,x._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,k.d)(r,a);if(n===fr.I.NONE)return s;if(n===fr.I.SUM)return(0,fn.S)(s);if(n===fr.I.MEAN){if(null==a)return(0,Ye.J)(s);{const e=r.size/a.size,t=(0,ue.h)((0,fn.S)(s),(0,fn.S)(a));return e>1?(0,ue.h)(t,(0,Wt.i)(e)):t}}if(n===fr.I.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,ue.h)((0,fn.S)(s),(0,Wt.i)(r.size));{const e=(0,k.d)(a,(0,Qe.i)(r.shape)),t=(0,z.p)((0,fn.S)((0,dt.Q)(e,(0,Wt.i)(0))),"float32");return(0,ue.h)((0,fn.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),gr=(0,I.op)({absoluteDifference_:function(e,t,n,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","absoluteDifference"),i=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,E.k5)(s.shape,i.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,it.l)(s,i));return mr(u,o,a)}}),yr=(0,I.op)({cosineDistance_:function(e,t,n,r,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","cosineDistance"),i=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,x._1)(r,"weights","cosineDistance")),(0,E.k5)(s.shape,i.shape,"Error in cosineDistance: ");const u=(0,Wt.i)(1),l=(0,it.l)(u,(0,fn.S)((0,k.d)(s,i),n,!0));return mr(l,o,a)}}),br=(0,I.op)({hingeLoss_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"labels","hingeLoss");const s=(0,x._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,x._1)(n,"weights","hingeLoss")),(0,E.k5)(a.shape,s.shape,"Error in hingeLoss: ");const o=(0,Wt.i)(1);a=(0,it.l)((0,k.d)((0,Wt.i)(2),a),o);const u=(0,Ft.U)((0,it.l)(o,(0,k.d)(a,s)));return mr(u,i,r)}}),xr=(0,I.op)({huberLoss_:function(e,t,n,a=1,s=fr.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),u=(0,x._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","huberLoss")),(0,E.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Wt.i)(a),d=(0,r.W)((0,it.l)(u,o)),p=(0,tt.L)(d,c),h=(0,it.l)(d,p),f=(0,i.I)((0,k.d)((0,Wt.i)(.5),(0,st.h)(p)),(0,k.d)(c,h));return mr(f,l,s)}}),vr=(0,I.op)({logLoss_:function(e,t,n,r=1e-7,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","logLoss")),(0,E.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,Wt.i)(1),c=(0,Wt.i)(r),d=(0,ct.W)((0,k.d)(s,(0,Oe.c)((0,i.I)(o,c)))),p=(0,k.d)((0,it.l)(l,s),(0,Oe.c)((0,i.I)((0,it.l)(l,o),c))),h=(0,it.l)(d,p);return mr(h,u,a)}}),wr=(0,I.op)({meanSquaredError_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","meanSquaredError"),s=(0,x._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,x._1)(n,"weights","meanSquaredError")),(0,E.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const o=(0,ln.$)(a,s);return mr(o,i,r)}}),kr=(0,I.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=fr.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,x._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,E.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Wt.i)(a),t=(0,Wt.i)(1),n=(0,Wt.i)(.5);o=(0,i.I)((0,k.d)(o,(0,it.l)(t,e)),(0,k.d)(n,e))}const c=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,E.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Ft.U)(a),o=(0,k.d)(a,n),u=(0,ze.K)((0,me.Q)((0,ct.W)((0,r.W)(a))));return(0,i.I)((0,it.l)(s,o),u)}(o,u);return mr(c,l,s)}});var Ir=n(633);const Sr=(0,I.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=fr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,E.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Wt.i)(r),t=(0,Wt.i)(1),n=(0,Wt.i)(s.shape[1]);s=(0,i.I)((0,k.d)(s,(0,it.l)(t,e)),(0,ue.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Ir.cb)(((e,t,r)=>{const a=(0,Pe.l)(t,[n],!0),s=(0,it.l)((0,z.p)(t,"float32"),a);r([e,s]);const i=(0,ct.W)((0,k.d)(s,e));return{value:(0,fn.S)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,at.rv)(e.shape,[n]);return[(0,k.d)((0,be.X)(e,s),(0,it.l)((0,z.p)(r,"float32"),(0,me.Q)(a))),(0,k.d)((0,be.X)(e,s),(0,it.l)((0,me.Q)(a),(0,z.p)(r,"float32")))]}}}))(e,t)}(s,o);return mr(l,u,a)}}),Nr=(0,I.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,x._1)(e,"indices","sparseFillEmptyRows"),s=(0,x._1)(t,"values","sparseFillEmptyRows"),i=(0,x._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,x._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=ae.BV.runKernel(se.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Tr=(0,I.op)({sparseReshape_:function(e,t,n){const r=(0,x._1)(e,"inputIndices","sparseReshape"),a=(0,x._1)(t,"inputShape","sparseReshape"),s=(0,x._1)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=ae.BV.runKernel(se.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cr=(0,I.op)({sparseSegmentMean_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentMean"),a=(0,x._1)(t,"indices","sparseSegmentMean"),s=(0,x._1)(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.YW,i)}}),_r=(0,I.op)({sparseSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentSum"),a=(0,x._1)(t,"indices","sparseSegmentSum"),s=(0,x._1)(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.Zj,i)}}),Ar=(0,I.op)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=(0,x._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:l},p=ae.BV.runKernel(se._J,d,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Er=(0,I.op)({stringSplit_:function(e,t,n=!0){const r=(0,x._1)(e,"input","stringSplit","string"),a=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=ae.BV.runKernel(se.s1,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),$r=(0,I.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ae.BV.runKernel(se.Xk,a,r)}}),Rr={fft:nn.k,ifft:rn.S,rfft:sn.Q,irfft:an.w},Fr={hammingWindow:jn,hannWindow:Xn,frame:Kn,stft:Yn},Dr={flipLeftRight:Zn,resizeNearestNeighbor:ir.j,resizeBilinear:sr.I,rotateWithOffset:Jn,cropAndResize:Qn,nonMaxSuppression:tr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=er(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=(0,nr.GP)(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),(0,yn.R)(d,"int32")},nonMaxSuppressionWithScore:rr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=er(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:p,selectedScores:h}=(0,nr.pA)(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(p,"int32"),selectedScores:(0,yn.R)(h)}},nonMaxSuppressionPadded:ar,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=er(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[p,h]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=(0,nr.qP)(p,h,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(f,"int32"),validOutputs:(0,Wt.i)(m,"int32")}},threshold:or,transform:ur},Mr={bandPart:lr,gramSchmidt:cr,qr:hr},Or={absoluteDifference:gr,computeWeightedLoss:mr,cosineDistance:yr,hingeLoss:br,huberLoss:xr,logLoss:vr,meanSquaredError:wr,sigmoidCrossEntropy:kr,softmaxCrossEntropy:Sr},zr={sparseFillEmptyRows:Nr,sparseReshape:Tr,sparseSegmentMean:Cr,sparseSegmentSum:_r},Lr={stringNGrams:Ar,stringSplit:Er,stringToHashBucketFast:$r}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,s._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.BV.runKernel(a.ly,u,o)}})},5860:(e,t,n)=>{"use strict";n.d(t,{d:()=>p});var r=n(3740),a=n(569),s=n(5176),i=n(8441),o=n(2582),u=n(1174),l=n(2668),c=n(4968),d=n(7918);const p=(0,l.op)({pool_:function(e,t,n,l,p,h){null==p&&(p=[1,1]),null==h&&(h=1),0===l&&(l="valid");const f=(0,r._1)(e,"x","maxPool");let m=f,g=!1;3===f.rank&&(g=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.hu(o.jT(h,p),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${h} and dilations '${p}'`));const y=o.Xw(m.shape,t,h,p,l),b=[y.dilationHeight,y.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([y.filterHeight,y.filterWidth],b):[[0,0],[0,0]];const v=1===b[0]&&1===b[1],[w,k]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([y.inHeight,y.inWidth],b,x),I=v?l:"valid",S=v?m:(0,d.f)(m,b,w),N=("avg"===n?()=>(0,s.w)(S,t,h,I):()=>(0,u._)(S,t,h,I))(),T=v?N:(0,i.E)(N,b,k);return g?(0,c.X)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},9798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.Dl,u,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>a,T9:()=>s,wv:()=>i});var r=n(3129);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=(0,r.f)(e,a),u=new s.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(7097),a=n(9121);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},i)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return r.BV.runKernel(a.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(a.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(a.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt")};return r.BV.runKernel(a.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(569),a=n(7852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3100:(e,t,n)=>{"use strict";n.d(t,{s:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(3028);const u=(0,i.op)({scatterND_:function(e,t,n){const i=(0,s._1)(e,"indices","scatterND","int32"),u=(0,s._1)(t,"updates","scatterND");o.validateInput(u,i,n);const l={indices:i,updates:u},c={shape:n};return r.BV.runKernel(a.xQ,l,c)}})},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>a,validateInput:()=>s,calculateShapes:()=>i});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let e=s;e<i;++e)o*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return r.BV.runKernel(a.oF,t)}})},3179:(e,t,n)=>{"use strict";n.d(t,{y:()=>r,$:()=>a});const r=1.7580993408473768,a=1.0507009873554805},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(3740),a=n(569),s=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],d="NHWC"){const p=(0,r._1)(e,"x","separableConv2d"),h=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.hu(4===h.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${h.rank}.`)),a.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${h.rank}.`)),a.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=h.shape[2],b=h.shape[3];a.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,h,o,l,d,c),v=(0,s.T)(x,f,1,"valid",d);return g?(0,u.X)(v,[v.shape[1],v.shape[2],v.shape[3]]):v}})},6567:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(4077),a=n(3740),s=n(569);const i=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),i=(0,a._1)(t,"y","setdiff1d");s.hu(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.hu(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),l=new Set(u);let c=0;for(let e=0;e<o.length;e++)l.has(o[e])||c++;const d=new r.YD([c],n.dtype),p=new r.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)l.has(o[e])||(d.values[t]=o[e],p.values[t]=e,t++);return[d.toTensor(),p.toTensor()]}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid")};return r.BV.runKernel(a.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return r.BV.runKernel(a.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin")};return r.BV.runKernel(a.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return r.BV.runKernel(a.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,s._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.BV.runKernel(a.p2,o,u)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>a,maskToAxes:()=>s,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>d,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>h,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>b,sliceInfo:()=>x});var r=n(569);function a(e,t,n){const a=e.shape.length;r.hu(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.hu(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.hu(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,i,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=d(i,l,c,r,e),y=p(u,l,c,a,e),b=o(s,l,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,r,s,e,t,l),y[t]=m(u,a,s,e,t,l),b[t]=h(s,t,l);return{begin:g,end:y,strides:b}}function d(e,t,n,r,a){const s=[...a],i=l(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=u(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function p(e,t,n,a,s){const i=[...s],o=l(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.uZ(0,i[e],s[e])}return i}function h(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=r.uZ(0,o,l-1),o}function m(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=u>0?r.uZ(0,o,l):r.uZ(-1,o,l-1),o}function g(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function x(e,t,n,r,a,o,u,l,d){let p=t.slice(),h=n.slice(),f=r;null==r&&(f=new Array(p.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==l)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const g=e.length-p.length,y=s(l),b=e.slice();y.forEach((e=>{p[e]=0,h[e]=1,b.splice(e,0,1)}));const{begin:x,end:v,strides:w}=c(b,m,g,p,h,f,a,o,u);p=x,h=v,f=w;const k=s(d);k.forEach((e=>{h[e]=p[e]+1,f[e]=1}));const I=i(p,h,f),S=I.filter(((e,t)=>-1===k.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:p,$end:h,$strides:f,size:I,newShape:b,outShape:S}}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(a.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return r.BV.runKernel(a.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,s._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return r.BV.runKernel(a.TQ,u,l)}})},9758:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sparseToDense_:function(e,t,n,i=0){const o=(0,s._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,s._1)(t,"sparseValues","sparseToDense"),l=(0,s._1)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,l);const c={sparseIndices:o,sparseValues:u,defaultValue:l},d={outputShape:n};return r.BV.runKernel(a.D2,c,d)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),a=n(6884),s=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),d=n(9494),p=n(2676),h=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,h.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,d.i)(-1)),x=(0,a.z)([m,y],1),v=(0,a.z)([g,b],1),w=(0,l.X)((0,r.P)(x,v),[f[0],f[1]]);o=(0,h.S)(w)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),a=n(1661),s=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),d=n(8644),p=n(9640),h=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,p.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,h.P)(m),y=(0,l.X)((0,a.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,v=(0,u.k)(b),w=(0,i.a)(b),k=(0,d.V)(v,[x,n-x],v.shape.length-1),I=(0,d.V)(w,[x,n-x],w.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,a.P)(k[0],I[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,s._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt")};return r.BV.runKernel(a.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(3740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(3740),a=n(569),s=n(2668),i=n(4968);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,i.X)(n,(0,a.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.BV.runKernel(a.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(a.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,d=0){const p={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},h={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:d};return r.BV.runKernel(a.m2,p,h)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan")};return r.BV.runKernel(a.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh")};return r.BV.runKernel(a.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(3740),a=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(569),s=n(9122);function i(e,t,n,i){if(null==i&&(i=(0,a.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.BV.runKernel(a.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,s._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,d]=r.BV.runKernel(a.cW,u,l);return{values:c,indices:d}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return r.BV.runKernel(a.G3,o,u)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.Yi(t,n,a,!0,i),u=(0,r.f)(e,a);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=r.BV.runKernel(a.kp,o,u);return{values:l,indices:c}}})},8749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,s._1)(e,"x","unsortedSegmentSum"),u=(0,s._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:o,segmentIds:u},c={numSegments:n};return r.BV.runKernel(a.Qv,l,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.BV.runKernel(a.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),c=(0,s._1)(e,"condition","where","bool"),d=(0,o.$N)((0,o.$N)(c.shape,u.shape),l.shape),p={condition:(0,i.U)(c,d),t:(0,i.U)(u,d),e:(0,i.U)(l,d)};return r.BV.runKernel(a.Ph,p)}})},6380:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(8333),a=n(3740);const s=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),s}},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(569),s=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>d,_w:()=>v,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(5938),a=n(569);function s(e,t,n,r){const s=(0,a.e3)(t),o=function(e,t,n,r){const s=(0,a.NA)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,d="complex64"===n?l(e):e;if(c>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(d[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,d=u(e,t,n,s,o),p=["Tensor"];return r&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(d.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,d=t[0],p=t.length;if(0===p)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(d>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*c,d*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const h=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),h,n,f,a,!1))}g.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),h,n,f,a,t===d-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<p;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,h=null,f=null;function m(e){p=e}function g(e){h=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return h.buffer(this.shape,this.dtype,e)}bufferSync(){return h.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return h.print(this,e)}clone(){return this.throwIfDisposed(),h.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),h.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,r.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class v extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var r=n(4077),a=n(1221),s=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),c(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>d,sI:()=>p});var r=n(7097),a=n(2885),s=n(4077),i=n(569),o=n(9122);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return r.BV.makeTensor(p,d,l)}function p(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{yw:()=>r,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,createScalarValue:()=>x,createShuffledIndices:()=>a.U$,decodeString:()=>S,distSquared:()=>a.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>a.xH,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>o,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.N9,isString:()=>a.HD,isTypedArray:()=>a.fU,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>w,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>v});var r=n(2885),a=n(569),s=n(3720);const i=n.n(s)()||s;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function d(e){return e.xor(e.shru(47))}function p(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function h(e,t){return p(e,t,8)}function f(e,t){return p(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(h(e,t),h(e,t+8),h(e,t+16),h(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=h(e,0).add(c),a=h(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return d(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=h(e,0).mul(l),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(c);return g(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=h(e,0).mul(c),a=h(e,8),s=h(e,t-8).mul(n),i=h(e,t-16).mul(c),o=m(r.add(a),43).add(m(s,30)).add(i),u=g(o,r.add(m(a.add(c),18)).add(s),n),l=h(e,16).mul(n),d=h(e,24),p=o.add(h(e,t-32)).mul(n),f=u.add(h(e,t-24)).mul(n);return g(m(l.add(d),43).add(m(p,30)).add(f),l.add(m(d.add(r),18)).add(p),n)}(e,t);let r=n,a=n.mul(l).add(113),s=d(a.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],p=[i.UZERO,i.UZERO];r=r.mul(c).add(h(e,0));let b=0;const x=64*(t-1>>6),v=x+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(h(e,b+8)),37).mul(l),a=m(a.add(o[1]).add(h(e,b+48)),42).mul(l),r=r.xor(p[1]),a=a.add(o[0]).add(h(e,b+40)),s=m(s.add(p[0]),33).mul(l),o=y(e,b,o[1].mul(l),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],b+=64}while(b!==x);const w=l.add(s.and(255).shl(1));return b=v,p[0]=p[0].add(t-1&63),o[0]=o[0].add(p[0]),p[0]=p[0].add(o[0]),r=m(r.add(a).add(o[0]).add(h(e,b+8)),37).mul(w),a=m(a.add(o[1]).add(h(e,b+48)),42).mul(w),r=r.xor(p[1].mul(9)),a=a.add(o[0].mul(9).add(h(e,b+40))),s=m(s.add(p[0]),33).mul(w),o=y(e,b,o[1].mul(w),r.add(p[0])),p=y(e,b+32,s.add(p[1]),a.add(h(e,b+16))),[s,r]=[r,s],g(g(o[0],p[0],w).add(d(a).mul(u)).add(s),g(o[1],p[1],w).add(r),w)}function x(e,t){return"string"===t?I(e):v([e],t)}function v(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function w(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function d(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function p(e,t,n=""){d(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){d(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||R(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function v(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return d((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),d(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function _(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function $(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function R(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function F(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function D(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function M(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function z(e){return"number"==typeof e}function L(e){return Array.isArray(e)?L(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":z(e)?"float32":M(e)?"string":O(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function P(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function W(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=W(e+t*o,i,n,r)}return a}function U(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return W(0,e,t,n)}function H(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function q(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return U(e,new Float32Array(n));if("int32"===t)return U(e,new Int32Array(n));if("bool"===t)return U(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{d(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Y(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>a,uZ:()=>s,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>d,k5:()=>p,Cq:()=>h,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>v,U$:()=>w,oj:()=>k,WD:()=>I,JZ:()=>S,EC:()=>N,bp:()=>T,WP:()=>C,rQ:()=>_,D5:()=>A,LP:()=>E,QB:()=>$,fU:()=>R,bT:()=>F,Ub:()=>D,HD:()=>M,jn:()=>O,hj:()=>z,D2:()=>L,mf:()=>B,jP:()=>P,e3:()=>V,GX:()=>U,p8:()=>H,wT:()=>G,l6:()=>q,Mu:()=>j,qy:()=>X,NE:()=>K,tI:()=>Y})},3129:(e,t,n)=>{var r=n(626),a=n(477),s=n(2868),i=n(8197),o=n(1954),u=n(2408),l=n(1662);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},626:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},2408:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1954:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},8197:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},2868:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1662:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{i=n(5778)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},6542:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>c.Abs,Acos:()=>c.Acos,Acosh:()=>c.Acosh,AdadeltaOptimizer:()=>c.AdadeltaOptimizer,AdagradOptimizer:()=>c.AdagradOptimizer,AdamOptimizer:()=>c.AdamOptimizer,AdamaxOptimizer:()=>c.AdamaxOptimizer,Add:()=>c.Add,AddN:()=>c.AddN,All:()=>c.All,Any:()=>c.Any,ArgMax:()=>c.ArgMax,ArgMin:()=>c.ArgMin,Asin:()=>c.Asin,Asinh:()=>c.Asinh,Atan:()=>c.Atan,Atan2:()=>c.Atan2,Atanh:()=>c.Atanh,AvgPool:()=>c.AvgPool,AvgPool3D:()=>c.AvgPool3D,AvgPool3DGrad:()=>c.AvgPool3DGrad,AvgPoolGrad:()=>c.AvgPoolGrad,BatchMatMul:()=>c.BatchMatMul,BatchToSpaceND:()=>c.BatchToSpaceND,Bincount:()=>c.Bincount,BroadcastTo:()=>c.BroadcastTo,Callback:()=>Nd,CallbackList:()=>Si,Cast:()=>c.Cast,Ceil:()=>c.Ceil,ClipByValue:()=>c.ClipByValue,Complex:()=>c.Complex,ComplexAbs:()=>c.ComplexAbs,Concat:()=>c.Concat,Conv2D:()=>c.Conv2D,Conv2DBackpropFilter:()=>c.Conv2DBackpropFilter,Conv2DBackpropInput:()=>c.Conv2DBackpropInput,Conv3D:()=>c.Conv3D,Conv3DBackpropFilterV2:()=>c.Conv3DBackpropFilterV2,Conv3DBackpropInputV2:()=>c.Conv3DBackpropInputV2,Cos:()=>c.Cos,Cosh:()=>c.Cosh,CropAndResize:()=>c.CropAndResize,Cumsum:()=>c.Cumsum,CustomCallback:()=>Ci,DataStorage:()=>c.DataStorage,DenseBincount:()=>c.DenseBincount,DepthToSpace:()=>c.DepthToSpace,DepthwiseConv2dNative:()=>c.DepthwiseConv2dNative,DepthwiseConv2dNativeBackpropFilter:()=>c.DepthwiseConv2dNativeBackpropFilter,DepthwiseConv2dNativeBackpropInput:()=>c.DepthwiseConv2dNativeBackpropInput,Diag:()=>c.Diag,Dilation2D:()=>c.Dilation2D,Dilation2DBackpropFilter:()=>c.Dilation2DBackpropFilter,Dilation2DBackpropInput:()=>c.Dilation2DBackpropInput,ENV:()=>c.ENV,EarlyStopping:()=>_d,Einsum:()=>c.Einsum,Elu:()=>c.Elu,EluGrad:()=>c.EluGrad,Environment:()=>c.Environment,Equal:()=>c.Equal,Erf:()=>c.Erf,Exp:()=>c.Exp,ExpandDims:()=>c.ExpandDims,Expm1:()=>c.Expm1,FFT:()=>c.FFT,Fill:()=>c.Fill,FlipLeftRight:()=>c.FlipLeftRight,Floor:()=>c.Floor,FloorDiv:()=>c.FloorDiv,FromPixels:()=>c.FromPixels,FusedBatchNorm:()=>c.FusedBatchNorm,FusedConv2D:()=>c.FusedConv2D,FusedDepthwiseConv2D:()=>c.FusedDepthwiseConv2D,GatherNd:()=>c.GatherNd,GatherV2:()=>c.GatherV2,GraphModel:()=>$d.g_,Greater:()=>c.Greater,GreaterEqual:()=>c.GreaterEqual,History:()=>Ti,IFFT:()=>c.IFFT,Identity:()=>c.Identity,Imag:()=>c.Imag,InputSpec:()=>di,IsFinite:()=>c.IsFinite,IsInf:()=>c.IsInf,IsNan:()=>c.IsNan,KernelBackend:()=>c.KernelBackend,LRN:()=>c.LRN,LRNGrad:()=>c.LRNGrad,LayerVariable:()=>ui,LayersModel:()=>Fo,LeakyRelu:()=>c.LeakyRelu,Less:()=>c.Less,LessEqual:()=>c.LessEqual,LinSpace:()=>c.LinSpace,Log:()=>c.Log,Log1p:()=>c.Log1p,LogSoftmax:()=>c.LogSoftmax,LogicalAnd:()=>c.LogicalAnd,LogicalNot:()=>c.LogicalNot,LogicalOr:()=>c.LogicalOr,Max:()=>c.Max,MaxPool:()=>c.MaxPool,MaxPool3D:()=>c.MaxPool3D,MaxPool3DGrad:()=>c.MaxPool3DGrad,MaxPoolGrad:()=>c.MaxPoolGrad,MaxPoolWithArgmax:()=>c.MaxPoolWithArgmax,Maximum:()=>c.Maximum,Mean:()=>c.Mean,Min:()=>c.Min,Minimum:()=>c.Minimum,MirrorPad:()=>c.MirrorPad,Mod:()=>c.Mod,MomentumOptimizer:()=>c.MomentumOptimizer,Multinomial:()=>c.Multinomial,Multiply:()=>c.Multiply,Neg:()=>c.Neg,NonMaxSuppressionV3:()=>c.NonMaxSuppressionV3,NonMaxSuppressionV4:()=>c.NonMaxSuppressionV4,NonMaxSuppressionV5:()=>c.NonMaxSuppressionV5,NotEqual:()=>c.NotEqual,OP_SCOPE_SUFFIX:()=>c.OP_SCOPE_SUFFIX,OneHot:()=>c.OneHot,OnesLike:()=>c.OnesLike,Optimizer:()=>c.Optimizer,Pack:()=>c.Pack,PadV2:()=>c.PadV2,Pool:()=>c.Pool,Pow:()=>c.Pow,Prelu:()=>c.Prelu,Prod:()=>c.Prod,RMSPropOptimizer:()=>c.RMSPropOptimizer,RNN:()=>Bu,Range:()=>c.Range,Rank:()=>c.Rank,Real:()=>c.Real,RealDiv:()=>c.RealDiv,Reciprocal:()=>c.Reciprocal,Reduction:()=>c.Reduction,Relu:()=>c.Relu,Relu6:()=>c.Relu6,Reshape:()=>c.Reshape,ResizeBilinear:()=>c.ResizeBilinear,ResizeBilinearGrad:()=>c.ResizeBilinearGrad,ResizeNearestNeighbor:()=>c.ResizeNearestNeighbor,ResizeNearestNeighborGrad:()=>c.ResizeNearestNeighborGrad,Reverse:()=>c.Reverse,RotateWithOffset:()=>c.RotateWithOffset,Round:()=>c.Round,Rsqrt:()=>c.Rsqrt,SGDOptimizer:()=>c.SGDOptimizer,ScatterNd:()=>c.ScatterNd,Select:()=>c.Select,Selu:()=>c.Selu,Sequential:()=>Oo,Sigmoid:()=>c.Sigmoid,Sign:()=>c.Sign,Sin:()=>c.Sin,Sinh:()=>c.Sinh,Slice:()=>c.Slice,Softmax:()=>c.Softmax,Softplus:()=>c.Softplus,SpaceToBatchND:()=>c.SpaceToBatchND,SparseFillEmptyRows:()=>c.SparseFillEmptyRows,SparseReshape:()=>c.SparseReshape,SparseSegmentMean:()=>c.SparseSegmentMean,SparseSegmentSum:()=>c.SparseSegmentSum,SparseToDense:()=>c.SparseToDense,SplitV:()=>c.SplitV,Sqrt:()=>c.Sqrt,Square:()=>c.Square,SquaredDifference:()=>c.SquaredDifference,Step:()=>c.Step,StridedSlice:()=>c.StridedSlice,StringNGrams:()=>c.StringNGrams,StringSplit:()=>c.StringSplit,StringToHashBucketFast:()=>c.StringToHashBucketFast,Sub:()=>c.Sub,Sum:()=>c.Sum,SymbolicTensor:()=>pi,Tan:()=>c.Tan,Tanh:()=>c.Tanh,Tensor:()=>c.Tensor,TensorBuffer:()=>c.TensorBuffer,Tile:()=>c.Tile,TopK:()=>c.TopK,Transform:()=>c.Transform,Transpose:()=>c.Transpose,Unique:()=>c.Unique,Unpack:()=>c.Unpack,UnsortedSegmentSum:()=>c.UnsortedSegmentSum,Variable:()=>c.Variable,ZerosLike:()=>c.ZerosLike,_FusedMatMul:()=>c._FusedMatMul,abs:()=>c.abs,acos:()=>c.acos,acosh:()=>c.acosh,add:()=>c.add,addN:()=>c.addN,all:()=>c.all,any:()=>c.any,argMax:()=>c.argMax,argMin:()=>c.argMin,asin:()=>c.asin,asinh:()=>c.asinh,atan:()=>c.atan,atan2:()=>c.atan2,atanh:()=>c.atanh,avgPool:()=>c.avgPool,avgPool3d:()=>c.avgPool3d,backend:()=>c.backend,backend_util:()=>c.backend_util,basicLSTMCell:()=>c.basicLSTMCell,batchNorm:()=>c.batchNorm,batchNorm2d:()=>c.batchNorm2d,batchNorm3d:()=>c.batchNorm3d,batchNorm4d:()=>c.batchNorm4d,batchToSpaceND:()=>c.batchToSpaceND,bincount:()=>c.bincount,booleanMaskAsync:()=>c.booleanMaskAsync,broadcastTo:()=>c.broadcastTo,browser:()=>c.browser,buffer:()=>c.buffer,callbacks:()=>Ad,cast:()=>c.cast,ceil:()=>c.ceil,clipByValue:()=>c.clipByValue,clone:()=>c.clone,complex:()=>c.complex,concat:()=>c.concat,concat1d:()=>c.concat1d,concat2d:()=>c.concat2d,concat3d:()=>c.concat3d,concat4d:()=>c.concat4d,constraints:()=>r,conv1d:()=>c.conv1d,conv2d:()=>c.conv2d,conv2dTranspose:()=>c.conv2dTranspose,conv3d:()=>c.conv3d,conv3dTranspose:()=>c.conv3dTranspose,copyRegisteredKernels:()=>c.copyRegisteredKernels,cos:()=>c.cos,cosh:()=>c.cosh,cosineWindow:()=>c.cosineWindow,cumsum:()=>c.cumsum,customGrad:()=>c.customGrad,data:()=>l,denseBincount:()=>c.denseBincount,deprecationWarn:()=>c.deprecationWarn,depthToSpace:()=>c.depthToSpace,depthwiseConv2d:()=>c.depthwiseConv2d,deregisterOp:()=>$d.Ue,device_util:()=>c.device_util,diag:()=>c.diag,dilation2d:()=>c.dilation2d,disableDeprecationWarnings:()=>c.disableDeprecationWarnings,dispose:()=>c.dispose,disposeVariables:()=>c.disposeVariables,div:()=>c.div,divNoNan:()=>c.divNoNan,dot:()=>c.dot,dropout:()=>c.dropout,einsum:()=>c.einsum,elu:()=>c.elu,enableDebugMode:()=>c.enableDebugMode,enableProdMode:()=>c.enableProdMode,enclosingPowerOfTwo:()=>c.enclosingPowerOfTwo,engine:()=>c.engine,env:()=>c.env,equal:()=>c.equal,erf:()=>c.erf,exp:()=>c.exp,expandDims:()=>c.expandDims,expm1:()=>c.expm1,eye:()=>c.eye,fft:()=>c.fft,fill:()=>c.fill,findBackend:()=>c.findBackend,findBackendFactory:()=>c.findBackendFactory,floor:()=>c.floor,floorDiv:()=>c.floorDiv,fused:()=>c.fused,gather:()=>c.gather,gatherND:()=>c.gatherND,gather_util:()=>c.gather_util,getBackend:()=>c.getBackend,getGradient:()=>c.getGradient,getKernel:()=>c.getKernel,getKernelsForBackend:()=>c.getKernelsForBackend,grad:()=>c.grad,grads:()=>c.grads,greater:()=>c.greater,greaterEqual:()=>c.greaterEqual,ifft:()=>c.ifft,imag:()=>c.imag,image:()=>c.image,inTopKAsync:()=>c.inTopKAsync,initializers:()=>a,input:()=>Po,io:()=>c.io,irfft:()=>c.irfft,isFinite:()=>c.isFinite,isInf:()=>c.isInf,isNaN:()=>c.isNaN,keep:()=>c.keep,kernel_impls:()=>c.kernel_impls,layers:()=>s,leakyRelu:()=>c.leakyRelu,less:()=>c.less,lessEqual:()=>c.lessEqual,linalg:()=>c.linalg,linspace:()=>c.linspace,loadGraphModel:()=>$d.YL,loadLayersModel:()=>Bo,localResponseNormalization:()=>c.localResponseNormalization,log:()=>c.log,log1p:()=>c.log1p,logSigmoid:()=>c.logSigmoid,logSoftmax:()=>c.logSoftmax,logSumExp:()=>c.logSumExp,logicalAnd:()=>c.logicalAnd,logicalNot:()=>c.logicalNot,logicalOr:()=>c.logicalOr,logicalXor:()=>c.logicalXor,losses:()=>c.losses,matMul:()=>c.matMul,math:()=>c.math,max:()=>c.max,maxPool:()=>c.maxPool,maxPool3d:()=>c.maxPool3d,maxPoolWithArgmax:()=>c.maxPoolWithArgmax,maximum:()=>c.maximum,mean:()=>c.mean,memory:()=>c.memory,meshgrid:()=>c.meshgrid,metrics:()=>i,min:()=>c.min,minimum:()=>c.minimum,mirrorPad:()=>c.mirrorPad,mod:()=>c.mod,model:()=>zo,models:()=>o,moments:()=>c.moments,movingAverage:()=>c.movingAverage,mul:()=>c.mul,multiRNNCell:()=>c.multiRNNCell,multinomial:()=>c.multinomial,neg:()=>c.neg,nextFrame:()=>c.nextFrame,norm:()=>c.norm,notEqual:()=>c.notEqual,oneHot:()=>c.oneHot,ones:()=>c.ones,onesLike:()=>c.onesLike,op:()=>c.op,outerProduct:()=>c.outerProduct,pad:()=>c.pad,pad1d:()=>c.pad1d,pad2d:()=>c.pad2d,pad3d:()=>c.pad3d,pad4d:()=>c.pad4d,pool:()=>c.pool,pow:()=>c.pow,prelu:()=>c.prelu,print:()=>c.print,prod:()=>c.prod,profile:()=>c.profile,rand:()=>c.rand,randomGamma:()=>c.randomGamma,randomNormal:()=>c.randomNormal,randomUniform:()=>c.randomUniform,range:()=>c.range,ready:()=>c.ready,real:()=>c.real,reciprocal:()=>c.reciprocal,registerBackend:()=>c.registerBackend,registerCallbackConstructor:()=>Vo,registerGradient:()=>c.registerGradient,registerKernel:()=>c.registerKernel,registerOp:()=>$d.iw,regularizers:()=>u,relu:()=>c.relu,relu6:()=>c.relu6,removeBackend:()=>c.removeBackend,reshape:()=>c.reshape,reverse:()=>c.reverse,reverse1d:()=>c.reverse1d,reverse2d:()=>c.reverse2d,reverse3d:()=>c.reverse3d,reverse4d:()=>c.reverse4d,rfft:()=>c.rfft,round:()=>c.round,rsqrt:()=>c.rsqrt,scalar:()=>c.scalar,scatterND:()=>c.scatterND,scatter_util:()=>c.scatter_util,selu:()=>c.selu,separableConv2d:()=>c.separableConv2d,sequential:()=>Lo,serialization:()=>c.serialization,setBackend:()=>c.setBackend,setPlatform:()=>c.setPlatform,setdiff1dAsync:()=>c.setdiff1dAsync,sigmoid:()=>c.sigmoid,sign:()=>c.sign,signal:()=>c.signal,sin:()=>c.sin,sinh:()=>c.sinh,slice:()=>c.slice,slice1d:()=>c.slice1d,slice2d:()=>c.slice2d,slice3d:()=>c.slice3d,slice4d:()=>c.slice4d,slice_util:()=>c.slice_util,softmax:()=>c.softmax,softplus:()=>c.softplus,spaceToBatchND:()=>c.spaceToBatchND,sparse:()=>c.sparse,sparseToDense:()=>c.sparseToDense,spectral:()=>c.spectral,split:()=>c.split,sqrt:()=>c.sqrt,square:()=>c.square,squaredDifference:()=>c.squaredDifference,squeeze:()=>c.squeeze,stack:()=>c.stack,step:()=>c.step,stridedSlice:()=>c.stridedSlice,string:()=>c.string,sub:()=>c.sub,sum:()=>c.sum,sumOutType:()=>c.sumOutType,tan:()=>c.tan,tanh:()=>c.tanh,tensor:()=>c.tensor,tensor1d:()=>c.tensor1d,tensor2d:()=>c.tensor2d,tensor3d:()=>c.tensor3d,tensor4d:()=>c.tensor4d,tensor5d:()=>c.tensor5d,tensor6d:()=>c.tensor6d,tensor_util:()=>c.tensor_util,test_util:()=>c.test_util,tidy:()=>c.tidy,tile:()=>c.tile,time:()=>c.time,topk:()=>c.topk,train:()=>c.train,transpose:()=>c.transpose,truncatedNormal:()=>c.truncatedNormal,unique:()=>c.unique,unregisterGradient:()=>c.unregisterGradient,unregisterKernel:()=>c.unregisterKernel,unsortedSegmentSum:()=>c.unsortedSegmentSum,unstack:()=>c.unstack,upcastType:()=>c.upcastType,util:()=>c.util,valueAndGrad:()=>c.valueAndGrad,valueAndGrads:()=>c.valueAndGrads,variable:()=>c.variable,variableGrads:()=>c.variableGrads,version:()=>Hy,version_converter:()=>$d.gJ,version_core:()=>c.version_core,version_layers:()=>oo,where:()=>c.where,whereAsync:()=>c.whereAsync,zeros:()=>c.zeros,zerosLike:()=>c.zerosLike});var r={};n.r(r),n.d(r,{maxNorm:()=>$a,minMaxNorm:()=>Da,nonNeg:()=>Fa,unitNorm:()=>Ra});var a={};n.r(a),n.d(a,{constant:()=>Ps,glorotNormal:()=>js,glorotUniform:()=>qs,heNormal:()=>Xs,heUniform:()=>Ks,identity:()=>Hs,leCunNormal:()=>Ys,leCunUniform:()=>Qs,ones:()=>Bs,orthogonal:()=>Zs,randomNormal:()=>Ws,randomUniform:()=>Vs,truncatedNormal:()=>Us,varianceScaling:()=>Gs,zeros:()=>Ls});var s={};n.r(s),n.d(s,{Layer:()=>gi,RNN:()=>Bu,RNNCell:()=>Pu,activation:()=>ic,add:()=>mc,alphaDropout:()=>sd,average:()=>gc,averagePooling1d:()=>Nc,averagePooling2d:()=>_c,averagePooling3d:()=>$c,avgPool1d:()=>Tc,avgPool2d:()=>Ac,avgPool3d:()=>Rc,avgPooling1d:()=>Cc,avgPooling2d:()=>Ec,avgPooling3d:()=>Fc,batchNormalization:()=>kc,bidirectional:()=>Qc,concatenate:()=>yc,conv1d:()=>Ql,conv2d:()=>Zl,conv2dTranspose:()=>Jl,conv3d:()=>ec,conv3dTranspose:()=>tc,convLstm2d:()=>jc,convLstm2dCell:()=>Xc,cropping2D:()=>rc,dense:()=>oc,depthwiseConv2d:()=>sc,dot:()=>wc,dropout:()=>uc,elu:()=>Gl,embedding:()=>fc,flatten:()=>cc,gaussianDropout:()=>ad,gaussianNoise:()=>rd,globalAveragePooling1d:()=>Dc,globalAveragePooling2d:()=>Mc,globalMaxPool1d:()=>Jc,globalMaxPool2d:()=>ed,globalMaxPooling1d:()=>Oc,globalMaxPooling2d:()=>zc,gru:()=>Vc,gruCell:()=>Wc,input:()=>Po,inputLayer:()=>Hl,layerNormalization:()=>Ic,leakyReLU:()=>jl,lstm:()=>Uc,lstmCell:()=>Hc,masking:()=>id,maxPool1d:()=>td,maxPool2d:()=>nd,maxPooling1d:()=>Lc,maxPooling2d:()=>Bc,maxPooling3d:()=>Pc,maximum:()=>bc,minimum:()=>xc,multiply:()=>vc,permute:()=>hc,prelu:()=>Xl,reLU:()=>ql,repeatVector:()=>dc,reshape:()=>pc,rnn:()=>Kc,separableConv2d:()=>nc,simpleRNN:()=>Gc,simpleRNNCell:()=>qc,softmax:()=>Kl,spatialDropout1d:()=>lc,stackedRNNCells:()=>Yc,thresholdedReLU:()=>Yl,timeDistributed:()=>Zc,upSampling2d:()=>ac,zeroPadding2d:()=>Sc});var i={};n.r(i),n.d(i,{MAPE:()=>yd,MSE:()=>vd,binaryAccuracy:()=>od,binaryCrossentropy:()=>ud,categoricalAccuracy:()=>cd,categoricalCrossentropy:()=>dd,cosineProximity:()=>fd,mape:()=>bd,meanAbsoluteError:()=>md,meanAbsolutePercentageError:()=>gd,meanSquaredError:()=>xd,mse:()=>wd,precision:()=>pd,recall:()=>hd,sparseCategoricalAccuracy:()=>ld});var o={};n.r(o),n.d(o,{modelFromJSON:()=>Mo});var u={};n.r(u),n.d(u,{l1:()=>Id,l1l2:()=>kd,l2:()=>Sd});var l={};n.r(l),n.d(l,{CSVDataset:()=>xp,Dataset:()=>op,FileDataSource:()=>$p,TextLineDataset:()=>pp,URLDataSource:()=>Rp,array:()=>lp,csv:()=>Fp,func:()=>Dp,generator:()=>Mp,microphone:()=>zp,version_data:()=>Lp,webcam:()=>Op,zip:()=>cp});var c=n(8433),d=n(9121),p=n(2271),h=n(4841),f=n(1901);const m={kernelName:d.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,f.N)((0,p.p)(n,"float32"),-1))}}};var g=n(1274),y=n(7370),b=n(9494),x=n(3261),v=n(248),w=n(827);const k={kernelName:d.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,v.h)((0,p.p)(n,"float32")),r=(0,x._)((0,w.l)((0,b.i)(1),t));return(0,y.W)((0,g.h)(e,r))}}}},I={kernelName:d.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,x._)((0,w.l)((0,v.h)((0,p.p)(n,"float32")),1));return(0,g.h)(e,t)}}}};var S=n(2200),N=n(4968),T=n(5475);const C={kernelName:d.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=S.RR(n.shape,a);return r.length>0&&(t=(0,T.S)(t,r)),(0,N.X)(t,n.shape)},b:()=>{let t=e;const n=S.RR(r.shape,a);return n.length>0&&(t=(0,T.S)(t,n)),(0,N.X)(t,r.shape)}}}},_={kernelName:d.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var A=n(6577);const E={kernelName:d.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.P)(n)}}},$={kernelName:d.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,A.P)(n)}}},R={kernelName:d.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,x._)((0,w.l)((0,b.i)(1),(0,v.h)((0,p.p)(n,"float32")))))}}};var F=n(6407);const D={kernelName:d.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,x._)((0,F.I)((0,b.i)(1),(0,v.h)((0,p.p)(n,"float32"))));return(0,g.h)(e,t)}}}},M={kernelName:d.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,S.$N)(n.shape,r.shape);return{a:()=>{const t=(0,F.I)((0,v.h)(n),(0,v.h)(r));let s=(0,h.d)(e,(0,g.h)(r,t));const i=(0,S.RR)(n.shape,a);return i.length>0&&(s=(0,T.S)(s,i)),(0,N.X)(s,n.shape)},b:()=>{const t=(0,F.I)((0,v.h)(n),(0,v.h)(r));let s=(0,y.W)((0,h.d)(e,(0,g.h)(n,t)));const i=(0,S.RR)(r.shape,a);return i.length>0&&(s=(0,T.S)(s,i)),(0,N.X)(s,r.shape)}}}},O={kernelName:d.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,F.I)((0,v.h)((0,p.p)(n,"float32")),1))}}},z={kernelName:d.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,w.l)((0,b.i)(1),(0,v.h)((0,p.p)(n,"float32"))))}}};var L=n(7097),B=n(3740),P=n(569),V=n(2668);const W=(0,V.op)({avgPool3dGrad_:function(e,t,n,r,a,s){const i=(0,B._1)(e,"dy","avgPool3dGrad"),o=(0,B._1)(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=(0,N.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=(0,N.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),P.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),P.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&P.hu(P.GN(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const p={dy:u,input:l},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},f=L.BV.runKernel(d.IM,p,h);return c?(0,N.X)(f,[f.shape[1],f.shape[2],f.shape[3],f.shape[4]]):f}}),U={kernelName:d._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>W(e,r,a,s,i,o)}}},H=(0,V.op)({avgPoolGrad_:function(e,t,n,r,a){const s=(0,B._1)(e,"dy","avgPoolGrad"),i=(0,B._1)(t,"input","avgPoolGrad");P.hu(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=(0,N.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,N.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),P.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),P.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},p={filterSize:n,strides:r,pad:a},h=L.BV.runKernel(d.RO,c,p);return l?(0,N.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),G={kernelName:d.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>H(e,r,a,s,i)}}};var q=n(8687);const j={kernelName:d.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>(0,q.O)(e,a,!1,!1),b:()=>(0,q.O)(e,r,!0,!1)}:s&&!i?{a:()=>(0,q.O)(a,e,!1,!0),b:()=>(0,q.O)(r,e,!1,!1)}:{a:()=>(0,q.O)(a,e,!0,!0),b:()=>(0,q.O)(e,r,!0,!0)}:{a:()=>(0,q.O)(e,a,!1,!0),b:()=>(0,q.O)(r,e,!0,!1)}}};var X=n(7918);const K={kernelName:d.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>(0,X.f)(e,r,a)}}},Y={kernelName:d.Ly,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,T.S)(e,o,!0)}}},Q={kernelName:d.RF,gradFunc:e=>({x:()=>e.clone()})},Z={kernelName:d.gJ,gradFunc:e=>({x:()=>(0,A.P)(e)})};var J=n(7630),ee=n(624),te=n(2856),ne=n(5912);const re={kernelName:d.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,ne.a)((0,te.H)((0,J.b)(r,a),(0,ee.z)(r,s)),e,(0,A.P)(e))}}},ae={kernelName:d.yj,inputsToSave:["x"],gradFunc:m.gradFunc};var se=n(8644);const ie={kernelName:d.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,P.EC)(a,t[0].shape)[0],i=r.map((e=>e[s]));return(0,se.V)(e,i,s).map((e=>()=>e))}};var oe=n(6013),ue=n(9832),le=n(2582);const ce={kernelName:d.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return P.hu(le.I0(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,ue._)(r.shape,e,a,i,o,u),filter:()=>(0,oe.p)(r,e,a.shape,i,o,u)}}};var de=n(4794);const pe={kernelName:d.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,de.T)(e,a,s,i,o,1,u),filter:()=>(0,oe.p)(e,r,a.shape,s,i,o,u)}}},he=(0,V.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=(0,N.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,N.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),P.hu(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),P.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),P.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),P.hu(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),P.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return L.BV.runKernel(d.o2,o,u)}});var fe=n(7594);const me={kernelName:d.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;P.hu((0,le.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,fe._)(i.shape,e,o,a,s),filter:()=>he(i,e,o.shape,a,s)}}};var ge=n(9331);const ye={kernelName:d.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)((0,y.W)((0,ge.O)((0,p.p)(n,"float32"))),e)}}};var be=n(3254);const xe={kernelName:d.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)((0,be.R)((0,p.p)(n,"float32")),e)}}};var ve=n(3591),we=n(7405),ke=n(9065);const Ie={kernelName:d.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=(0,ve.Q3)([a],r.rank);let n=(0,we.z)(e,a,s,!i);return null!=t&&(n=(0,ke.p)(n,t)),n}}}};var Se=n(8098),Ne=n(4375);const Te={kernelName:d.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;P.hu(le.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return P.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),P.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),P.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),P.hu(le.jT(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&P.hu(P.GN(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>(0,Ne.v)(u.shape,e,l,a,s,r,i),filter:()=>(0,Se.z)(u,e,l.shape,a,s,r,i)}}},Ce={kernelName:d.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>L.BV.runKernel(d.ek,s,n),filter:()=>L.BV.runKernel(d.Vn,i,n)}}},_e={kernelName:d.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>L.BV.runKernel(d.HE,r)}}};var Ae=n(4842);const Ee={kernelName:d.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,h.d)((0,Ae.Q)((0,y.W)((0,v.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,h.d)(e,r)}}},$e={kernelName:d.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,n)}}},Re={kernelName:d.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,N.X)(e,n.shape)}}},Fe={kernelName:d.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,Ae.Q)(n))}}},De={kernelName:d.OR,gradFunc:e=>({x:()=>(0,A.P)(e)})},Me={kernelName:d.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,S.$N)(n.shape,r.shape);return{a:()=>{const t=(0,g.h)(e,(0,p.p)(r,"float32")),s=(0,S.RR)(n.shape,a);return s.length>0?(0,N.X)((0,T.S)(t,s),n.shape):t},b:()=>{let t=(0,h.d)(e,(0,p.p)(n,"float32"));const s=(0,S.RR)(r.shape,a);s.length>0&&(t=(0,N.X)((0,T.S)(t,s),r.shape));const i=(0,v.h)(r);return(0,y.W)((0,g.h)(t,(0,p.p)(i,"float32")))}}}};var Oe=n(2634),ze=n(7501);const Le={kernelName:d.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?(0,b.i)(1):o,l=(0,S.RR)(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=(0,w.l)(a,s),p=(0,h.d)(e,u),f=(0,Oe.b)((0,F.I)(i,(0,b.i)(r))),m=(0,h.d)((0,h.d)((0,h.d)(f,f),f),(0,b.i)(-.5));return{x:()=>1===s.rank?(0,N.X)((0,h.d)((0,h.d)(e,(0,ze.G)((0,N.X)(f,[1,1,1,s.shape[0]]),c)),u),a.shape):(0,N.X)((0,h.d)((0,h.d)(e,f),u),a.shape),mean:()=>{let e=(0,h.d)((0,h.d)(f,(0,b.i)(-1)),p);return 1===s.rank&&(e=(0,T.S)(e,l)),(0,N.X)(e,s.shape)},variance:()=>{let e=(0,h.d)((0,h.d)(m,d),p);return 1===s.rank&&(e=(0,T.S)(e,l)),(0,N.X)(e,s.shape)},scale:()=>{const t=(0,h.d)(d,f);let n=(0,h.d)(e,t);return 1===s.rank&&(n=(0,T.S)(n,l)),(0,N.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,T.S)(t,l)),(0,N.X)(t,s.shape)}}}};var Be=n(8749);const Pe={kernelName:d.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=(0,P.EC)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=Ve(0,u),p=Ve(u+1,u+1+c),h=We([o,[n],l]),f=(0,N.X)(e,h),m=(0,N.X)(a,[n]),g=We([[u],d,p]),y=(0,ke.p)(f,g);let b=(0,Be.p)(y,m,r.shape[i]);const x=(0,ve.LJ)(g);return b=(0,ke.p)(b,x),b},indices:()=>a}}};function Ve(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function We(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Ue={kernelName:d.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,A.P)(n),b:()=>(0,A.P)(r)}}},He={kernelName:d.iJ,gradFunc:e=>({x:()=>(0,p.p)(e,"float32")})},Ge={kernelName:d.av,gradFunc:e=>({x:()=>(0,A.P)(e)})},qe={kernelName:d.iW,gradFunc:e=>({x:()=>(0,A.P)(e)})},je={kernelName:d.r7,gradFunc:e=>({x:()=>(0,A.P)(e)})};var Xe=n(636);const Ke={kernelName:d.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=(0,Xe.p)(r,0);return{x:()=>(0,ne.a)(s,e,(0,h.d)(e,a))}}},Ye={kernelName:d.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,F.I)(n,1))}}},Qe={kernelName:d.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,p.p)(n,"float32"))}}},Ze={kernelName:d.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Ae.Q)(r);return(0,w.l)(e,(0,h.d)((0,T.S)(e,a,!0),t))}}}},Je=(0,V.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return L.BV.runKernel(d.Hh,o,u)}}),et={kernelName:d.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Je(r,a,e,s,i,o,u)}}};var tt=n(6477);function nt(e,t,n,r){return t.rank<n.rank&&(t=(0,N.X)(t,ve.rv(t.shape,r))),e.rank<n.rank&&(e=(0,N.X)(e,ve.rv(e.shape,r))),{x:()=>(0,h.d)(e,(0,p.p)((0,tt.D)(n,t),e.dtype))}}const rt={kernelName:d.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=nt(e,t[1],s,P.EC(a,s.shape));return{x:()=>i.x()}}};var at=n(6573);const st={kernelName:d.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,h.d)(e,(0,p.p)((0,J.b)(n,r),"float32")),b:()=>(0,h.d)(e,(0,p.p)((0,at.d)(n,r),"float32"))}}},it=(0,V.op)({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=(0,B._1)(e,"dy","maxPool3dGrad"),u=(0,B._1)(t,"input","maxPool3dGrad"),l=(0,B._1)(n,"output","maxPool3dGrad");let c=o,p=u,h=l,f=!1;4===u.rank&&(f=!0,c=(0,N.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=(0,N.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=(0,N.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),P.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),P.hu(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),P.hu(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=i&&P.hu(P.GN(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const m={dy:c,input:p,output:h},g={filterSize:r,strides:a,pad:s,dimRoundingMode:i},y=L.BV.runKernel(d.OU,m,g);return f?(0,N.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}}),ot={kernelName:d.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>it(e,r,a,s,i,o,u)}}},ut=(0,V.op)({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=(0,B._1)(e,"dy","maxPoolGrad"),u=(0,B._1)(t,"input","maxPoolGrad"),l=(0,B._1)(n,"output","maxPoolGrad");P.hu(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),P.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),P.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&P.hu(P.GN(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return L.BV.runKernel(d.OV,c,p)}}),lt={kernelName:d.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ut(e,r,a,s,i,o)}}};var ct=n(4917);const dt={kernelName:d.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=P.EC(a,r.shape),i=(0,ve.kz)(r.shape,s)[1],o=P.NA(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,N.X)(e,t);return(0,g.h)((0,h.d)(n,(0,ct.i)(r.shape,"float32")),o)}}}},pt={kernelName:d.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=nt(e,i,s,P.EC(a,s.shape));return{x:()=>o.x()}}},ht={kernelName:d.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,h.d)(e,(0,p.p)((0,ee.z)(n,r),"float32")),b:()=>(0,h.d)(e,(0,p.p)((0,Xe.p)(n,r),"float32"))}}};var ft=n(2676);const mt={kernelName:d.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ft.t)(e,s,r.shape)}}};var gt=n(6943);const yt={kernelName:d.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,S.$N)(n.shape,r.shape);return{a:()=>{const t=(0,S.RR)(n.shape,a);return t.length>0?(0,N.X)((0,T.S)(e,t),n.shape):e},b:()=>{const t=(0,h.d)(e,(0,y.W)((0,gt.G)((0,g.h)(n,r)))),s=(0,S.RR)(r.shape,a);return s.length>0?(0,N.X)((0,T.S)(t,s),r.shape):t}}}},bt={kernelName:d.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,S.$N)(n.shape,r.shape);return{a:()=>{const t=(0,h.d)(e,(0,p.p)(r,"float32")),s=(0,S.RR)(n.shape,a);return s.length>0?(0,N.X)((0,T.S)(t,s),n.shape):t},b:()=>{const t=(0,h.d)(e,(0,p.p)(n,"float32")),s=(0,S.RR)(r.shape,a);return s.length>0?(0,N.X)((0,T.S)(t,s),r.shape):t}}}},xt={kernelName:d.ku,gradFunc:e=>({x:()=>(0,y.W)(e)})};var vt=n(9640);const wt={kernelName:d.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,vt.l)(n.shape,"float32")}}},kt={kernelName:d.qW,gradFunc:e=>({x:()=>(0,A.P)(e)})};var It=n(4136);const St={kernelName:d.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,It.H)(e,r).map((e=>()=>e))}},Nt={kernelName:d.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,ft.t)(e,s,r.shape)}}};var Tt=n(2597),Ct=n(3453);const _t={kernelName:d.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=S.$N(s.shape,i.shape);return{a:()=>{const t=(0,p.p)(i,"float32");let n=(0,h.d)(e,(0,h.d)(t,(0,Ct.s)(s,(0,w.l)(t,(0,b.i)(1)))));const r=S.RR(s.shape,o);return r.length>0&&(n=(0,T.S)(n,r)),(0,N.X)(n,s.shape)},b:()=>{const t=(0,Xe.p)(s,0),n=(0,ne.a)(t,(0,Tt.c)(s),(0,A.P)(s));let r=(0,h.d)(e,(0,h.d)(a,n));const u=S.RR(i.shape,o);return u.length>0&&(r=(0,T.S)(r,u)),(0,N.X)(r,i.shape)}}}},At={kernelName:d.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,Xe.p)(n,0);return{x:()=>(0,ne.a)(a,e,(0,h.d)(e,r)),alpha:()=>{let t=(0,ne.a)(a,(0,A.P)(e),(0,h.d)(e,n));const s=(0,S.RR)(r.shape,e.shape);return s.length>0&&(t=(0,T.S)(t,s)),(0,N.X)(t,r.shape)}}}},Et={kernelName:d.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.$N(n.shape,r.shape);return{a:()=>{const t=(0,g.h)(e,(0,p.p)(r,"float32")),s=S.RR(n.shape,a);return s.length>0?(0,N.X)((0,T.S)(t,s),n.shape):t},b:()=>{let t=(0,h.d)(e,(0,p.p)(n,"float32"));const s=S.RR(r.shape,a);s.length>0&&(t=(0,N.X)((0,T.S)(t,s),r.shape));const i=(0,v.h)(r);return(0,y.W)((0,g.h)(t,(0,p.p)(i,"float32")))}}}},$t={kernelName:d.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,y.W)((0,v.h)(n)))}}},Rt={kernelName:d.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,h.d)((0,ee.z)(n,6),(0,f.N)(n));return{x:()=>(0,h.d)(e,(0,p.p)(r,"float32"))}}},Ft={kernelName:d.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,p.p)((0,f.N)(n),"float32"))}}},Dt={kernelName:d.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,N.X)(e,n.shape)}}},Mt={kernelName:d._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>L.BV.runKernel(d.zb,a,n)}}},Ot={kernelName:d.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>L.BV.runKernel(d.Hm,a,n)}}};var zt=n(7486);const Lt={kernelName:d.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,P.EC)(r,e.shape);return{x:()=>(0,zt.G)(e,a)}}},Bt={kernelName:d.e0,gradFunc:e=>({x:()=>(0,A.P)(e)})},Pt={kernelName:d.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,y.W)((0,g.h)(e,(0,h.d)((0,Ct.s)(n,1.5),2)))}}};var Vt=n(8651);const Wt={kernelName:d.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,p.p)((0,A.P)(n),"float32"),t:()=>(0,h.d)(e,(0,p.p)(n,e.dtype)),e:()=>(0,h.d)(e,(0,p.p)((0,Vt.h)(n),e.dtype))}}};var Ut=n(3179);const Ht={kernelName:d.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Xe.p)(n,(0,b.i)(0)),r=(0,b.i)(Ut.y),a=(0,b.i)(Ut.$),s=(0,h.d)(e,a),i=(0,h.d)((0,h.d)(e,r),(0,Ae.Q)((0,p.p)(n,"float32")));return(0,ne.a)(t,s,i)}}}},Gt={kernelName:d.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,h.d)(n,(0,w.l)((0,b.i)(1),n)))}}},qt={kernelName:d.i5,gradFunc:e=>({x:()=>(0,A.P)(e)})};var jt=n(173);const Xt={kernelName:d.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)((0,jt.m)((0,p.p)(n,"float32")),e)}}};var Kt=n(2699);const Yt={kernelName:d.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)((0,Kt.f)((0,p.p)(n,"float32")),e)}}};var Qt=n(9682),Zt=n(7650);const Jt={kernelName:d.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=(0,Zt.parseSliceParams)(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,Qt.v)(e,l)}}},en={kernelName:d.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,h.d)(e,r);return{logits:()=>(0,w.l)(s,(0,h.d)((0,T.S)(s,[a],!0),r))}}};var tn=n(625);const nn={kernelName:d.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,tn.X)(n))}}};var rn=n(8441);const an={kernelName:d.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>(0,rn.E)(e,r,a)}}};var sn=n(6884);const on={kernelName:d.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,sn.z)(e,r)}}},un={kernelName:d.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,h.d)((0,x._)((0,p.p)(n,"float32")),2))}}},ln={kernelName:d.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)(e,(0,h.d)((0,p.p)(n,"float32"),2))}}},cn={kernelName:d._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,b.i)(2);return{a:()=>(0,h.d)(e,(0,h.d)(a,(0,w.l)(n,r))),b:()=>(0,h.d)(e,(0,h.d)(a,(0,w.l)(r,n)))}}},dn={kernelName:d.h8,gradFunc:e=>({x:()=>(0,A.P)(e)})},pn={kernelName:d.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=S.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=S.RR(n.shape,a);return r.length>0&&(t=(0,T.S)(t,r)),(0,N.X)(t,n.shape)},b:()=>{let t=e;const n=S.RR(r.shape,a);return n.length>0&&(t=(0,T.S)(t,n)),(0,N.X)((0,y.W)(t),r.shape)}}}},hn={kernelName:d.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,P.EC)(s,r.shape).forEach((e=>{a[e]=1}));const i=(0,N.X)(e,a),o=(0,h.d)(i,(0,ct.i)(r.shape,"float32"));return{x:()=>o}}},fn={kernelName:d.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,g.h)(e,(0,v.h)((0,jt.m)(n)))}}},mn={kernelName:d.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,h.d)((0,w.l)((0,b.i)(1),(0,v.h)(n)),e)}}},gn={kernelName:d.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,A.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,F.I)(t,(0,ft.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,F.I)(t,(0,ft.t)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,F.I)(t,(0,ft.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,F.I)(t,(0,ft.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},yn={kernelName:d.G3,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=ve.LJ(a);return{x:()=>(0,ke.p)(e,s)}}};var bn=n(2991);const xn={kernelName:d.To,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,bn.k)(e,a)}}};var vn=n(1300),wn=n(4926),kn=n(632);const In={kernelName:d.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,kn.g)(t,(0,A.P)(t)),r=(0,wn.I)(e,n);let a=(0,J.b)(t,(0,b.i)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=(0,vn.d)(a,e+1);a=(0,te.H)(a,(0,ct.i)(r.shape,"bool"));const i=(0,A.P)(r);return(0,ne.a)(a,r,i)}(e,n)}}},Sn={kernelName:d.Ru,gradFunc:e=>({x:()=>(0,A.P)(e)})};var Nn=n(6151);const Tn=[m,k,I,C,_,E,$,R,D,M,O,z,U,G,j,K,Y,Q,Z,re,ae,ie,pe,ce,me,ye,xe,Ie,Te,Ce,Et,_e,Ee,$e,Re,Fe,Me,De,Le,Pe,Ue,He,Ge,qe,je,Ke,Ye,Qe,Ze,et,rt,rt,st,ot,lt,dt,pt,ht,mt,yt,bt,xt,wt,kt,St,Nt,Nt,_t,At,$t,Rt,Ft,Dt,Mt,Ot,Lt,Bt,Pt,Wt,Ht,Gt,qt,Xt,Yt,Jt,en,nn,an,an,on,on,un,cn,ln,dn,pn,hn,fn,mn,gn,yn,xn,In,Sn];for(const e of Tn)(0,Nn.Li)(e);var Cn=n(6235),_n=n(4077);(0,_n.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,Cn.W)(this)};var An=n(7839);(0,_n.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,An.K)(this)};var En=n(1470);(0,_n.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,En._)(this)},(0,_n.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,F.I)(this,e)};var $n=n(781);(0,_n.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,$n.$)(this,e,t)};var Rn=n(2998);(0,_n.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Rn.Y)(this,e,t)};var Fn=n(47);(0,_n.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Fn.N)(this,e)};var Dn=n(7394);(0,_n.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Dn.v)(this,e)},(0,_n.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,P.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,N.X)(this,[])},(0,_n.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,p.p)(this,e)},(0,_n.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,N.X)(this,[this.size])},(0,_n.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,N.X)(this,[e,t])},(0,_n.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,N.X)(this,[e,t,n])},(0,_n.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,N.X)(this,[e,t,n,r])},(0,_n.t3)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,N.X)(this,[e,t,n,r,a])};var Mn=n(2421);(0,_n.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,Mn.Z)(this)};var On=n(1891);(0,_n.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,On.V)(this)};var zn=n(7037);(0,_n.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,zn.z)(this)};var Ln=n(9812);(0,_n.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,Ln.f)(this,e)};var Bn=n(369);(0,_n.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,Bn.C)(this)};var Pn=n(5176);(0,_n.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Pn.w)(this,e,t,n,r)},(0,_n.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,rn.E)(this,e,t)};var Vn=n(7505);(0,_n.t3)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Vn.t)(this,e,t,n,r,a)};var Wn=n(8247);(0,_n.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,Wn.U)(this,e)},(0,_n.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,p.p)(this,e)};var Un=n(6825);(0,_n.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,Un.m)(this)};var Hn=n(2279);(0,_n.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,Hn.i)(this,e,t)},(0,_n.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof _n.es&&(e=[e]),(0,sn.z)([this,...e],t)};var Gn=n(1355);(0,_n.t3)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Gn.P)(this,e,t,n,r,a,s)};var qn=n(1405);(0,_n.t3)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,qn.b)(this,e,t,n,r,a)},(0,_n.t3)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,de.T)(this,e,t,n,r,a,s)},(0,_n.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,jt.m)(this)},(0,_n.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,Kt.f)(this)},(0,_n.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,we.z)(this,e,t,n)};var jn=n(9112);(0,_n.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,jn.n)(this,e,t)};var Xn=n(4718);(0,_n.t3)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Xn.B)(this,e,t,n,r,a,s)};var Kn=n(557);(0,_n.t3)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Kn.W)(this,e,t,n,r,a)};var Yn=n(9322);(0,_n.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,Yn.N)(this,e)},(0,_n.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,g.h)(this,e)};var Qn=n(548);(0,_n.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,Qn.A)(this,e)};var Zn=n(3233);(0,_n.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Zn.p)(this)},(0,_n.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,tt.D)(this,e)};var Jn=n(4650);(0,_n.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,Jn.q)(this)},(0,_n.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Ae.Q)(this)},(0,_n.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,vn.d)(this,e)};var er=n(3426);(0,_n.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,er.t)(this)};var tr=n(7020);(0,_n.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,tr.k)(this)},(0,_n.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,N.X)(this,[this.size])},(0,_n.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,gt.G)(this)};var nr=n(9165);(0,_n.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,nr.q)(this,e)},(0,_n.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,wn.I)(this,e,t)},(0,_n.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,J.b)(this,e)},(0,_n.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Xe.p)(this,e)};var rr=n(8447);(0,_n.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,rr.S)(this)};var ar=n(4415);(0,_n.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,ar.w)(this)};var sr=n(3963);(0,_n.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,sr.x)(this)};var ir=n(4365);(0,_n.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,ir.U)(this)};var or=n(6230);(0,_n.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,or.i)(this)};var ur=n(9133);(0,_n.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,ur.h)(this,e)},(0,_n.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,ee.z)(this,e)},(0,_n.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,at.d)(this,e)};var lr=n(9648);(0,_n.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,lr.G)(this,e,t,n,r)};var cr=n(3888);(0,_n.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,cr.e)(this)};var dr=n(1510);(0,_n.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,dr.C)(this,e)};var pr=n(1391);(0,_n.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,pr.l)(this,e,t)},(0,_n.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Tt.c)(this)};var hr=n(7474);(0,_n.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,hr.K)(this)},(0,_n.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,te.H)(this,e)},(0,_n.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Vt.h)(this)};var fr=n(5750);(0,_n.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,fr.K)(this,e)};var mr=n(596);(0,_n.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,mr.e)(this,e)},(0,_n.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,q.O)(this,e,t,n)};var gr=n(1174);(0,_n.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,gr._)(this,e,t,n,r)};var yr=n(3307);(0,_n.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,yr.F)(this,e,t)},(0,_n.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,kn.g)(this,e)};var br=n(5130);(0,_n.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,br.J)(this,e,t)};var xr=n(5735);(0,_n.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,xr.V)(this,e,t)};var vr=n(4513);(0,_n.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,vr.L)(this,e)};var wr=n(1483);(0,_n.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,wr.V)(this,e,t)};var kr=n(5228);(0,_n.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,kr.w)(this,e)},(0,_n.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,h.d)(this,e)},(0,_n.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,y.W)(this)};var Ir=n(3561);(0,_n.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Ir.K)(this,e,t,n)};var Sr=n(6500);(0,_n.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Sr.Q)(this,e)};var Nr=n(6708);(0,_n.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Nr.l)(this,e,t,n)};var Tr=n(7846);(0,_n.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Tr.J)(this)},(0,_n.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Qt.v)(this,e,t)};var Cr=n(5860);(0,_n.t3)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),(0,Cr.d)(this,e,t,n,r,a)},(0,_n.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Ct.s)(this,e)};var _r=n(8151);(0,_n.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,_r.A)(this,e)};var Ar=n(9451);(0,_n.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Ar.W)(this,e,t)};var Er=n(9036);(0,_n.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Er.M)(this)};var $r=n(7409);(0,_n.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,$r.U)(this)};var Rr=n(3582);(0,_n.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Rr.b)(this)},(0,_n.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,N.X)(this,e.shape)},(0,_n.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,N.X)(this,e)};var Fr=n(3305);(0,_n.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Fr.I)(this,e,t,n)};var Dr=n(5098);(0,_n.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Dr.j)(this,e,t,n)},(0,_n.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,zt.G)(this,e)};var Mr=n(3710);(0,_n.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Mr.Q)(this)};var Or=n(7809);(0,_n.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,Or.N)(this)},(0,_n.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Oe.b)(this)};var zr=n(5503);(0,_n.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,zr.U)(this)};var Lr=n(8678);(0,_n.t3)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Lr.U)(this,e,t,n,r,a,s)},(0,_n.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,tn.X)(this)};var Br=n(4434);(0,_n.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,Br.X)(this)},(0,_n.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,ge.O)(this)},(0,_n.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,be.R)(this)},(0,_n.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,ft.t)(this,e,t)};var Pr=n(682);(0,_n.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Pr.X)(this,e)};var Vr=n(3694);(0,_n.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,Vr.W)(this)},(0,_n.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,X.f)(this,e,t)},(0,_n.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,se.V)(this,e,t)},(0,_n.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,x._)(this)},(0,_n.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,v.h)(this)};var Wr=n(5265);(0,_n.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Wr.$)(this,e)};var Ur=n(9590);(0,_n.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Ur.L)(this,e)},(0,_n.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof _n.es?[this,e]:[this,...e];return(0,bn.k)(n,t)},(0,_n.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,f.N)(this,e)};var Hr=n(5158);(0,_n.t3)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),(0,Hr.N)(this,e,t,n,r,a,s,i,o)},(0,_n.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,w.l)(this,e)},(0,_n.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,T.S)(this,e,t)};var Gr=n(1173);(0,_n.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,Gr.O)(this)};var qr=n(1869);(0,_n.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,qr.A)(this)},(0,_n.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,ze.G)(this,e)},(0,_n.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,p.p)(this,"bool")},(0,_n.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,p.p)(this,"float32")},(0,_n.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,p.p)(this,"int32")};var jr=n(3243);(0,_n.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,jr.h)(this,e,t)},(0,_n.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,ke.p)(this,e)};var Xr=n(9608);let Kr;function Yr(){return null==Kr&&(Kr=(0,c.backend)().epsilon()),Kr}(0,_n.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,Xr.T)(this,e)},(0,_n.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,Be.p)(this,e,t)},(0,_n.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,It.H)(this,e)},(0,_n.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ne.a)(e,this,t)},(0,_n.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,A.P)(this)};class Qr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qr.prototype)}}class Zr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zr.prototype)}}class Jr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jr.prototype)}}class ea extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ea.prototype)}}class ta extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ta.prototype)}}function na(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ra(e,t){if(!e)throw new ta(t)}function aa(e,t){let n=0;for(const r of e)r===t&&n++;return n}function sa(e){return 1===e.length?e[0]:e}function ia(e){return Array.isArray(e)?e:[e]}function oa(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ua(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let la={};function ca(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function da(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>da(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?da(t):e[n]=t.value)}}}function pa(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in la)s=la[a];else if(s=t[a],null==s)throw new Jr(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new Jr(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in la?[o,u]=la.className:i in t&&([o,u]=t[i]),null==o)throw new Jr(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(la))e[t]=la[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},la);for(const e of Object.keys(n))la[e]=n[e];da(s.config);const r=u(o,s.config,n,a);return la=Object.assign({},t),r}{const e=Object.assign({},la);for(const e of Object.keys(n))la[e]=n[e];const t=new o(s.config);return la=Object.assign({},e),t}}}function ha(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function fa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function ma(e){if(null==e)throw new Jr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ga(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Jr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function ya(e,t,n=0,r=1/0){return ra(n>=0),ra(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function ba(e,t){Array.isArray(e)?(c.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>ba(e,`element ${n+1} of ${t}`)))):c.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${xa(e)}.`))}function xa(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>xa(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function va(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function wa(e,t){return(0,c.tidy)((()=>c.sqrt(c.sum(c.mul(e,e),t,!0))))}class ka extends c.serialization.Serializable{getConfig(){return{}}}class Ia extends ka{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.tidy)((()=>{const t=wa(e,this.axis),n=c.clipByValue(t,0,this.maxValue);return c.mul(e,c.div(n,c.add(Yr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ia.className="MaxNorm",c.serialization.registerClass(Ia);class Sa extends ka{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.tidy)((()=>c.div(e,c.add(Yr(),wa(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Sa.className="UnitNorm",c.serialization.registerClass(Sa);class Na extends ka{apply(e){return c.relu(e)}}Na.className="NonNeg",c.serialization.registerClass(Na);class Ta extends ka{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,c.tidy)((()=>{const t=wa(e,this.axis),n=c.add(c.mul(this.rate,c.clipByValue(t,this.minValue,this.maxValue)),c.mul(1-this.rate,t));return c.mul(e,c.div(n,c.add(Yr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ta.className="MinMaxNorm",c.serialization.registerClass(Ta);const Ca={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function _a(e){return ca(e)}function Aa(e,t={}){return pa(e,c.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function Ea(e){return null==e?null:"string"==typeof e?Aa({className:e in Ca?Ca[e]:e,config:{}}):e instanceof ka?e:Aa(e)}function $a(e){return new Ia(e)}function Ra(e){return new Sa(e)}function Fa(){return new Na}function Da(e){return new Ta(e)}const Ma=["channelsFirst","channelsLast"],Oa=["nearest","bilinear"],za=["valid","same","causal"],La=["max","avg"],Ba=["sum","mul","concat","ave"],Pa=new Map;function Va(e){ga(Ma,"DataFormat",e)}function Wa(e){ga(za,"PaddingMode",e)}function Ua(e){ga(La,"PoolMode",e)}const Ha=[];function Ga(e,t){Ha.push(e);try{const e=t();return Ha.pop(),e}catch(e){throw Ha.pop(),e}}function qa(e){if(!Ka(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Ha.length?"":Ha.join("/")+"/")+e}function ja(e){if(!Ka(e))throw new Error("Not a valid tensor name: '"+e+"'");Pa.has(e)||Pa.set(e,0);const t=Pa.get(e);if(Pa.set(e,Pa.get(e)+1),t>0){const n=`${e}_${t}`;return Pa.set(n,1),n}return e}const Xa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Ka(e){return!!e.match(Xa)}function Ya(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Qa(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Za(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ja(e,t){if(t<e)throw new Jr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function es(e,t){return c.cast(e,t)}function ts(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),c.reshape(e,n)}function ns(e,t,n){return(0,c.tidy)((()=>{switch(e.rank){case 1:return c.slice1d(e,t,n);case 2:return c.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return c.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return c.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return c.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return c.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Jr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function rs(e,t,n){return(0,c.tidy)((()=>{switch(e.rank){case 1:return c.slice1d(e,t,n);case 2:return c.slice2d(e,[0,t],[e.shape[0],n]);case 3:return c.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return c.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Jr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function as(e,t,n,r){return(0,c.tidy)((()=>{switch(e.rank){case 1:return c.slice1d(e,t,n);case 2:switch(r){case 1:return ns(e,t,n);case 2:return rs(e,t,n);default:throw new Jr(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ns(e,t,n);case 2:return c.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return rs(e,t,n);default:throw new Jr(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ns(e,t,n);case 2:return c.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return c.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return rs(e,t,n);default:throw new Jr(`The axis is not within the rank of the tensor ${r}`)}default:throw new Jr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ss(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),c.concat(e,t)}function is(e,t){switch(e.rank){case 1:return c.concat1d([e,t]);case 2:return c.concat2d([e,t],0);case 3:return c.concat3d([e,t],0);case 4:return c.concat4d([e,t],0);default:throw new Jr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function os(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Jr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return c.tile(e,t)}function us(e,t=0,n=1,r,a){return c.randomNormal(e,t,n,r,a)}function ls(e,t,n,r){if(e.rank<2||t.rank<2)throw new ea(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ea(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,s=!1;return c.fused.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?ps(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=c.reshape(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],d=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=c.reshape(c.transpose(t,d),[u,-1]);const p=[...a,...l],h=!1,f=!1;return c.reshape(c.fused.matMul({a:e,b:t,transposeA:h,transposeB:f,bias:r?ps(e.rank,r,"channelsLast"):null,activation:n}),p)}}function cs(e,t,n){return(0,c.tidy)((()=>(t=Array.isArray(t)?(0,c.tensor1d)(t,"int32"):c.cast(t,"int32"),c.gather(e,t,n))))}function ds(e){return c.mul(e,e)}function ps(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Jr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?c.reshape(t,[1,r[0],1,1,1]):c.reshape(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?c.reshape(t,[1,1,1,1,r[0]]):c.reshape(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?c.reshape(t,[1,r[0],1,1]):c.reshape(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?c.reshape(t,[1,1,1,r[0]]):c.reshape(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?c.reshape(t,[1,r[0],1]):c.reshape(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?c.reshape(t,[1,1,r[0]]):c.reshape(t,[1].concat(r))}else if(e<3)return t;throw new Jr(`Unsupported input rank by biasAdd: ${t.rank}`)}function hs(e,t,n){return(0,c.tidy)((()=>(null==n&&(n="channelsLast"),Va(n),c.add(e,ps(e.rank,t,n)))))}function fs(e,t,n,r){return(0,c.tidy)((()=>c.dropout(e,t,n,r)))}function ms(e,t,n=!1){return n?e():t()}const gs=["fanIn","fanOut","fanAvg"],ys=["normal","uniform","truncatedNormal"];class bs extends c.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class xs extends bs{apply(e,t){return(0,c.zeros)(e,t)}}xs.className="Zeros",c.serialization.registerClass(xs);class vs extends bs{apply(e,t){return(0,c.ones)(e,t)}}vs.className="Ones",c.serialization.registerClass(vs);class ws extends bs{constructor(e){if(super(),"object"!=typeof e)throw new Jr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Jr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,c.tidy)((()=>(0,c.mul)((0,c.scalar)(this.value),(0,c.ones)(e,t))))}getConfig(){return{value:this.value}}}ws.className="Constant",c.serialization.registerClass(ws);class ks extends bs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,c.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}ks.className="RandomUniform",c.serialization.registerClass(ks);class Is extends bs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ea(`randomNormal does not support dType ${t}.`);return us(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Is.className="RandomNormal",c.serialization.registerClass(Is);class Ss extends bs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ea(`truncatedNormal does not support dType ${t}.`);return(0,c.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ss.className="TruncatedNormal",c.serialization.registerClass(Ss);class Ns extends bs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,c.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new Jr("Identity matrix initializer can only be used for 2D square matrices.");return(0,c.mul)(this.gain,(0,c.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}Ns.className="Identity",c.serialization.registerClass(Ns);class Ts extends bs{constructor(e){if(super(),e.scale<0)throw new Jr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ga(gs,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ga(ys,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Va(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Ya(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Ya(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Ya(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ea(`${this.getClassName()} does not support dType ${t}.`);return(0,c.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return(0,c.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ts.className="VarianceScaling",c.serialization.registerClass(Ts);class Cs extends Ts{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Cs.className="GlorotUniform",c.serialization.registerClass(Cs);class _s extends Ts{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}_s.className="GlorotNormal",c.serialization.registerClass(_s);class As extends Ts{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}As.className="HeNormal",c.serialization.registerClass(As);class Es extends Ts{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Es.className="HeUniform",c.serialization.registerClass(Es);class $s extends Ts{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}$s.className="LeCunNormal",c.serialization.registerClass($s);class Rs extends Ts{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Ts.className}}Rs.className="LeCunNormal",c.serialization.registerClass(Rs);class Fs extends bs{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ea("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,c.tidy)((()=>{if(e.length<2)throw new ea("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=us(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=c.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=(0,c.transpose)(n)),(0,c.mul)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fs.className="Orthogonal",c.serialization.registerClass(Fs);const Ds={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Ms(e,t={}){return pa(e,c.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Os(e){return ca(e)}function zs(e){if("string"==typeof e){const t=e in Ds?Ds[e]:e;if("GlorotNormal"===t)return new _s;if("GlorotUniform"===t)return new Cs;if("HeNormal"===t)return new As;if("HeUniform"===t)return new Es;if("LeCunNormal"===t)return new $s;if("LeCunUniform"===t)return new Rs;{const e={};return e.className=t,e.config={},Ms(e)}}return e instanceof bs?e:Ms(e)}function Ls(){return new xs}function Bs(){return new vs}function Ps(e){return new ws(e)}function Vs(e){return new ks(e)}function Ws(e){return new Is(e)}function Us(e){return new Ss(e)}function Hs(e){return new Ns(e)}function Gs(e){return new Ts(e)}function qs(e){return new Cs(e)}function js(e){return new _s(e)}function Xs(e){return new As(e)}function Ks(e){return new Es(e)}function Ys(e){return new $s(e)}function Qs(e){return new Rs(e)}function Zs(e){return new Fs(e)}let Js=0;function ei(){return Js++}const ti={};function ni(e=""){return e in ti||(ti[e]=0),ti[e]+=1,e+ti[e].toString()}function ri(e){return Array.isArray(e)&&Array.isArray(e[0])}function ai(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function si(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Jr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ii(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Jr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function oi(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class ui{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=ei(),n=null==n?"Variable":n,this.originalName=qa(n),this.name=ja(this.originalName),this.trainable_=r,this.constraint=a,this.val=c.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function li(e){return e.map((e=>e.read()))}function ci(e){e.forEach((e=>{e[0].write(e[1])}))}class di{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class pi{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=ei(),null!=s&&(this.originalName=qa(s),this.name=ja(this.originalName)),this.rank=t.length}}let hi=0;class fi{constructor(e,t){this.callArgs=t,this.id=hi++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mi=0;class gi extends c.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=oa(e)+"_"+ni(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Zr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Jr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return sa(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sa(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Qr(`Layer ${this.name} is not connected, no input to return.`);return sa(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Qr(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Qr(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sa(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ia(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ia(this.inputSpec);if(e.length!==t.length)throw new Jr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new Jr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new Jr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new Jr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new Jr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new Jr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new Jr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ia(e);let r=!0;for(const e of n)if(!(e instanceof pi)){r=!1;break}let a=!0;for(const e of n)if(e instanceof pi){a=!1;break}if(r===a)throw new Jr("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ga(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ia(e))t.push(n.shape);this.build(sa(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ia(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=sa(s),null!=this.activityRegularizer)throw new ea("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ia(e);const t=[];for(const n of e)t.push(n.shape);return sa(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new pi(s,n,this,ia(e),t,this.name,r))):new pi(s,r,this,ia(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ea("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Qr(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Qr(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return oi(this.weights)}build(e){this.built=!0}getWeights(e=!1){return li(e?this.trainableWeights:this.weights)}setWeights(e){(0,c.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new Jr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=li(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!c.util.arraysEqual(s.shape,o.shape))throw new Jr(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ci(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Jr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=zs("zeros"));const o=r.apply(t,n),u=new ui(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ia(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ia(e);t=ia(t),n=ia(n),r=ia(r),a=ai(a),s=ai(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new fi({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function yi(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=yi(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class bi extends gi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:ni("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Jr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Jr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Jr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new pi(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Jr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function xi(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Jr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new bi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function vi(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,c.dispose)(r)}}function wi(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var ki;bi.className="InputLayer",c.serialization.registerClass(bi),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(ki||(ki={}));class Ii{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Si{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ni extends Ii{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=(0,c.tidy)((()=>(0,c.add)(this.totals[e],(0,c.mul)(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,c.tidy)((()=>{const n=(0,c.mul)((0,c.div)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,c.keep)(t[e])})))}}class Ti extends Ii{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Ci extends Ii{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");c.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=c.util.now();return(...a)=>{const s=c.util.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await vi(n),r.push(this.yield(e,t,n))),r.push((0,c.nextFrame)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await vi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await vi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,c.nextFrame)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await vi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await vi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,c.nextFrame)()):c.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await vi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await vi(e),await this.trainEnd(e))}}function _i(e,t){return null==e&&(e={}),e instanceof Ii?[e]:Array.isArray(e)&&e[0]instanceof Ii?e:ia(e).map((e=>new Ci(e,t)))}class Ai{constructor(){}static registerCallbackConstructor(e,t){c.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Ai.checkForDuplicate(t),null==Ai.constructors[e]&&(Ai.constructors[e]=[]),Ai.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ai.constructors)Ai.constructors[+t].forEach((t=>{if(t===e)throw new Jr("Duplicate callback constructor.")}))}static clear(){Ai.constructors={}}static createCallbacks(e){const t=[];for(const n in Ai.constructors){const r=+n;e>=r&&t.push(...Ai.constructors[r])}return t.map((e=>new e))}}function Ei(e,t,n,r,a,s,i,o,u){const l=new Ti,c=[new Ni,...Ai.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new Si(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function $i(e,t={},n=!1){return pa(e,c.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ri(e,t){return(0,c.tidy)((()=>{"float32"!==e.dtype&&(e=c.cast(e,"float32"));const n=c.sum(ds(e),t,!0),r=c.fill(n.shape,Yr()),a=c.sqrt(c.maximum(n,r));return c.div(e,a)}))}function Fi(e,t){return(0,c.tidy)((()=>c.mean(ds(c.sub(t,e)),-1)))}function Di(e,t){return(0,c.tidy)((()=>c.mean(c.abs(c.sub(t,e)),-1)))}function Mi(e,t){return(0,c.tidy)((()=>{const n=c.sub(e,t),r=c.clipByValue(c.abs(e),Yr(),Number.MAX_VALUE),a=c.abs(c.div(n,r));return c.mul(100,c.mean(a,-1))}))}function Oi(e,t,n=!1){return(0,c.tidy)((()=>{if(n)t=c.softmax(t);else{const e=c.sum(t,t.shape.length-1,!0);t=c.div(t,e)}return t=c.clipByValue(t,Yr(),1-Yr()),c.neg(c.sum(c.mul(c.cast(e,"float32"),c.log(t)),t.shape.length-1))}))}function zi(e,t,n=!1){return(0,c.tidy)((()=>{const r=c.cast(c.floor(function(e){const t=[Ya(e.shape)];return c.reshape(e,t)}(e)),"int32"),a=(t=c.clipByValue(t,Yr(),1-Yr())).shape;return Oi(c.reshape(c.oneHot(r,a[a.length-1]),a),t,n)}))}function Li(e,t){return(0,c.tidy)((()=>{let n;return n=c.clipByValue(t,Yr(),1-Yr()),n=c.log(c.div(n,c.sub(1,n))),c.mean(function(e,t){if(!c.util.arraysEqual(e.shape,t.shape))throw new Jr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,c.tidy)((()=>{const n=c.relu(t),r=c.neg(c.abs(t));return c.add(c.sub(n,c.mul(t,e)),c.log1p(c.exp(r)))}))}(e,n),-1)}))}function Bi(e,t){return(0,c.tidy)((()=>{const n=Ri(e,-1),r=Ri(t,-1),a=c.mul(n,r);return c.neg(c.sum(a,-1))}))}Ai.constructors={};const Pi={meanSquaredError:Fi,meanAbsoluteError:Di,meanAbsolutePercentageError:Mi,meanSquaredLogarithmicError:function(e,t){return(0,c.tidy)((()=>{const n=c.clipByValue(t,Yr(),Number.MAX_VALUE),r=c.log(c.add(1,n)),a=c.clipByValue(e,Yr(),Number.MAX_VALUE),s=c.log(c.add(1,a));return c.mean(ds(c.sub(r,s)),-1)}))},squaredHinge:function(e,t){return(0,c.tidy)((()=>{const n=c.maximum(0,c.sub(1,c.mul(e,t)));return c.mean(ds(n),-1)}))},hinge:function(e,t){return(0,c.tidy)((()=>{const n=c.maximum(0,c.sub(1,c.mul(e,t)));return c.mean(n,-1)}))},categoricalHinge:function(e,t){return(0,c.tidy)((()=>{const n=c.sum(c.mul(e,t),-1),r=c.max(c.mul(c.sub(1,e),t),-1);return c.maximum(0,c.add(1,c.sub(r,n)))}))},logcosh:function(e,t){return(0,c.tidy)((()=>{const n=Math.log(2),r=c.sub(t,e),a=c.sub(c.add(r,c.softplus(c.mul(-2,r))),n);return c.mean(a,-1)}))},categoricalCrossentropy:Oi,sparseCategoricalCrossentropy:zi,binaryCrossentropy:Li,kullbackLeiblerDivergence:function(e,t){return(0,c.tidy)((()=>{const n=c.clipByValue(e,Yr(),1),r=c.clipByValue(t,Yr(),1);return c.sum(c.mul(e,c.log(c.div(n,r))),-1)}))},poisson:function(e,t){return(0,c.tidy)((()=>{const n=c.log(c.add(Yr(),t));return c.mean(c.sub(t,c.mul(e,n)),-1)}))},cosineProximity:Bi};function Vi(e){if("string"==typeof e){if(e in Pi)return Pi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jr(t)}return e}function Wi(e,t){return(0,c.tidy)((()=>{const n=c.mul(.5,c.onesLike(t)),r=es(c.greater(t,n),e.dtype);return c.mean(c.equal(e,r),-1)}))}function Ui(e,t){return(0,c.tidy)((()=>es(c.equal(c.argMax(e,-1),c.argMax(t,-1)),"float32")))}function Hi(e,t){return(0,c.tidy)((()=>c.cast(c.sum(c.logicalAnd(c.equal(e,1),c.equal(t,1))),"float32")))}function Gi(e,t){return(0,c.tidy)((()=>{const n=Hi(e,t),r=function(e,t){return(0,c.tidy)((()=>c.cast(c.sum(c.logicalAnd(c.equal(e,0),c.equal(t,1))),"float32")))}(e,t),a=c.add(n,r);return c.cast(c.where(c.greater(a,0),c.div(n,a),0),"float32")}))}function qi(e,t){return Li(e,t)}function ji(e,t){return e.rank===t.rank&&(e=c.squeeze(e,[e.rank-1])),(t=c.argMax(t,-1)).dtype!==e.dtype&&(t=c.cast(t,e.dtype)),c.cast(c.equal(e,t),"float32")}const Xi=Oi,Ki=zi,Yi={binaryAccuracy:Wi,categoricalAccuracy:Ui,precision:Gi,categoricalCrossentropy:Xi,sparseCategoricalCrossentropy:Ki,mse:Fi,MSE:Fi,mae:Di,MAE:Di,mape:Mi,MAPE:Mi,cosine:Bi};function Qi(e){if("string"==typeof e&&e in Yi)return Yi[e];if("string"!=typeof e&&null!=e)return e;throw new Jr(`Unknown metric ${e}`)}function Zi(e){if(ra(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Pi))if(Pi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Yi))if(Yi[n]===e){t=n;break}return void 0!==t?t:e.name}}function Ji(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!eo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function eo(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!eo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!eo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function to(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function no(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}to([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function ro(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];to([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)to(["","","",s[e]],t,r)}function ao(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function so(e,t){if(null===e)return null;if("string"==typeof e)return ua(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];ao(t,a,r)?n.push(r):n.push(so(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ua(n);t[e]=so(r,e)}}return t}}function io(e,t){if(null==e)return null;if("string"==typeof e)return oa(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];ao(t,a,r)?n.push(r):n.push(io(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[oa(n)]="name"!==n&&"className"!==n||"string"!=typeof r?io(r,n):r}return t}}const oo="3.8.0";class uo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof uo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Jr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,c.cast)(t,e.dtype)}catch(n){throw new Jr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof pi){if(null==this.id2Value[e.id])throw new Jr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof pi){if(null==this.id2Value[e.id])throw new Jr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,c.dispose)(this.id2Mask)}}const lo={},co={};function po(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const d=o.join(",")+"|"+t.names().join(",");let p,h;if(null==lo[d]){const e=function(e,t){c.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=fo(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=fo(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:ho(r)}}(i,t);p=e.sorted,h=e.recipientCounts,lo[d]=p,co[d]=h}p=lo[d],h={},a||Object.assign(h,co[d]);const f=new uo(t);for(let e=0;e<p.length;++e){if(null!=r){const e=(0,c.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=p[e],i=s.sourceLayer;if(i instanceof bi)continue;const l=[],d=[],m=[];let g=!1;for(const e of s.inputs){const n=f.getValue(e),r=f.getMask(e);l.push(n),d.push(r),null!=r&&(g=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=d[0]);const y=ia(i.apply(l,n));let b=null;i.supportsMasking&&(b=i.computeMask(l,d));const x=mo(s),v=Array.isArray(x)?x:[x];for(let e=0;e<v.length;++e){f.hasKey(v[e])||f.add(v[e],y[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(v[e].name);-1!==t&&(u[t]=y[e])}a||(0,c.dispose)(m)}return f.disposeMasks(),s?u:u[0]}function ho(e){const t={};for(const n in e)t[n]=e[n].size;return t}function fo(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function mo(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class go extends gi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=ni(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],fa(this.inputs).length!==this.inputs.length)throw new Jr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);fa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ra(0===n,"input layer has >1 nodes"),ra(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof bi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new Zr(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(go.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(a[e])}let h=Object.keys(p).map((e=>parseInt(e,10))).sort(ha);this.layers=[];for(const e of h){const t=p[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof go&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,h=Object.keys(d).map((e=>parseInt(e,10))).sort(ha);const f=this.inputs.slice(),m=[];for(const e of h)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Zr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Zr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Jr(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new Jr(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Jr(`${e.length} of ${r} weights are not set: ${e}`)}ci(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${oo}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=io(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,c.tidy)((()=>{e=ia(e);const n=new uo;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return po(this.outputs,n,t)}))}computeMask(e,t){return(0,c.tidy)((()=>{let n;return e=ia(e),n=null==t?na(null,e.length):ia(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=ai(e);if(t.length!==this.inputLayers.length)throw new Jr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ha);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=ai(t.computeOutputShape(sa(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];ra(t in n),a.push(n[t])}return sa(a)}runInternalGraph(e,t){null==t&&(t=na(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ha);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=ia(t.call(e,l)),u=ia(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=ia(t.call(r,l)),u=ia(t.computeMask(r,i));if(t.activityRegularizer)throw new ea("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){ra(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof go?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=go.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Jr(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Jr("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Jr(`No such layer: ${e}`)}calculateLosses(){return(0,c.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=go.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=go.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[go.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=go.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=go.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply(sa(n),r)}function u(e){const n=e.name,s=$i(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Jr(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!ma(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],p=[],h=t.inputLayers;for(const e of h){const t=e[0],n=e[1],r=e[2];ra(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ra(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}return new e({inputs:d,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Jr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,c.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function yo(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function bo(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,c.tidy)((()=>{if(1===e.shape.length)return(0,c.clone)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,c.argMax)(e,t)}if(1===e.shape[1])return(0,c.reshape)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,c.dispose)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,c.tensor1d)(a,"float32")}return null}function xo(e,t){return(0,c.mul)(e,t)}function vo(e,t){let n,r;const a=t;n=a.xs,r=a.ys,c.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=wo("input",e.inputNames,n),i=wo("output",e.outputNames,r),o=s[0].shape[0];c.util.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),c.util.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)c.util.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)c.util.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function wo(e,t,n){if(n instanceof c.Tensor)return[n];if(Array.isArray(n))return c.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new Jr(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function ko(e){return"function"==typeof e.iterator}function Io(e){c.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function So(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ns(e,t,n-t))):ns(e,t,n-t)}function No(e,t){return c.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>No(e,t))):cs(e,"int32"===t.dtype?t:c.cast(t,"int32"))))}function To(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Co(e){const t=[];e instanceof c.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ts(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function _o(e,t){if(null==e)return;const n=[];if(t instanceof c.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof c.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ao(e){return Array.isArray(e)}function Eo(e){return!function(e){return e instanceof c.Tensor}(e)&&!Ao(e)}function $o(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ao(e)&&e.length>0)t=!0;else if(Eo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Jr(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Eo(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new Jr(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Ao(e)){if((e=e).length!==t.length)throw new Jr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new Jr(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Co(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Jr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new Jr(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Ro(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new Jr(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new Jr(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new Jr(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new Jr(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Fo extends go{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Jr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),to(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?no(o[e],n,r):ro(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?oi(e.collectedTrainableWeights):oi(e.trainableWeights),t}(e),l=oi(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>c.train.adagrad(.01),Adadelta:()=>c.train.adadelta(1,.95,Yr()),Adam:()=>c.train.adam(.001,.9,.999,Yr()),Adamax:()=>c.train.adamax(.002,.9,.999,Yr(),0),RMSProp:()=>c.train.rmsprop(.001,.9,0,Yr()),SGD:()=>c.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Jr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof c.Optimizer))throw new Jr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Jr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Vi(e)))}else{const n=Vi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Jr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Vi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ga("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ga("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Li?-1!==["accuracy","acc"].indexOf(i)?r=Wi:-1!==["crossentropy","ce"].indexOf(i)&&(r=qi):this.lossFunctions[e]===zi?-1!==["accuracy","acc"].indexOf(i)?r=ji:-1!==["crossentropy","ce"].indexOf(i)&&(r=Ki):-1!==["accuracy","acc"].indexOf(i)?r=Ui:-1!==["crossentropy","ce"].indexOf(i)&&(r=Xi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Qi(i);s=e,n=""+Zi(i)}let t;Ga(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Io(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return sa(this.testLoop(i,s,r,n.verbose,n.steps))}finally{_o(a[0],e),_o(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new ea("Verbose mode is not implemented yet.");c.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=c.tidy((()=>{if(t.value){const{xs:n,ys:r}=vo(e,t.value),i=n.concat(r),l=c.tidy((()=>a(i)));if(c.dispose(i),0===u)for(let e=0;e<l.length;++e)s.push((0,c.scalar)(0));const d=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=c.tidy((()=>c.add(s[e],c.mul(d,t)))),u>0&&c.dispose(n)}c.dispose(l),o+=d,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=c.div(s[e],o),c.dispose(t)}return sa(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new Jr(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Jr(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Jr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new uo;if(e instanceof c.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Jr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Jr(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=po(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=na(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Jr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return c.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new ea("Verbose predictLoop() is not implemented yet.");const a=To(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)c.tidy((()=>{const n=a[t][0],r=a[t][1],s=So(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new uo(i);return po(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return sa(s.map((e=>c.concat(e,0))))}))}predict(e,t={}){const n=Co(e);Ro(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Io(r),this.predictLoop(n,r)}finally{_o(n,e)}}predictOnBatch(e){Ro(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Zr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===zi?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=fa(e.map((e=>e.shape[0])));r.sort();const a=fa(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new Jr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Jr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!c.util.arraysEqual(r,a))throw new Jr(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=$o(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=$o(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Fi,Li,Oi];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Oi&&1===s.shape[s.shape.length-1])throw new Jr(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new Jr(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Jr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=yo(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await bo(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return c.tidy((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ea("Verbose mode is not implemented yet.");if(null!=a)throw new ea("steps mode in testLoop() is not implemented yet");{const r=To(s,n),a=(0,c.tensor1d)(Ja(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=ns(a,s,o-s),l=No(t,u),d=e(l);if(0===n)for(let e=0;e<d.length;++e)i.push((0,c.scalar)(0));for(let e=0;e<d.length;++e){const t=d[e];i[e]=c.add(i[e],c.mul(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=c.div(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;aa(e,r)>1&&(a+=`_${aa(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new uo(e),o=po(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=xo(n,a[e]));const s=c.mean(n);t.push(s),u=0===e?n:c.add(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=c.mean(t(r[a],o[a]))}c.keep(n),s.push(n)}return u=c.mean(u),this.calculateLosses().forEach((e=>{u=c.add(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>c.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new uo(s),o=po(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=c.mean(r(a[e],o[e]));n=0===e?s:c.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=c.mean(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,d;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;Io(p);const h=!1,f=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,p);a=f[0],s=f[1],d=f[2];let m,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ea("validationData including sample weights is not supported yet."):new Jr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);u=n[0],l=n[1],m=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=So(a,e,t),a=So(a,0,e),l=So(s,e,t),s=So(s,0,e),m=u.concat(l)}else null!=r.validationSteps&&(g=!0);const y=a.concat(s).concat(d);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let v,w;g?(e.makeTestFunction(),v=e.testFunction,w=x.slice().concat(x.map((e=>"val_"+e)))):(v=null,m=[],w=x.slice());const k=_i(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,d,p,h,f,m){null==a&&(a=32),null==s&&(s=1),null==d&&(d=!0),null==h&&(h=0);let g=!1;null!=u&&null!=l&&(g=!0);const y=e.checkNumSamples(n,a,f,"steps_per_epoch");let b;null!=y&&(b=Ja(0,y)),null==i&&(i=1);const{callbackList:x,history:v}=Ei(o,i,s,h,y,f,a,g,p);x.setModel(e),e.history=v,await x.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await x.onEpochBegin(i);const s={};{if("batch"===d)throw new ea("batch shuffling is not implemneted yet");d&&c.util.shuffle(b);const i=(0,c.tensor1d)(b),o=To(y,a);for(let d=0;d<o.length;++d){const p={};if(await x.onBatchBegin(d,p),c.tidy((()=>{const h=o[d][0],f=o[d][1],m=ns(i,h,f-h);p.batch=d,p.size=f-h;const y=No(n,m),b=t(y);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];p[t]=n,c.keep(n)}if(d===o.length-1&&g){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];c.keep(a),s["val_"+n]=a}}})),await x.onBatchEnd(d,p),wi(p),e.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(i,s),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,b,y,x,p,r.epochs,r.verbose,k,v,m,r.shuffle,w,r.initialEpoch,null)}finally{e.isTraining=!1,_o(a,t),_o(s,n),_o(u,i),_o(l,o),null!=d&&c.dispose(d)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(c.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),c.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),c.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),c.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),c.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(ko(n.validationData))c.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ea("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const d=_i(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:h,history:f}=Ei(d,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);h.setModel(e),e.history=f,await h.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const l={};await h.onEpochBegin(m);let d=0,p=0;for(r||(g=await t.iterator());!r||d<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${d} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=vo(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await h.onBatchBegin(p,s);const i=[];if(null!=n.classWeight){const t=yo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await bo(a[e],null,t[e]))}const l=r.concat(a).concat(i),f=o(l);c.dispose(l);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];s[t]=n,c.keep(n)}await h.onBatchEnd(p,s),wi(s),p++,d++}if(r?d>=n.batchesPerEpoch:t.done){if(a){let t;t=ko(n.validationData)?ia(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ia(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,l),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return c.dispose(s),sa(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=c.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-c.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=oa(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>oa(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=oa(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[oa(Zi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>oa(Zi(e))));{const e={};for(const t in this.metrics)e[t]=oa(Zi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=$i(so(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ua(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ua(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ua(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ua(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ua(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=c.io.getSaveHandlers(e);if(0===t.length)throw new Jr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Jr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Jr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await c.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${oo}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await c.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=c.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ji(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ji(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Fo.className="Model",c.serialization.registerClass(Fo);class Do extends Fo{}async function Mo(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=$i(so(n),t);if(null!=e.weightsManifest){const t=await c.io.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),(0,c.dispose)(t)}return r}Do.className="Functional",c.serialization.registerClass(Do);class Oo extends Fo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:ni("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Jr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Oo||e instanceof Fo;let n;if(t){if(n=e,1!==n.outputs.length)throw new Jr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Jr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=xi({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Jr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Jr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=yi(this.outputs[0])}this.inboundNodes=[],new fi({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:na(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ii(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Fo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Jr("Legacy serialization format not supported yet.");a=t}else c.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Oo))throw new ea(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=$i(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Jr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Jr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function zo(e){return new Fo(e)}function Lo(e){return new Oo(e)}function Bo(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=c.io.getLoadHandlers(e,t);if(0===n.length)n.push(c.io.browserHTTPRequest(e,t));else if(n.length>1)throw new Jr(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Jr("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=$i(so(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Jr("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=c.io.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,c.dispose)(e),(0,c.dispose)(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function Po(e){return xi(e)}function Vo(e,t){Ai.registerCallbackConstructor(e,t)}Oo.className="Sequential",c.serialization.registerClass(Oo);class Wo extends c.serialization.Serializable{getConfig(){return{}}}class Uo extends Wo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ea(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return c.elu(e)}(e,t)}}Uo.className="elu",c.serialization.registerClass(Uo);class Ho extends Wo{apply(e){return c.selu(e)}}Ho.className="selu",c.serialization.registerClass(Ho);class Go extends Wo{apply(e){return c.relu(e)}}Go.className="relu",c.serialization.registerClass(Go);class qo extends Wo{apply(e){return(0,c.tidy)((()=>c.minimum(6,c.relu(e))))}}qo.className="relu6",c.serialization.registerClass(qo);class jo extends Wo{apply(e){return e}}jo.className="linear",c.serialization.registerClass(jo);class Xo extends Wo{apply(e){return c.sigmoid(e)}}Xo.className="sigmoid",c.serialization.registerClass(Xo);class Ko extends Wo{apply(e){return function(e){return(0,c.tidy)((()=>{const t=c.add(.5,c.mul(.2,e));return c.clipByValue(t,0,1)}))}(e)}}Ko.className="hardSigmoid",c.serialization.registerClass(Ko);class Yo extends Wo{apply(e){return c.softplus(e)}}Yo.className="softplus",c.serialization.registerClass(Yo);class Qo extends Wo{apply(e){return function(e){return(0,c.tidy)((()=>c.div(e,c.add(c.abs(e),1))))}(e)}}Qo.className="softsign",c.serialization.registerClass(Qo);class Zo extends Wo{apply(e){return c.tanh(e)}}Zo.className="tanh",c.serialization.registerClass(Zo);class Jo extends Wo{apply(e,t=-1){return c.softmax(e,t)}}Jo.className="softmax",c.serialization.registerClass(Jo);class eu extends Wo{apply(e,t=-1){return c.logSoftmax(e,t)}}eu.className="logSoftmax",c.serialization.registerClass(eu);class tu extends Wo{apply(e,t=1){return(0,c.tidy)((()=>c.mul(c.sigmoid(c.mul(e,t)),e)))}}tu.className="swish",c.serialization.registerClass(tu);class nu extends Wo{apply(e){return(0,c.tidy)((()=>c.mul(e,c.tanh(c.softplus(e)))))}}function ru(e){return e.getClassName()}function au(e,t={}){return pa(e,c.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function su(e){if(null==e){return au({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},au(t)}return e instanceof Wo?e:au(e)}function iu(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}nu.className="mish",c.serialization.registerClass(nu);class ou extends c.serialization.Serializable{}class uu extends ou{constructor(e){super(),iu(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,c.tidy)((()=>{let t=(0,c.zeros)([1]);return this.hasL1&&(t=(0,c.add)(t,(0,c.sum)(c.mul(this.l1,(0,c.abs)(e))))),this.hasL2&&(t=(0,c.add)(t,(0,c.sum)(c.mul(this.l2,ds(e))))),c.reshape(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}uu.className="L1L2",c.serialization.registerClass(uu);const lu={l1l2:"L1L2"};function cu(e){return ca(e)}function du(e,t={}){return pa(e,c.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function pu(e){return null==e?null:"string"==typeof e?du({className:e in lu?lu[e]:e,config:{}}):e instanceof ou?e:du(e)}class hu extends gi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=si(e);let n=(0,c.relu)(e);return null!=this.maxValue&&(n=(0,c.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}hu.className="ReLU",c.serialization.registerClass(hu);class fu extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=si(e);return(0,c.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fu.className="LeakyReLU",c.serialization.registerClass(fu);class mu extends gi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=zs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=pu(e.alphaRegularizer),this.alphaConstraint=Ea(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Jr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ii(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new di({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=si(e),(0,c.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Os(this.alphaInitializer),alphaRegularizer:cu(this.alphaRegularizer),alphaConstraint:_a(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}mu.className="PReLU",c.serialization.registerClass(mu);class gu extends gi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ea(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=si(e);return(0,c.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}gu.className="ELU",c.serialization.registerClass(gu);class yu extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=si(e);return(0,c.mul)(n,(0,c.cast)((0,c.greater)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}yu.className="ThresholdedReLU",c.serialization.registerClass(yu);class bu extends gi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Jo).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=si(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function xu(e,t,n){if("number"==typeof e)return na(e,t);if(e.length!==t)throw new Jr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new Jr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function vu(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function wu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Za([n-t,0]);else{if("same"!==r)throw new Jr(`Unsupport padding mode: ${r}.`);e*=t}return e}function ku(e,t){return(0,c.tidy)((()=>(Va(t),"channelsFirst"===t?c.transpose(e,[0,2,3,1]):e)))}function Iu(e,t){return(0,c.tidy)((()=>(Va(t),"channelsFirst"===t?c.transpose(e,[0,2,3,4,1]):e)))}function Su(e,t,n,r=[1,1],a="valid",s,i,o=null){return(0,c.tidy)((()=>{if(null==s&&(s="channelsLast"),Va(s),3!==e.rank&&4!==e.rank)throw new Jr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Jr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=ku(e,s);if("causal"===a)throw new ea("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=c.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=c.transpose(u,[0,3,1,2])),u}))}bu.className="Softmax",c.serialization.registerClass(bu);class Nu extends gi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Nu.verifyArgs(t),this.rank=e,ba(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ea(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=xu(t.kernelSize,e,"kernelSize"),this.strides=xu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Wa(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Va(this.dataFormat),this.activation=su(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=zs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ea(t.biasConstraint),this.biasRegularizer=pu(t.biasRegularizer),this.activityRegularizer=pu(t.activityRegularizer),this.dilationRate=xu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ra("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!ya(e.kernelSize,"number",1,3))throw new Jr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ru(this.activation),useBias:this.useBias,biasInitializer:Os(this.biasInitializer),biasRegularizer:cu(this.biasRegularizer),activityRegularizer:cu(this.activityRegularizer),biasConstraint:_a(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Tu extends Nu{constructor(e,t){super(e,t),this.kernel=null,Tu.verifyArgs(t),this.filters=t.filters,ba(this.filters,"filters"),this.kernelInitializer=zs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ea(t.kernelConstraint),this.kernelRegularizer=pu(t.kernelRegularizer)}build(e){e=ii(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,c.tidy)((()=>{let t;e=si(e);const n=null==this.bias?null:this.bias.read(),r=va(this.activation.getClassName());if(null!=r&&2===this.rank)t=Su(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return(0,c.tidy)((()=>{if(null==s&&(s="channelsLast"),Va(s),3!==e.shape.length)throw new Jr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Jr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=c.transpose(e,[0,2,1])),"causal"===a)throw new ea("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=c.conv1d(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=hs(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Su(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ea("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return(0,c.tidy)((()=>{if(null==s&&(s="channelsLast"),Va(s),4!==e.rank&&5!==e.rank)throw new Jr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Jr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Iu(e,s);if("causal"===a)throw new ea("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=c.conv3d(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=hs(o,n)),"channelsFirst"===s&&(o=c.transpose(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ii(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=vu(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Os(this.kernelInitializer),kernelRegularizer:cu(this.kernelRegularizer),kernelConstraint:_a(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Jr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Cu extends Tu{constructor(e){super(2,e),Cu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ya(e.kernelSize,"number",1,2))throw new Jr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Cu.className="Conv2D",c.serialization.registerClass(Cu);class _u extends Tu{constructor(e){super(3,e),_u.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Jr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}_u.className="Conv3D",c.serialization.registerClass(_u);class Au extends Cu{constructor(e){if(super(e),this.inputSpec=[new di({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ii(e)).length)throw new Jr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new di({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return c.tidy((()=>{let t=si(e);if(4!==t.shape.length)throw new Jr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],p=this.strides[1],h=[r,wu(i,d,u,this.padding),wu(o,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=c.transpose(t,[0,2,3,1]));let f=c.conv2dTranspose(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=c.transpose(f,[0,3,1,2])),null!=this.bias&&(f=hs(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=ii(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=wu(t[r],o,s,this.padding),t[a]=wu(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Au.className="Conv2DTranspose",c.serialization.registerClass(Au);class Eu extends _u{constructor(e){if(super(e),this.inputSpec=[new di({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Jr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ii(e)).length)throw new Jr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new di({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return c.tidy((()=>{let t=si(e);if(5!==t.shape.length)throw new Jr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],d=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],y=[r,wu(o,f,d,this.padding),wu(u,m,p,this.padding),wu(l,g,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=c.transpose(t,[0,2,3,4,1]));let b=c.conv3dTranspose(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=c.transpose(b,[0,4,1,2,3])),null!==this.bias&&(b=hs(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=ii(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=wu(t[r],l,i,this.padding),t[a]=wu(t[a],c,o,this.padding),t[s]=wu(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Eu.className="Conv3DTranspose",c.serialization.registerClass(Eu);class $u extends Tu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Jr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Jr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Jr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=pu(t.depthwiseRegularizer),this.depthwiseConstraint=Ea(t.depthwiseConstraint),this.pointwiseInitializer=zs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=pu(t.pointwiseRegularizer),this.pointwiseConstraint=Ea(t.pointwiseConstraint)}build(e){if((e=ii(e)).length<this.rank+2)throw new Jr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Jr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new di({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,c.tidy)((()=>{let t;if(e=si(e),1===this.rank)throw new ea("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=c.transpose(e,[0,2,3,1])),t=c.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=hs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=c.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Os(this.depthwiseInitializer),e.pointwiseInitializer=Os(this.pointwiseInitializer),e.depthwiseRegularizer=cu(this.depthwiseRegularizer),e.pointwiseRegularizer=cu(this.pointwiseRegularizer),e.depthwiseConstraint=_a(this.depthwiseConstraint),e.pointwiseConstraint=_a(this.pointwiseConstraint),e}}$u.className="SeparableConv";class Ru extends $u{constructor(e){super(2,e)}}Ru.className="SeparableConv2D",c.serialization.registerClass(Ru);class Fu extends Tu{constructor(e){super(1,e),Fu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!ya(e.kernelSize,"number",1,1))throw new Jr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Fu.className="Conv1D",c.serialization.registerClass(Fu);class Du extends gi{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,c.tidy)((()=>{if(e=si(e),"channelsLast"===this.dataFormat){const t=as(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return as(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=as(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return as(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Du.className="Cropping2D",c.serialization.registerClass(Du);class Mu extends gi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Va(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ga(Oa,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return c.tidy((()=>{let t=si(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=c.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?c.image.resizeNearestNeighbor(t,[e,r]):c.image.resizeBilinear(t,[e,r]);return c.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?c.image.resizeNearestNeighbor(t,[e,r]):c.image.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="UpSampling2D",c.serialization.registerClass(Mu);class Ou extends Nu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=zs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ea(e.depthwiseConstraint),this.depthwiseRegularizer=pu(e.depthwiseRegularizer)}build(e){if((e=ii(e)).length<4)throw new Jr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Jr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.tidy)((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return(0,c.tidy)((()=>{null==a&&(a="channelsLast"),Va(a);let i=ku(e,a);if(4!==e.rank)throw new Jr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Jr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=c.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=c.transpose(i,[0,3,1,2])),i}))}(e=si(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=hs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ii(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=vu(t,this.kernelSize[0],this.padding,this.strides[0]),s=vu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Os(this.depthwiseInitializer),e.depthwiseRegularizer=cu(this.depthwiseRegularizer),e.depthwiseConstraint=_a(this.depthwiseRegularizer),e}}function zu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Jr("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function Lu(e,t,n,r=!1,a,s,i=!1,o=!1){return c.tidy((()=>{const u=t.shape.length;if(u<3)throw new Jr(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Ja(2,u));if(t=c.transpose(t,l),null!=s)throw new ea("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=c.cast(c.cast(a,"bool"),"float32")).rank===u-1&&(a=c.expandDims(a,-1)),a=c.transpose(a,l)),r&&(t=c.reverse(t,0),null!=a&&(a=c.reverse(a,0)));const d=[];let p,h=n;const f=t.shape[0],m=c.unstack(t);let g,y;null!=a&&(g=c.unstack(a));for(let t=0;t<f;++t){const n=m[t],r=c.tidy((()=>e(n,h)));if(null==a)p=r[0],h=r[1];else{const e=c.tidy((()=>{const e=g[t],n=c.sub(c.onesLike(e),e);return{output:c.add(c.mul(r[0],e),c.mul(h[0],n)),newStates:h.map(((t,a)=>c.add(c.mul(r[1][a],e),c.mul(t,n))))}}));p=e.output,h=e.newStates}o&&d.push(p)}if(o){const e=1;y=c.stack(d,e)}return[p,y,h]}))}Ou.className="DepthwiseConv2D",c.serialization.registerClass(Ou);class Bu extends gi{constructor(e){let t;if(super(e),null==e.cell)throw new Jr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new ju({cells:e.cell}):e.cell,null==t.stateSize)throw new Jr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new di({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Ja(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ri(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return c.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ea("Constants support is not implemented in RNN yet.");ri(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new di({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!c.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Jr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new di({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,c.tidy)((()=>{if(!this.stateful)throw new Qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>c.zeros([n,e]))):this.states_=[c.zeros([n,this.cell.stateSize])];else if(null==e)c.dispose(this.states_),null!=this.keptStates&&(c.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>c.zeros([n,e]))):this.states_[0]=c.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):c.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!c.util.arraysEqual(r.shape,s))throw new Jr(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>c.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=zu(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new di({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof pi){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,c.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=si(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new Jr(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Lu(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d}))}getInitialState(e){return(0,c.tidy)((()=>{let t=c.zeros(e.shape);return t=c.sum(t,[1,2]),t=ts(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?os(t,[1,e]):t)):this.cell.stateSize>1?[os(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Bu.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=$i(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Bu.className="RNN",c.serialization.registerClass(Bu);class Pu extends gi{}class Vu extends Pu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ba(this.units,"units"),this.activation=su(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=pu(e.kernelRegularizer),this.recurrentRegularizer=pu(e.recurrentRegularizer),this.biasRegularizer=pu(e.biasRegularizer),this.kernelConstraint=Ea(e.kernelConstraint),this.recurrentConstraint=Ea(e.recurrentConstraint),this.biasConstraint=Ea(e.biasConstraint),this.dropout=Qa([1,Za([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,Za([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ii(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.tidy)((()=>{if(2!==(e=e).length)throw new Jr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>c.onesLike(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>c.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=ls(null!=s?c.mul(e,s):e,this.kernel.read()),null!=this.bias&&(a=hs(a,this.bias.read())),null!=i&&(n=c.mul(n,i));let o=c.add(a,ls(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),useBias:this.useBias,kernelInitializer:Os(this.kernelInitializer),recurrentInitializer:Os(this.recurrentInitializer),biasInitializer:Os(this.biasInitializer),kernelRegularizer:cu(this.kernelRegularizer),recurrentRegularizer:cu(this.recurrentRegularizer),biasRegularizer:cu(this.biasRegularizer),activityRegularizer:cu(this.activityRegularizer),kernelConstraint:_a(this.kernelConstraint),recurrentConstraint:_a(this.recurrentConstraint),biasConstraint:_a(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Vu.className="SimpleRNNCell",c.serialization.registerClass(Vu);class Wu extends Bu{constructor(e){e.cell=new Vu(e),super(e)}call(e,t){return(0,c.tidy)((()=>{null!=this.cell.dropoutMask&&(c.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Wu.className="SimpleRNN",c.serialization.registerClass(Wu);class Uu extends Pu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Jr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,ba(this.units,"units"),this.activation=su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=pu(e.kernelRegularizer),this.recurrentRegularizer=pu(e.recurrentRegularizer),this.biasRegularizer=pu(e.biasRegularizer),this.kernelConstraint=Ea(e.kernelConstraint),this.recurrentConstraint=Ea(e.recurrentConstraint),this.biasConstraint=Ea(e.biasConstraint),this.dropout=Qa([1,Za([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,Za([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ii(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,c.tidy)((()=>{if(2!==(e=e).length)throw new Jr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>c.onesLike(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>c.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=c.mul(e,a[0]));let l=ls(e,this.kernel.read());this.useBias&&(l=hs(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=c.mul(r,s[0]));const d=this.recurrentKernel.read(),[p,h]=c.split(d,[2*this.units,this.units],d.rank-1),f=ls(r,p),[m,g,y]=c.split(l,3,l.rank-1),[b,x]=c.split(f,2,f.rank-1);i=this.recurrentActivation.apply(c.add(m,b)),o=this.recurrentActivation.apply(c.add(g,x));const v=ls(c.mul(o,r),h);u=this.activation.apply(c.add(y,v));const w=c.add(c.mul(i,r),c.mul(c.add(1,c.neg(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),recurrentActivation:ru(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Os(this.kernelInitializer),recurrentInitializer:Os(this.recurrentInitializer),biasInitializer:Os(this.biasInitializer),kernelRegularizer:cu(this.kernelRegularizer),recurrentRegularizer:cu(this.recurrentRegularizer),biasRegularizer:cu(this.biasRegularizer),activityRegularizer:cu(this.activityRegularizer),kernelConstraint:_a(this.kernelConstraint),recurrentConstraint:_a(this.recurrentConstraint),biasConstraint:_a(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Uu.className="GRUCell",c.serialization.registerClass(Uu);class Hu extends Bu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Uu(e),super(e)}call(e,t){return(0,c.tidy)((()=>{null!=this.cell.dropoutMask&&(c.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Hu.className="GRU",c.serialization.registerClass(Hu);class Gu extends Pu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,ba(this.units,"units"),this.activation=su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=zs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=pu(e.kernelRegularizer),this.recurrentRegularizer=pu(e.recurrentRegularizer),this.biasRegularizer=pu(e.biasRegularizer),this.kernelConstraint=Ea(e.kernelConstraint),this.recurrentConstraint=Ea(e.recurrentConstraint),this.biasConstraint=Ea(e.biasConstraint),this.dropout=Qa([1,Za([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Qa([1,Za([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ii(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends bs{apply(t,r){const a=e.apply([n]),s=(new vs).apply([n]),i=e.apply([2*n]);return is(is(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,c.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Jr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>c.onesLike(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>c.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,d;0<this.dropout&&this.dropout<1&&(e=c.mul(e,s[0]));let p=ls(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=c.mul(r,i[0])),p=c.add(p,ls(r,this.recurrentKernel.read())),this.useBias&&(p=hs(p,this.bias.read()));const[h,f,m,g]=c.split(p,4,p.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(f),l=c.add(c.mul(u,a),c.mul(o,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const y=c.mul(d,this.activation.apply(l));return[y,y,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ru(this.activation),recurrentActivation:ru(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Os(this.kernelInitializer),recurrentInitializer:Os(this.recurrentInitializer),biasInitializer:Os(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:cu(this.kernelRegularizer),recurrentRegularizer:cu(this.recurrentRegularizer),biasRegularizer:cu(this.biasRegularizer),activityRegularizer:cu(this.activityRegularizer),kernelConstraint:_a(this.kernelConstraint),recurrentConstraint:_a(this.recurrentConstraint),biasConstraint:_a(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Gu.className="LSTMCell",c.serialization.registerClass(Gu);class qu extends Bu{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Gu(e),super(e)}call(e,t){return(0,c.tidy)((()=>{null!=this.cell.dropoutMask&&(c.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}qu.className="LSTM",c.serialization.registerClass(qu);class ju extends Pu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,c.tidy)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;ri(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ga(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push($i(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return li(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ci(t)}}function Xu(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>fs(t(),n),i=()=>ms(s,t,r);return!a||a<=1?c.keep(i().clone()):Array(a).fill(void 0).map(i).map((e=>c.keep(e.clone())))}ju.className="StackedRNNCells",c.serialization.registerClass(ju);class Ku extends Bu{constructor(e){if(e.unroll)throw new ea("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ea("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new di({ndim:5})]}call(e,t){return c.tidy((()=>{if(null!=this.cell.dropoutMask&&(c.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(c.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Jr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return c.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=c.zeros(a);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){c.tidy((()=>{if(!this.stateful)throw new Qr("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new Jr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>c.zeros(a))):this.states_=[c.zeros(a)];else if(null==e)c.dispose(this.states_),null!=this.keptStates&&(c.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>c.zeros(a))):this.states_[0]=c.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):c.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!c.util.arraysEqual(n.shape,r))throw new Jr(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>c.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=vu(u,r[0],a,s[0],i[0]),d=vu(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}Ku.className="ConvRNN2D";class Yu extends Gu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,ba(this.filters,"filters"),this.kernelSize=xu(n,2,"kernelSize"),this.kernelSize.forEach((e=>ba(e,"kernelSize"))),this.strides=xu(r||1,2,"strides"),this.strides.forEach((e=>ba(e,"strides"))),this.padding=a||"valid",Wa(this.padding),this.dataFormat=s||"channelsLast",Va(this.dataFormat),this.dilationRate=xu(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>ba(e,"dilationRate")))}build(e){var t;e=ii(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Jr(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends bs{apply(e,t){return ss([n.apply([r]),c.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return c.tidy((()=>{if(3!==e.length)throw new Jr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Xu({ones:()=>c.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?c.mul(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),d=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Xu({ones:()=>c.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let f=o(a,h,0),m=o(a,h,1),g=o(a,h,2),y=o(a,h,3);const[b,x,v,w]=c.split(this.kernel.read(),4,3),[k,I,S,N]=this.useBias?c.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,b,k,this.padding),l=this.inputConv(l,x,I,this.padding),d=this.inputConv(d,v,S,this.padding),p=this.inputConv(p,w,N,this.padding);const[T,C,_,A]=c.split(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,_),y=this.recurrentConv(y,A);const E=this.recurrentActivation.apply(c.add(u,f)),$=this.recurrentActivation.apply(c.add(l,m)),R=c.add(c.mul($,s),c.mul(E,this.activation.apply(c.add(d,g)))),F=c.mul(this.recurrentActivation.apply(c.add(p,y)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=c.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hs(a,n,this.dataFormat):a}recurrentConv(e,t){return c.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Yu.className="ConvLSTM2DCell",c.serialization.registerClass(Yu);class Qu extends Ku{constructor(e){const t=new Yu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Qu.className="ConvLSTM2D",c.serialization.registerClass(Qu);class Zu extends gi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ms((()=>fs(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Zu.className="Dropout",c.serialization.registerClass(Zu);class Ju extends Zu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ju.className="SpatialDropout1D",c.serialization.registerClass(Ju);class el extends gi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,ba(this.units,"units"),this.activation=su(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=zs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=zs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ea(e.kernelConstraint),this.biasConstraint=Ea(e.biasConstraint),this.kernelRegularizer=pu(e.kernelRegularizer),this.biasRegularizer=pu(e.biasRegularizer),this.activityRegularizer=pu(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ii(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ii(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e),r=va(this.activation.getClassName());let a;return null!=r?a=ls(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=ls(n,this.kernel.read()),null!=this.bias&&(a=hs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:ru(this.activation),useBias:this.useBias,kernelInitializer:Os(this.kernelInitializer),biasInitializer:Os(this.biasInitializer),kernelRegularizer:cu(this.kernelRegularizer),biasRegularizer:cu(this.biasRegularizer),activityRegularizer:cu(this.activityRegularizer),kernelConstraint:_a(this.kernelConstraint),biasConstraint:_a(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}el.className="Dense",c.serialization.registerClass(el);class tl extends gi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ii(e);for(const t of e.slice(1))if(null==t)throw new Jr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Ya(e,1)]}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);let n=si(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,c.transpose)(n,e)}return function(e){if(e.rank<=1)throw new Jr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Ya(e.shape,1)];return c.reshape(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}tl.className="Flatten",c.serialization.registerClass(tl);class nl extends gi{constructor(e){super(e),this.supportsMasking=!0,this.activation=su(e.activation)}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ru(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}nl.className="Activation",c.serialization.registerClass(nl);class rl extends gi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,c.tidy)((()=>{return e=si(e),t=e,n=this.n,(0,c.tidy)((()=>{if(2!==t.shape.length)throw new Jr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return os(ts(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}rl.className="RepeatVector",c.serialization.registerClass(rl);class al extends gi{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new Jr("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=Ya(e);if(null!==s){if(0===a||i%a!=0)throw new Jr(n);r[s]=i/a}else if(i!==a)throw new Jr(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,c.reshape)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}al.className="Reshape",c.serialization.registerClass(al);class sl extends gi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ja(1,e.dims.length+1);if(!c.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new di({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ii(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,c.transpose)(si(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}sl.className="Permute",c.serialization.registerClass(sl);class il extends gi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=si(e);return(0,c.any)((0,c.notEqual)(n,this.maskValue),-1)}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e),r=(0,c.any)((0,c.notEqual)(n,this.maskValue),-1,!0);return(0,c.mul)(n,(0,c.cast)(r,n.dtype))}))}}il.className="Masking",c.serialization.registerClass(il);class ol extends gi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ia(e.inputLength))}this.inputDim=e.inputDim,ba(this.inputDim,"inputDim"),this.outputDim=e.outputDim,ba(this.outputDim,"outputDim"),this.embeddingsInitializer=zs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=pu(e.embeddingsRegularizer),this.activityRegularizer=pu(e.activityRegularizer),this.embeddingsConstraint=Ea(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,c.tidy)((()=>this.maskZero?(e=si(e),(0,c.notEqual)(e,(0,c.zerosLike)(e))):null))}computeOutputShape(e){if(e=ii(e),null==this.inputLength)return[...e,this.outputDim];const t=ia(this.inputLength);if(t.length!==e.length-1)throw new Jr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new Jr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);let n=si(e);"int32"!==n.dtype&&(n=es(n,"int32"));const r=cs(this.embeddings.read(),(0,c.reshape)(n,[n.size]));return(0,c.reshape)(r,ii(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Os(this.embeddingsInitializer),embeddingsRegularizer:cu(this.embeddingsRegularizer),activityRegularizer:cu(this.activityRegularizer),embeddingsConstraint:_a(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ol.className="Embedding",c.serialization.registerClass(ol);class ul extends gi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ea}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new Jr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ii(e)]),(e=e).length<2)throw new Jr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=fa(t),t.length>1)throw new Jr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===fa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,c.tidy)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Za(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ts(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=c.reshape(r,[a].concat(Ya(e.slice(1))));i=c.transpose(i,[1,0]),i=c.reshape(i,s),t.push(i),n=!0}else if(e>1){const a=Ja(1,e).concat([0]);t.push(c.transpose(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=c.reshape(c.transpose(c.reshape(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Ja(0,a-1));r=c.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=fa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return c.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Jr("`mask` should be an Array");if(!Array.isArray(e))throw new Jr("`inputs` should be an Array");if(t.length!==e.length)throw new Jr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:c.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=c.logicalAnd(n,t[e]);return n}))}}class ll extends ul{constructor(e){super(e)}mergeFunction(e){return(0,c.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.add(t,e[n]);return t}))}}ll.className="Add",c.serialization.registerClass(ll);class cl extends ul{constructor(e){super(e)}mergeFunction(e){return(0,c.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.mul(t,e[n]);return t}))}}cl.className="Multiply",c.serialization.registerClass(cl);class dl extends ul{constructor(e){super(e)}mergeFunction(e){return(0,c.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=c.add(t,e[n]);return c.mul(1/e.length,t)}))}}dl.className="Average",c.serialization.registerClass(dl);class pl extends ul{constructor(e){super(e)}mergeFunction(e){return(0,c.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=c.maximum(t,e[n]);return t}))}}pl.className="Maximum",c.serialization.registerClass(pl);class hl extends ul{constructor(e){super(e)}mergeFunction(e){return(0,c.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=c.minimum(t,e[n]);return t}))}}hl.className="Minimum",c.serialization.registerClass(hl);class fl extends ul{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Jr("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(c.util.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new Jr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,c.tidy)((()=>ss(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Jr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Jr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Jr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Jr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return c.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(c.cast(c.onesLike(e[n]),"bool")):t[n].rank<e[n].rank?r.push(c.expandDims(t[n],-1)):r.push(t[n]);const a=c.concat(r,this.axis);return c.all(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function ml(e,t){for(;e<0;)e+=t;return e}fl.className="Concatenate",c.serialization.registerClass(fl);class gl extends ul{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){c.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ea("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Jr(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Jr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>ml(t,e[n].shape.length))):[ml(this.axes,n.shape.length),ml(this.axes,r.shape.length)],this.normalize&&(n=Ri(n,t[0]),r=Ri(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ea("batchDot is not implemented for tensors of 4D or higher rank yet");if(c.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),c.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ea("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return c.tidy((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=c.reshape(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=c.reshape(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?c.sum(c.mul(e,t),s[0]):c.sum(c.mul(c.transpose(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=c.matMul(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=c.squeeze(i,t)}return 1===i.shape.length&&(i=c.expandDims(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[ml(this.axes,e.length),ml(this.axes,t.length)],n}computeOutputShape(e){c.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ea("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}gl.className="Dot",c.serialization.registerClass(gl);class yl extends gi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e);return ms((()=>(0,c.add)(us(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}yl.className="GaussianNoise",c.serialization.registerClass(yl);class bl extends gi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t);const n=si(e);return this.rate>0&&this.rate<1?ms((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,c.mul)(n,us(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}bl.className="GaussianDropout",c.serialization.registerClass(bl);class xl extends gi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||si(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,c.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ms((()=>{const t=si(e),r=-1.7580993408473766;let a=(0,c.greaterEqual)((0,c.randomUniform)(n),this.rate);a=es(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=(0,c.add)((0,c.mul)(t,a),(0,c.mul)((0,c.add)(a,-1),r));return(0,c.add)((0,c.mul)(o,s),i)}),(()=>si(e)),t.training||!1)}return e}))}}function vl(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=c.batchNorm2d(e,t,n,r,a,s);else if(3===e.rank)i=c.batchNorm3d(e,t,n,r,a,s);else{if(4!==e.rank)throw new ea(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=c.batchNorm4d(e,t,n,r,a,s)}return i}xl.className="AlphaDropout",c.serialization.registerClass(xl);class wl extends gi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.movingMeanInitializer=zs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=zs(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ea(e.betaConstraint),this.gammaConstraint=Ea(e.gammaConstraint),this.betaRegularizer=pu(e.betaRegularizer),this.gammaRegularizer=pu(e.gammaRegularizer)}build(e){e=ii(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Jr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new di({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,c.tidy)((()=>{const n=null!=t.training&&t.training,r=si(e),a=r.shape,s=a.length,i=Ja(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=na(1,s);u[o]=a[o];const l=i.slice();l.sort();const d=!c.util.arraysEqual(l,Ja(0,s).slice(0,s-1));if(!n)return(()=>{if(d){const e=(0,c.reshape)(this.movingMean.read(),u),t=(0,c.reshape)(this.movingVariance.read(),u),n=this.center?(0,c.reshape)(this.beta.read(),u):null,a=this.scale?(0,c.reshape)(this.gamma.read(),u):null;return vl(r,e,t,n,a,this.epsilon)}return vl(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,f]=function(e,t,n,r,a=.001){return c.util.arraysEqual(r.slice().sort(),Ja(0,e.rank-1))?function(e,t,n,r,a=.001){return(0,c.tidy)((()=>{const s=c.moments(e,r),i=s.mean,o=s.variance;return[vl(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return(0,c.tidy)((()=>{const s=c.moments(e,r),i=s.mean,o=s.variance,u=[];for(const t of Ja(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,c.reshape)(i,u),d=(0,c.reshape)(o,u),p=null==t?null:(0,c.reshape)(t,u),h=null==n?null:(0,c.reshape)(n,u);return[vl(e,l,d,h,p,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),m=(e,t,n)=>{c.tidy((()=>{const r=1-n,a=e.read(),s=c.mul(c.sub(a,t),r);e.write(c.sub(a,s))}))};return(()=>{m(this.movingMean,h,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Os(this.betaInitializer),gammaInitializer:Os(this.gammaInitializer),movingMeanInitializer:Os(this.movingMeanInitializer),movingVarianceInitializer:Os(this.movingVarianceInitializer),betaRegularizer:cu(this.betaRegularizer),gammaRegularizer:cu(this.gammaRegularizer),betaConstraint:_a(this.betaConstraint),gammaConstraint:_a(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}wl.className="BatchNormalization",c.serialization.registerClass(wl);class kl extends gi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=zs(e.betaInitializer||"zeros"),this.gammaInitializer=zs(e.gammaInitializer||"ones"),this.betaRegularizer=pu(e.betaRegularizer),this.gammaRegularizer=pu(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ii(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==fa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=si(e),r=n.shape,a=r.length;return(0,c.tidy)((()=>{let{mean:e,variance:t}=(0,c.moments)(n,this.axis,!0);const s=na(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?c.reshape(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],d=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),d.push(1)):(l.push(1),d.push(r[e]));return e=c.tile(e,l),t=c.tile(t,l),o=c.tile(o,d),u=c.tile(u,d),vl(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Os(this.betaInitializer),gammaInitializer:Os(this.gammaInitializer),betaRegularizer:cu(this.betaRegularizer),gammaRegularizer:cu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}kl.className="LayerNormalization",c.serialization.registerClass(kl);class Il extends gi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Jr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Jr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Jr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){let t,n;return e=ii(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,c.tidy)((()=>{return t=si(e),n=this.padding,r=this.dataFormat,(0,c.tidy)((()=>{if(4!==t.rank)throw new Jr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Jr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Jr(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],c.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Sl(e,t,n,r,a,s){return(0,c.tidy)((()=>{let i;Va(a),Ua(s),Wa(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=ku(e,a);const o="same"===r?"same":"valid";return i="max"===s?c.maxPool(e,t,n,o):c.avgPool(e,t,n,o),"channelsFirst"===a&&(i=c.transpose(i,[0,3,1,2])),i}))}function Nl(e,t,n,r,a,s){return(0,c.tidy)((()=>{let i;Va(a),Ua(s),Wa(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Iu(e,a);const o="same"===r?"same":"valid";return i="max"===s?c.maxPool3d(e,t,n,o):c.avgPool3d(e,t,n,o),"channelsFirst"===a&&(i=c.transpose(i,[0,4,1,2,3])),i}))}Il.className="ZeroPadding2D",c.serialization.registerClass(Il);class Tl extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Jr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(ba(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Jr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}ba(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Wa(this.padding),this.inputSpec=[new di({ndim:3})]}computeOutputShape(e){const t=vu((e=ii(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,c.tidy)((()=>{this.invokeCallHook(e,t),e=ts(si(e),2);const n=this.poolingFunction(si(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return c.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Cl extends Tl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Sl(e,t,n,r,a,"max")}}Cl.className="MaxPooling1D",c.serialization.registerClass(Cl);class _l extends Tl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Sl(e,t,n,r,a,"avg")}}_l.className="AveragePooling1D",c.serialization.registerClass(_l);class Al extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Jr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];ba(this.poolSize,"poolSize"),ba(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Va(this.dataFormat),Wa(this.padding),this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){e=ii(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=vu(t,this.poolSize[0],this.padding,this.strides[0]),n=vu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,c.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(si(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class El extends Al{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Sl(e,t,n,r,a,"max")}}El.className="MaxPooling2D",c.serialization.registerClass(El);class $l extends Al{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Sl(e,t,n,r,a,"avg")}}$l.className="AveragePooling2D",c.serialization.registerClass($l);class Rl extends gi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Jr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];ba(this.poolSize,"poolSize"),ba(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Va(this.dataFormat),Wa(this.padding),this.inputSpec=[new di({ndim:5})]}computeOutputShape(e){e=ii(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=vu(t,this.poolSize[0],this.padding,this.strides[0]),n=vu(n,this.poolSize[1],this.padding,this.strides[1]),r=vu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,c.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(si(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fl extends Rl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Nl(e,t,n,r,a,"max")}}Fl.className="MaxPooling3D",c.serialization.registerClass(Fl);class Dl extends Rl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Va(a),Wa(r),Nl(e,t,n,r,a,"avg")}}Dl.className="AveragePooling3D",c.serialization.registerClass(Dl);class Ml extends gi{constructor(e){super(e),this.inputSpec=[new di({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ea}}class Ol extends Ml{constructor(e){super(e||{})}call(e,t){return(0,c.tidy)((()=>{const t=si(e);return c.mean(t,1)}))}}Ol.className="GlobalAveragePooling1D",c.serialization.registerClass(Ol);class zl extends Ml{constructor(e){super(e||{})}call(e,t){return(0,c.tidy)((()=>{const t=si(e);return c.max(t,1)}))}}zl.className="GlobalMaxPooling1D",c.serialization.registerClass(zl);class Ll extends gi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Va(this.dataFormat),this.inputSpec=[new di({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ea}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bl extends Ll{call(e,t){return(0,c.tidy)((()=>{const t=si(e);return"channelsLast"===this.dataFormat?c.mean(t,[1,2]):c.mean(t,[2,3])}))}}Bl.className="GlobalAveragePooling2D",c.serialization.registerClass(Bl);class Pl extends Ll{call(e,t){return(0,c.tidy)((()=>{const t=si(e);return"channelsLast"===this.dataFormat?c.max(t,[1,2]):c.max(t,[2,3])}))}}Pl.className="GlobalMaxPooling2D",c.serialization.registerClass(Pl);class Vl extends gi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=$i(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Wl extends Vl{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ii(e)).length<3)throw new Jr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ii(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,c.tidy)((()=>Lu(((e,n)=>[si(this.layer.call(e,t)),[]]),e=si(e),[],!1,null,null,!1,!0)[1]))}}Wl.className="TimeDistributed",c.serialization.registerClass(Wl);class Ul extends Vl{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=$i(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=$i(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,ga(Ba,"BidirectionalMergeMode",a),e.weights)throw new ea("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):sa(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=zu(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Jr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new di({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ea("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof pi;for(const e of s)if(e instanceof pi!==o)throw new Jr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,c.tidy)((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=c.reverse(a,1)),"concat"===this.mergeMode?i=ss([r,a]):"sum"===this.mergeMode?i=c.add(r,a):"ave"===this.mergeMode?i=c.mul(.5,c.add(r,a)):"mul"===this.mergeMode?i=c.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ga(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ga(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=$i(t.layer);if(delete t.layer,null!=t.numConstants)throw new ea("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Hl(e){return new bi(e)}function Gl(e){return new gu(e)}function ql(e){return new hu(e)}function jl(e){return new fu(e)}function Xl(e){return new mu(e)}function Kl(e){return new bu(e)}function Yl(e){return new yu(e)}function Ql(e){return new Fu(e)}function Zl(e){return new Cu(e)}function Jl(e){return new Au(e)}function ec(e){return new _u(e)}function tc(e){return new Eu(e)}function nc(e){return new Ru(e)}function rc(e){return new Du(e)}function ac(e){return new Mu(e)}function sc(e){return new Ou(e)}function ic(e){return new nl(e)}function oc(e){return new el(e)}function uc(e){return new Zu(e)}function lc(e){return new Ju(e)}function cc(e){return new tl(e)}function dc(e){return new rl(e)}function pc(e){return new al(e)}function hc(e){return new sl(e)}function fc(e){return new ol(e)}function mc(e){return new ll(e)}function gc(e){return new dl(e)}function yc(e){return new fl(e)}function bc(e){return new pl(e)}function xc(e){return new hl(e)}function vc(e){return new cl(e)}function wc(e){return new gl(e)}function kc(e){return new wl(e)}function Ic(e){return new kl(e)}function Sc(e){return new Il(e)}function Nc(e){return new _l(e)}function Tc(e){return Nc(e)}function Cc(e){return Nc(e)}function _c(e){return new $l(e)}function Ac(e){return _c(e)}function Ec(e){return _c(e)}function $c(e){return new Dl(e)}function Rc(e){return $c(e)}function Fc(e){return $c(e)}function Dc(e){return new Ol(e)}function Mc(e){return new Bl(e)}function Oc(e){return new zl(e)}function zc(e){return new Pl(e)}function Lc(e){return new Cl(e)}function Bc(e){return new El(e)}function Pc(e){return new Fl(e)}function Vc(e){return new Hu(e)}function Wc(e){return new Uu(e)}function Uc(e){return new qu(e)}function Hc(e){return new Gu(e)}function Gc(e){return new Wu(e)}function qc(e){return new Vu(e)}function jc(e){return new Qu(e)}function Xc(e){return new Yu(e)}function Kc(e){return new Bu(e)}function Yc(e){return new ju(e)}function Qc(e){return new Ul(e)}function Zc(e){return new Wl(e)}Ul.className="Bidirectional",c.serialization.registerClass(Ul);const Jc=Oc,ed=zc,td=Lc,nd=Bc;function rd(e){return new yl(e)}function ad(e){return new bl(e)}function sd(e){return new xl(e)}function id(e){return new il(e)}function od(e,t){return Wi(e,t)}function ud(e,t){return qi(e,t)}function ld(e,t){return ji(e,t)}function cd(e,t){return Ui(e,t)}function dd(e,t){return Xi(e,t)}function pd(e,t){return Gi(e,t)}function hd(e,t){return function(e,t){return(0,c.tidy)((()=>{const n=Hi(e,t),r=function(e,t){return(0,c.tidy)((()=>c.cast(c.sum(c.logicalAnd(c.equal(e,1),c.equal(t,0))),"float32")))}(e,t),a=c.add(n,r);return c.cast(c.where(c.greater(a,0),c.div(n,a),0),"float32")}))}(e,t)}function fd(e,t){return Bi(e,t)}function md(e,t){return Di(e,t)}function gd(e,t){return Mi(e,t)}function yd(e,t){return Mi(e,t)}function bd(e,t){return Mi(e,t)}function xd(e,t){return Fi(e,t)}function vd(e,t){return Fi(e,t)}function wd(e,t){return Fi(e,t)}function kd(e){return new uu(e)}function Id(e){return iu(t=e),new uu({l1:null!=t?t.l1:null,l2:0});var t}function Sd(e){return iu(t=e),new uu({l2:null!=t?t.l2:null,l1:0});var t}class Nd extends Ii{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Fo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Td(e,t){return e<t}function Cd(e,t){return e>t}class _d extends Nd{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new ea("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Td:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=Cd:this.monitorFunc=Td,this.monitorFunc===Td&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Td?1/0:-1/0}async onEpochEnd(e,t){await vi(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Ad={earlyStopping:function(e){return new _d(e)}};var Ed,$d=n(4933),Rd=n(6377);function Fd(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Ld(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Fd(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Dd(e,t=Od){return Md(e,t)}function Md(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Ld(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Md(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Od(e){return null===e?null:Ld(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function zd(e,t){const n=new Map;Fd(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(c.util.isPromise(t)){const r=await t;n.set(e,r)}}return Fd(e,t,n)}function Ld(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof c.Tensor))}function Bd(e){return e instanceof c.Tensor?{value:e.clone(),recurse:!1}:Ld(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Pd{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Vd extends Pd{constructor(){super(Vd.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Wd(e){return new Gd(e)}function Ud(e){return new qd(e)}Vd.INITIAL_CAPACITY=32;class Hd{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Jd(this,e)}filter(e){return new Qd(this,e)}map(e){return new Zd(this,e)}mapAsync(e){return new ep(this,e)}serialMapAsync(e){return new ep(this,e).serial()}flatmap(e){return new np(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new Yd(this,e,t)}columnMajorBatch(e,t=!0,n=Od){return this.rowMajorBatch(e,t).map((e=>Dd(e,n)))}concatenate(e,t){return new rp(Wd([this,e]),t)}take(e){return e<0||null==e?this:new Kd(this,e)}skip(e){return e<0||null==e?this:new Xd(this,e)}prefetch(e){return new sp(this,e)}shuffle(e,t){return new ip(this,e,t)}serial(){return new jd(this)}}class Gd extends Hd{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return Fd(e,t)}(t,Bd)),done:!1};var t}}class qd extends Hd{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class jd extends Hd{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Xd extends Hd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;c.dispose(e.value)}return this.upstream.next()}}class Kd extends Hd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class Yd extends Hd{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Qd extends Hd{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;c.dispose(e.value)}}}class Zd extends Hd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=c.tensor_util.getTensorsInContainer(n);for(const e of t)c.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class Jd extends Hd{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class ep extends Hd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=c.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=c.tensor_util.getTensorsInContainer(n);for(const e of t)c.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class tp extends Hd{constructor(){super(),this.outputQueue=new Vd,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class np extends tp{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=c.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=c.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)c.tensor_util.isTensorInList(e,r)||e.dispose();return!0}}class rp extends Hd{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(Ed||(Ed={}));class ap extends Hd{constructor(e,t=Ed.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await zd(this.iterators,(function(e){return e instanceof Hd?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case Ed.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case Ed.SHORTEST:return{value:null,done:!0};case Ed.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class sp extends Hd{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Pd(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class ip extends sp{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Rd.alea(n||c.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class op{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return c.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),up((async()=>(await n.iterator()).columnMajorBatch(e,t,dp)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,up((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,up((async()=>(await t.iterator()).filter((t=>c.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return up((async()=>(await t.iterator()).map((t=>c.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return up((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return up((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,up((async()=>{return n=Ud((async()=>({value:await t.iterator(),done:!1}))).take(e),new rp(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,up((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Rd.alea(t||c.util.now().toString());return up((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,up((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function up(e,t=null){return new class extends op{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function lp(e){return up((async()=>Wd(e)),e.length)}function cp(e){if(!Ld(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return up((async()=>function(e,t=Ed.FAIL){return new ap(e,t)}(await zd(e,(e=>{if(e instanceof op)return{value:e.iterator(),recurse:!1};if(Ld(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),Ed.SHORTEST)),t)}function dp(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof c.Tensor||c.util.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof c.Tensor?c.stack(e):c.tensor(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}op.MAX_BUFFER_SIZE=1e4;class pp extends op{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const hp='"',fp=Symbol("out"),mp=Symbol("field"),gp=Symbol("quote"),yp=Symbol("quoteafterquote"),bp=Symbol("quoteinquote");class xp extends op{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new pp(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(c.util.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&c.util.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(c.util.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=fp;for(let t=0;t<a;t++)switch(s){case fp:switch(e.charAt(t)){case hp:r=t+1,s=gp;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=fp;break;default:s=mp,r=t}break;case mp:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=fp,r=t+1}break;case gp:switch(e.charAt(t)){case hp:s=yp}break;case yp:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=fp,r=t+1;break;case hp:s=gp;break;default:s=bp}break;case bp:switch(e.charAt(t)){case hp:s=gp}}if(s===yp?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class vp extends Hd{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if((0,c.env)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new vp(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(c.util.sizeFromShape(t));return n.set(e,n.length-e.length),(0,c.tensor)(n,t)}}class wp extends Hd{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,c.tensor1d)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=(0,c.tensor2d)([r,n,s,a],[1,4])}else this.cropBox=(0,c.tensor2d)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if((0,c.env)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new wp(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&c.util.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=c.browser.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,c.tidy)((()=>{const t=(0,c.expandDims)((0,c.cast)(e,"float32"),0);let n;n=c.image.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return(0,c.reshape)(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class kp{}class Ip extends Hd{split(e){return new Sp(this,e)}}class Sp extends Ip{constructor(e,t){super(),this.upstream=e,this.impl=new Np(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Np extends tp{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class Tp extends Hd{decodeUTF8(){return new Cp(this)}}class Cp extends Ip{constructor(e){super(),this.upstream=e,this.impl=new _p(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class _p extends tp{constructor(e){if(super(),this.upstream=e,(0,c.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(1601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,c.env)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class Ap extends Tp{constructor(e,t={}){super(),this.file=e,this.options=t,c.util.assert(e instanceof Uint8Array||!!(0,c.env)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}}function Ep(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class $p extends kp{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Ep(this.input)&&(0,c.env)().get("IS_NODE")){const e=n(7792);this.input=e.readFileSync(this.input.substr(7))}return new Ap(this.input,this.options)}}class Rp extends kp{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Ep(this.url)?new $p(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var a;"string"==typeof e?n=e:(n=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const s=await c.util.fetch(n,r);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new Ap(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}}function Fp(e,t={}){return new xp(new Rp(e),t)}function Dp(e){const t=Ud(e);return up((async()=>t))}function Mp(e){return up((async()=>{const t=await e();return Ud((()=>t.next()))}))}async function Op(e,t){return wp.create(e,t)}async function zp(e){return vp.create(e)}const Lp="3.8.0";var Bp=n(8166);const Pp=c.kernel_impls.whereImpl;class Vp extends c.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new c.DataStorage(this,(0,c.engine)())}nextDataId(){return Vp.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,c.env)().get("IS_NODE")&&c.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&c.util.isString(n[0])){const a=n.map((e=>c.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return c.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>c.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,c.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return(0,c.engine)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=c.util.now();return e(),{kernelMs:c.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,Bp.H)([e],"where");const t=this.readSync(e.dataId);return Pp(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Vp.nextDataId=0,(0,c.registerBackend)("cpu",(()=>new Vp),1);var Wp=n(6738);const Up=(0,Wp.A)(c.Elu,(e=>e>=0?e:Math.exp(e)-1)),Hp={kernelName:c.Elu,backendName:"cpu",kernelFunc:Up};var Gp=n(1775);function qp(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;(0,Bp.H)([a],"leakyRelu");const i=c.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=c.util.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const jp={kernelName:c.LeakyRelu,backendName:"cpu",kernelFunc:qp};var Xp=n(3533);const Kp=(0,Xp.b)(((e,t)=>e<0?t*e:e));function Yp(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;(0,Bp.H)([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Kp(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const Qp={kernelName:c.Prelu,backendName:"cpu",kernelFunc:Yp},Zp=(0,Wp.A)(c.Relu,(e=>Math.max(0,e))),Jp={kernelName:c.Relu,backendName:"cpu",kernelFunc:Zp},eh=(0,Wp.A)(c.Relu6,(e=>Math.min(Math.max(0,e),6))),th={kernelName:c.Relu6,backendName:"cpu",kernelFunc:eh},nh=(0,Wp.A)(c.Sigmoid,(e=>1/(1+Math.exp(-e)))),rh={kernelName:c.Sigmoid,backendName:"cpu",kernelFunc:nh};function ah(e,t,n,r,a){if("linear"===n)return(0,Gp.y)({inputs:{x:t},backend:e});if("relu"===n)return Zp({inputs:{x:t},backend:e});if("elu"===n)return Up({inputs:{x:t},backend:e});if("relu6"===n)return eh({inputs:{x:t},backend:e});if("prelu"===n)return Yp({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return qp({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return nh({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var sh=n(2779);function ih(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=c.util.sizeFromShape(a.shape),o=c.util.inferFromImplicitShape(s,i),u=c.util.sizeFromShape(o);c.util.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const oh={kernelName:c.Reshape,backendName:"cpu",kernelFunc:ih};function uh(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;(0,Bp.H)([a,s],"matMul");const u=a.shape.length,l=s.shape.length,d=i?a.shape[u-2]:a.shape[u-1],p=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],f=o?s.shape[l-2]:s.shape[l-1],m=a.shape.slice(0,-2),g=s.shape.slice(0,-2),y=c.util.sizeFromShape(m),b=c.util.sizeFromShape(g),x=y===b||1===y||1===b;c.util.assert(u>=2&&l>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const v=(y>b?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,f]);c.util.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[b,f,p]:[b,p,f],k=ih({inputs:{x:a},backend:n,attrs:{shape:i?[y,d,h]:[y,h,d]}}),I=ih({inputs:{x:s},backend:n,attrs:{shape:w}}),S=i?k.shape[1]:k.shape[2],N=i?k.shape[2]:k.shape[1],T=o?I.shape[1]:I.shape[2],C=Math.max(y,b),_=n.data.get(k.dataId).values,A=n.data.get(I.dataId).values,E=c.util.computeStrides(k.shape),$=c.util.computeStrides(I.shape),[R,F,D]=i?[E[0],1,E[1]]:[E[0],E[1],1],[M,O,z]=o?[1,$[1],$[0]]:[$[1],1,$[0]],L=N*T,B=(0,c.buffer)([C,N,T],k.dtype),P=B.values,V=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=V)for(let n=0;n<T;n+=V)for(let r=0;r<S;r+=V){const a=Math.min(t+V,N),s=Math.min(n+V,T),i=Math.min(r+V,S);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,y-1)*R,s=Math.min(e,b-1)*z;n+=_[r+o*F+a*D]*A[a*M+t*O+s]}P[e*L+(o*T+t)]+=n}}return n.disposeIntermediateTensorInfo(k),n.disposeIntermediateTensorInfo(I),n.makeTensorInfo(v,B.dtype,B.values)}const lh={kernelName:c.BatchMatMul,backendName:"cpu",kernelFunc:uh},ch={kernelName:c._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let p,h,f;const m=[];p=uh({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(h=(0,sh.IH)({inputs:{a:p,b:i},backend:n}),m.push(p),p=h),c&&(f=ah(n,p,c,o,d),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};var dh=n(224);const ph=(0,Wp.A)(c.Acos,(e=>Math.acos(e))),hh={kernelName:c.Acos,backendName:"cpu",kernelFunc:ph},fh=(0,Wp.A)(c.Acosh,(e=>Math.acosh(e))),mh={kernelName:c.Acosh,backendName:"cpu",kernelFunc:fh},gh={kernelName:c.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;(0,Bp.H)(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=(0,c.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var yh=n(4802);const bh={kernelName:c.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,Bp.H)(a,"all");const o=c.util.parseAxisParam(s,a.shape);let u=o;const l=c.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=l&&(d=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=c.backend_util.getInnerMostAxes(u.length,a.shape.length)),c.backend_util.assertAxesAreInnerMostDims("all",u,d.shape.length);const[p,h]=c.backend_util.computeOutAndReduceShapes(d.shape,u),f=c.util.sizeFromShape(h),m=c.util.makeZerosTypedArray(c.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n&&r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(i){const e=ih({inputs:{x:y},backend:n,attrs:{shape:c.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},xh={kernelName:c.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,Bp.H)(a,"any");const o=c.util.parseAxisParam(s,a.shape);let u=o;const l=c.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=l&&(d=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=c.backend_util.getInnerMostAxes(u.length,a.shape.length)),c.backend_util.assertAxesAreInnerMostDims("any",u,d.shape.length);const[p,h]=c.backend_util.computeOutAndReduceShapes(d.shape,u),f=c.util.sizeFromShape(h),m=c.util.makeZerosTypedArray(c.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];n=n||r}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(i){const e=ih({inputs:{x:y},backend:n,attrs:{shape:c.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}},vh={kernelName:c.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;(0,Bp.H)(a,"argMax");let i=c.util.parseAxisParam(s,a.shape);const o=c.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=c.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],c.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[d,p]=c.backend_util.computeOutAndReduceShapes(u.shape,i),h=c.util.sizeFromShape(d),f=c.util.makeZerosTypedArray(h,"int32"),m=c.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a>n&&(n=a,r=e)}f[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},wh={kernelName:c.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;(0,Bp.H)(a,"argMin");let i=c.util.parseAxisParam(s,a.shape);const o=c.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=c.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],c.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[d,p]=c.backend_util.computeOutAndReduceShapes(u.shape,i),h=c.util.sizeFromShape(d),f=c.util.makeZerosTypedArray(h,"int32"),m=c.util.sizeFromShape(p),g=n.data.get(u.dataId).values;for(let e=0;e<f.length;++e){const t=e*m;let n=g[t],r=0;for(let e=0;e<m;++e){const a=g[t+e];a<n&&(n=a,r=e)}f[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(d,"int32",f)}},kh=(0,Wp.A)(c.Asin,(e=>Math.asin(e))),Ih={kernelName:c.Asin,backendName:"cpu",kernelFunc:kh},Sh=(0,Wp.A)(c.Asinh,(e=>Math.asinh(e))),Nh={kernelName:c.Asinh,backendName:"cpu",kernelFunc:Sh},Th=(0,Wp.A)(c.Atan,(e=>Math.atan(e))),Ch={kernelName:c.Atan,backendName:"cpu",kernelFunc:Th};var _h=n(6205);const Ah=(0,Xp.b)(((e,t)=>Math.atan2(e,t))),Eh=(0,_h.j)(c.Atan2,Ah),$h={kernelName:c.Atan2,backendName:"cpu",kernelFunc:Eh},Rh=(0,Wp.A)(c.Atanh,(e=>Math.atanh(e))),Fh={kernelName:c.Atanh,backendName:"cpu",kernelFunc:Rh};function Dh(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,d=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.top,f=a.padInfo.left,m="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=(0,c.buffer)(a.outShape,n),y=g.values,b=a.outShape[1]*a.outShape[2]*a.outShape[3],x=a.outShape[2]*a.outShape[3],v=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*b,c=t*r[0];for(let t=0;t<a.inChannels;++t)for(let g=0;g<a.outHeight;++g){const b=g*i-h,w=Math.max(0,b),k=Math.min(a.inHeight,d+b),I=n+g*x;for(let n=0;n<a.outWidth;++n){const i=n*o-f,d=Math.max(0,i),h=Math.min(a.inWidth,p+i);let g=m,b=0,x=0;for(let n=w;n<k;n+=u){const a=c+n*r[1];for(let n=d;n<h;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>g?g=i:"avg"===s&&(b+=i,x++)}if(isNaN(g))break}y[I+n*v+t]="avg"===s?b/x:g}}}return g}function Mh(e,t,n,r,a=!1,s=!1){const i=(0,c.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,d=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,f=r.padInfo.top,m=r.padInfo.left,g=(0,c.buffer)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const c=n*o-f;let y=c;for(;y<0;)y+=l;const b=Math.min(r.inHeight,p+c);for(let o=0;o<r.outWidth;++o){const p=o*u-m;let f=p;for(;f<0;)f+=d;const x=Math.min(r.inWidth,h+p);let v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=l){const i=n-c;for(let o=f;o<x;o+=d){const u=o-p,l=g.get(e,n,o,t);l>v&&(v=l,w=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(w,e,n,o,t)}}return i}function Oh(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,d=a.dilationHeight,p=a.dilationWidth,h=a.effectiveFilterDepth,f=a.effectiveFilterHeight,m=a.effectiveFilterWidth,g=a.padInfo.front,y=a.padInfo.top,b=a.padInfo.left,x="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=(0,c.buffer)(a.outShape,n),w=v.values,k=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[2]*a.outShape[3]*a.outShape[4],S=a.outShape[3]*a.outShape[4],N=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*k,c=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const k=v*i-g;let T=k;for(;T<0;)T+=l;const C=Math.min(a.inDepth,h+k),_=n+v*I;for(let n=0;n<a.outHeight;++n){const i=n*o-y;let h=i;for(;h<0;)h+=d;const g=Math.min(a.inHeight,f+i),v=_+n*S;for(let n=0;n<a.outWidth;++n){const i=n*u-b;let o=i;for(;o<0;)o+=p;const f=Math.min(a.inWidth,m+i),y=v+n*N;let k=x,I=0,S=0;for(let n=T;n<C;n+=l){const a=c+n*r[1];for(let n=h;n<g;n+=d){const i=a+n*r[2];for(let n=o;n<f;n+=p){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[y+t]="avg"===s?I/S:k}}}}return v}const zh={kernelName:c.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;(0,Bp.H)(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;c.util.assert(c.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=c.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&c.util.arraysEqual(l.inShape,l.outShape))d=(0,Gp.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=c.util.computeStrides(a.shape),r=Dh(e,a.shape,a.dtype,t,l,"avg");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}},Lh={kernelName:c.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,Bp.H)(a,"avgPool3d");const d=c.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,l),p=Oh(n.data.get(a.dataId).values,a.shape,a.dtype,c.util.computeStrides(a.shape),d,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},Bh={kernelName:c.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,Bp.H)([a,s],"avgPool3DGrad");const d=c.backend_util.computePool3DInfo(s.shape,i,o,1,u,l),p=d.strideDepth,h=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=d.dilationDepth,x=d.dilationHeight,v=d.dilationWidth,w=d.effectiveFilterDepth,k=d.effectiveFilterHeight,I=d.effectiveFilterWidth,S=w-1-d.padInfo.front,N=I-1-d.padInfo.left,T=k-1-d.padInfo.top,C=(0,c.buffer)(s.shape,"float32"),_=1/(m*g*y),A=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-S,i=r-T,o=a-N;let u=0;for(let n=0;n<w;n+=b){const r=(s+n)/p;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(i+n)/h;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let n=0;n<I;n+=v){const s=(o+n)/f;s<0||s>=d.outWidth||Math.floor(s)!==s||(u+=A.get(e,r,a,s,t))}}}C.set(u*_,e,n,r,a,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}},Ph={kernelName:c.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;(0,Bp.H)([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,d=c.backend_util.computePool2DInfo(i.shape,o,u,1,l),p=d.strideHeight,h=d.strideWidth,f=d.filterHeight,m=d.filterWidth,g=d.dilationHeight,y=d.dilationWidth,b=d.effectiveFilterHeight,x=d.effectiveFilterWidth,v=x-1-d.padInfo.left,w=b-1-d.padInfo.top,k=(0,c.buffer)(i.shape,"float32"),I=1/(f*m),S=n.data.get(a.dataId).values,N=(0,c.buffer)(a.shape,"float32",S);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let r=0;r<d.inWidth;++r){const a=n-w,s=r-v;let i=0;for(let n=0;n<b;n+=g){const r=(a+n)/p;if(!(r<0||r>=d.outHeight||Math.floor(r)!==r))for(let n=0;n<x;n+=y){const a=(s+n)/h;a<0||a>=d.outWidth||Math.floor(a)!==a||(i+=N.get(e,r,a,t))}}k.set(i*I,e,n,r,t)}return n.makeTensorInfo(k.shape,k.dtype,k.values)}},Vh={kernelName:c.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;c.util.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),c.util.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),c.util.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,Bp.H)([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const d=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,f=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),g=new Float32Array(d.length),y=m.length,b=f.length,x=h.length,v=p.length;let w=0,k=0,I=0,S=0;for(let e=0;e<d.length;++e)g[e]=m[w++]+(d[e]-p[k++])*f[I++]/Math.sqrt(h[S++]+l),w>=y&&(w=0),k>=v&&(k=0),I>=b&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(a.shape,a.dtype,g)}};var Wh=n(2578);const Uh={kernelName:c.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;(0,Bp.H)([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=c.backend_util.getReshaped(a.shape,s,o),l=c.backend_util.getPermuted(u.length,s.length),d=c.backend_util.getReshapedPermuted(a.shape,s,o),p=c.backend_util.getSliceBeginCoords(i,s.length),h=c.backend_util.getSliceSize(d,i,s.length),f=ih({inputs:{x:a},backend:n,attrs:{shape:u}}),m=(0,yh.p)({inputs:{x:f},backend:n,attrs:{perm:l}}),g=ih({inputs:{x:m},backend:n,attrs:{shape:d}}),y=(0,Wh.tP)({inputs:{x:g},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}};var Hh=n(8607);const Gh={kernelName:c.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=(0,Hh.W)(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}};var qh=n(9258),jh=n(4769);const Xh=(0,Wp.A)(c.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),Kh={kernelName:c.ClipByValue,backendName:"cpu",kernelFunc:Xh};var Yh=n(6961);const Qh={kernelName:c.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(c.util.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};var Zh=n(8926);function Jh(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const ef={kernelName:c.Imag,backendName:"cpu",kernelFunc:Jh};var tf=n(2186);function nf(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=c.util.parseAxisParam(a,t[0].shape)[0];let i=c.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===c.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>c.util.sizeFromShape(e.shape)>0));if(1===o.length)return(0,Gp.y)({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(c.backend_util.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>(0,tf.k)({inputs:{input:e},backend:n}))),t=o.map((e=>Jh({inputs:{input:e},backend:n}))),r=nf({inputs:e,backend:n,attrs:{axis:s}}),a=nf({inputs:t,backend:n,attrs:{axis:s}}),i=(0,Yh.P)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=c.util.sizeFromShape(e.shape.slice(s));return ih({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),d=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=c.backend_util.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],h=(0,Zh.j)(d,i,t[0].dtype,p),f=c.backend_util.computeOutShape(o.map((e=>e.shape)),s),m=n.makeTensorInfo(f,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}const rf={kernelName:c.Concat,backendName:"cpu",kernelFunc:nf};function af(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:d}=r;(0,Bp.H)([a,s],"conv2d");const p=c.backend_util.convertConv2DDataFormat(u),h=c.backend_util.computeConv2DInfo(a.shape,s.shape,i,l,o,d,!1,p),f=h.filterHeight,m=h.filterWidth,g=h.dilationHeight,y=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,v="channelsLast"===h.dataFormat,w=new c.TensorBuffer(h.outShape,a.dtype),k=c.util.computeStrides(a.shape),I=c.util.computeStrides(s.shape),S=k[0],N=v?k[1]:k[2],T=v?k[2]:1,C=v?1:k[1],_=w.strides[0],A=v?w.strides[1]:w.strides[2],E=v?w.strides[2]:1,$=v?1:w.strides[1],R=n.data.get(a.dataId).values,F=n.data.get(s.dataId).values,D=w.values;for(let e=0;e<h.batchSize;++e){const t=e*S,n=e*_;for(let e=0;e<h.outHeight;++e){const r=n+e*A,a=e*h.strideHeight-x;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=h.inHeight)continue;const s=e*I[0],i=t+n*N;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-b;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=h.inWidth)continue;const a=i+r*T;let o=s+e*I[1];for(let e=0;e<h.inChannels;++e){const n=R[a+e*C];for(let e=0;e<h.outChannels;++e)D[t+e*$]+=n*F[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const sf={kernelName:c.Conv2D,backendName:"cpu",kernelFunc:af},of={kernelName:c.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:d}=r;(0,Bp.H)([a,s],"conv2dBackpropFilter");const p=c.backend_util.convertConv2DDataFormat(u),h=c.backend_util.computeConv2DInfo(a.shape,d,i,1,o,l,!1,p),{strideHeight:f,strideWidth:m,filterHeight:g,filterWidth:y}=h,b="channelsLast"===h.dataFormat,x=new c.TensorBuffer(h.filterShape,"float32"),v=h.padInfo.left,w=h.padInfo.top,k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=new c.TensorBuffer(a.shape,a.dtype,k),N=new c.TensorBuffer(s.shape,s.dtype,I);for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((w-e)/f)),n=Math.min(h.outHeight,(h.inHeight+w-e)/f);for(let r=0;r<y;++r){const a=Math.max(0,Math.ceil((v-r)/m)),s=Math.min(h.outWidth,(h.inWidth+v-r)/m);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*f-w;for(let e=a;e<s;++e){const n=r+e*m-v;u+=b?S.get(l,t,n,i)*N.get(l,c,e,o):S.get(l,i,t,n)*N.get(l,o,c,e)}}x.set(u,e,r,i,o)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},uf={kernelName:c.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:d}=r;(0,Bp.H)([a,s],"conv2dBackpropInput");const p=c.util.computeStrides(s.shape),h=c.util.computeStrides(a.shape);let f=c.backend_util.convertConv2DDataFormat(l);const m=c.backend_util.computeConv2DInfo(i,s.shape,o,1,u,d,!1,f),g=new c.TensorBuffer(m.inShape,"float32"),y=g.values,b=n.data.get(a.dataId).values,x=n.data.get(s.dataId).values,[v,w,k]=p,{batchSize:I,filterHeight:S,filterWidth:N,inChannels:T,inHeight:C,inWidth:_,outChannels:A,outHeight:E,outWidth:$,strideHeight:R,strideWidth:F}=m;f=m.dataFormat;const D=S-1-m.padInfo.top,M=N-1-m.padInfo.left,O="channelsLast"===f,z=g.strides[0],L=O?g.strides[1]:g.strides[2],B=O?g.strides[2]:1,P=O?1:g.strides[1],V=h[0],W=O?h[1]:h[2],U=O?h[2]:1,H=O?1:h[1];for(let e=0;e<I;++e)for(let t=0;t<T;++t)for(let n=0;n<C;++n){const r=n-D,a=Math.max(0,Math.ceil(r/R)),s=Math.min(E,(S+r)/R);for(let i=0;i<_;++i){const o=i-M,u=Math.max(0,Math.ceil(o/F)),l=Math.min($,(N+o)/F);let c=0;for(let n=a;n<s;++n){const a=n*R-r;for(let r=u;r<l;++r){const s=V*e+W*n+U*r,i=v*(S-1-a)+w*(N-1-(r*F-o))+k*t;for(let e=0;e<A;++e)c+=b[s+H*e]*x[i+e]}}y[z*e+L*n+B*i+P*t]=c}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},lf={kernelName:c.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;(0,Bp.H)([a,s],"conv3d");const l=c.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:d,filterHeight:p,filterWidth:h,dilationDepth:f,dilationHeight:m,dilationWidth:g,padInfo:y}=l,b=y.front,x=y.left,v=y.top,w=new c.TensorBuffer(l.outShape,a.dtype),k=n.data.get(a.dataId).values,I=n.data.get(s.dataId).values,S=w.values,N=c.util.computeStrides(a.shape),T=c.util.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],a=e*l.strideDepth-b;for(let e=0;e<d;++e){const n=a+e*f;if(n<0||n>=l.inDepth)continue;const s=e*T[0],i=t+n*N[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-v;for(let e=0;e<p;++e){const r=n+e*m;if(r<0||r>=l.inHeight)continue;const a=s+e*T[1],o=i+r*N[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-x;for(let e=0;e<h;++e){const t=r+e*g;if(t<0||t>=l.inWidth)continue;const s=a+e*T[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=k[i+e];for(let e=0;e<l.outChannels;++e)S[n+e]+=t*I[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},cf={kernelName:c.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;(0,Bp.H)([a,s],"conv3dBackpropFilterV2");const l=c.util.computeStrides(a.shape),d=c.util.computeStrides(s.shape),p=c.backend_util.computeConv3DInfo(a.shape,u,i,1,o),h=p.strideDepth,f=p.strideHeight,m=p.strideWidth,g=p.filterDepth,y=p.filterHeight,b=p.filterWidth,x=new c.TensorBuffer(p.filterShape,"float32"),v=x.values,[w,k,I,S]=x.strides,N=n.data.get(s.dataId).values,[T,C,_,A]=d,E=n.data.get(a.dataId).values,[$,R,F,D]=l,M=p.padInfo.front,O=p.padInfo.left,z=p.padInfo.top;for(let e=0;e<g;++e){const t=Math.max(0,Math.ceil((M-e)/h)),n=Math.min(p.outDepth,(p.inDepth+M-e)/h),r=e*w;for(let a=0;a<y;++a){const s=Math.max(0,Math.ceil((z-a)/f)),i=Math.min(p.outHeight,(p.inHeight+z-a)/f),o=a*k+r;for(let r=0;r<b;++r){const u=Math.max(0,Math.ceil((O-r)/m)),l=Math.min(p.outWidth,(p.inWidth+O-r)/m),c=r*I+o;for(let o=0;o<p.inChannels;++o){const d=o*S+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let d=0;d<p.batchSize;++d){const p=d*$,y=d*T;for(let d=t;d<n;++d){const t=(e+d*h-M)*R+p,n=d*C+y;for(let e=s;e<i;++e){const s=(a+e*f-z)*F+t,i=e*_+n;for(let e=u;e<l;++e){const t=e*A+i;g+=E[(r+e*m-O)*D+s+o]*N[t+c]}}}}v[d+c]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}},df={kernelName:c.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;(0,Bp.H)([a],"conv3dBackpropInputV2");const l=c.util.computeStrides(a.shape),d=c.util.computeStrides(s.shape),p=c.backend_util.computeConv3DInfo(u,s.shape,o,1,i),h=new c.TensorBuffer(p.inShape,"float32"),f=h.values,[m,g,y,b]=h.strides,x=n.data.get(a.dataId).values,[v,w,k,I]=l,S=n.data.get(s.dataId).values,[N,T,C,_]=d,{batchSize:A,filterDepth:E,filterHeight:$,filterWidth:R,inChannels:F,inDepth:D,inHeight:M,inWidth:O,outChannels:z,outDepth:L,outHeight:B,outWidth:P,strideDepth:V,strideHeight:W,strideWidth:U}=p,H=E-1-p.padInfo.front,G=$-1-p.padInfo.top,q=R-1-p.padInfo.left;for(let e=0;e<A;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const r=n-H,a=Math.max(0,Math.ceil(r/V)),s=Math.min(L,(E+r)/V);for(let i=0;i<M;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(B,($+o)/W);for(let c=0;c<O;++c){const d=c-q,p=Math.max(0,Math.ceil(d/U)),h=Math.min(P,(R+d)/U);let A=0;for(let n=a;n<s;++n){const a=n*V-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=p;i<h;++i){const o=v*e+w*n+k*r+I*i,u=N*(E-1-a)+T*($-1-s)+C*(R-1-(i*U-d))+_*t;for(let e=0;e<z;++e)A+=x[o+e]*S[u+e]}}}f[m*e+g*n+y*i+b*c+t]=A}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},pf=(0,Wp.A)(c.Cos,(e=>Math.cos(e))),hf={kernelName:c.Cos,backendName:"cpu",kernelFunc:pf},ff=(0,Wp.A)(c.Cosh,(e=>Math.cosh(e))),mf={kernelName:c.Cosh,backendName:"cpu",kernelFunc:ff},gf={kernelName:c.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[d,p,h,f]=a.shape,m=s.shape[0],[g,y]=o,b=(0,c.buffer)([m,g,y,f],"float32"),x=n.data.get(s.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,k=c.util.computeStrides(a.shape),I=c.util.computeStrides(b.shape);for(let e=0;e<m;e++){const t=4*e,n=x[t],r=x[t+1],a=x[t+2],s=x[t+3],i=v[e];if(i>=d)continue;const o=g>1?(a-n)*(p-1)/(g-1):0,c=y>1?(s-r)*(h-1)/(y-1):0;for(let t=0;t<g;t++){const d=g>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(d<0||d>p-1)for(let n=0;n<y;n++)for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];b.values[a]=l}else if("bilinear"===u){const n=Math.floor(d),a=Math.ceil(d),o=d-n;for(let u=0;u<y;u++){const d=y>1?r*(h-1)+u*c:.5*(r+s)*(h-1);if(d<0||d>h-1){for(let n=0;n<f;n++){const r=n+u*I[2]+t*I[1]+e*I[0];b.values[r]=l}continue}const p=Math.floor(d),m=Math.ceil(d),g=d-p;for(let r=0;r<f;r++){let s=r+p*k[2]+n*k[1]+i*k[0];const l=w[s];s=r+m*k[2]+n*k[1]+i*k[0];const c=w[s];s=r+p*k[2]+a*k[1]+i*k[0];const d=w[s];s=r+m*k[2]+a*k[1]+i*k[0];const h=l+(c-l)*g,f=d+(w[s]-d)*g;s=r+u*I[2]+t*I[1]+e*I[0],b.values[s]=h+(f-h)*o}}}else for(let n=0;n<y;++n){const a=y>1?r*(h-1)+n*c:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<f;r++){const a=r+n*I[2]+t*I[1]+e*I[0];b.values[a]=l}continue}const o=Math.round(a),u=Math.round(d);for(let r=0;r<f;r++){const a=r+o*k[2]+u*k[1]+i*k[0],s=r+n*I[2]+t*I[1]+e*I[0];b.values[s]=w[a]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},yf={kernelName:c.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;(0,Bp.H)(a,"cumsum");const u=c.backend_util.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:u}}));const d=c.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(d!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${d}`);const p=(0,c.upcastType)(l.dtype,"int32"),h=c.util.makeZerosTypedArray(c.util.sizeFromShape(l.shape),p),f=n.data.get(l.dataId).values,m=l.shape[l.shape.length-1],g=o?(e,t)=>e+m-t-1:(e,t)=>e+t;for(let e=0;e<f.length;e+=m)for(let t=0;t<m;t++){const n=g(e,t);if(0===t)h[n]=i?0:f[n];else{const r=g(e,t-1);h[n]=i?f[r]+h[r]:f[n]+h[r]}}const y=n.makeTensorInfo(l.shape,p,h);if(null!=u){const e=c.backend_util.getUndoAxesPermutation(u),t=(0,yh.p)({inputs:{x:y},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(l),t}return y}},bf={kernelName:c.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=(0,Hh.W)(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=(0,Hh.i)(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},xf={kernelName:c.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;c.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),c.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],d=a.shape[3],p=u*s,h=l*s,f=d/(s*s),m=n.data.get(a.dataId).values,g=new Float32Array(o*p*h*f);let y=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*f;for(let t=0;t<f;++t){const r=t+i+d*(a+l*(n+u*e));g[y++]=m[r]}}}return n.makeTensorInfo([o,p,h,f],a.dtype,g)}};function vf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;(0,Bp.H)([a,s],"depthwiseConv2DNative");const d=c.util.computeStrides(a.shape),p=c.util.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),c.util.assert(c.backend_util.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const f=c.backend_util.computeConv2DInfo(a.shape,s.shape,i,h,o,l,!0),{filterHeight:m,filterWidth:g,dilationHeight:y,dilationWidth:b,padInfo:x}=f,v=x.left,w=x.top,k=f.outChannels/f.inChannels,I=new c.TensorBuffer(f.outShape,a.dtype),S=n.data.get(a.dataId).values,N=n.data.get(s.dataId).values,T=I.values;for(let e=0;e<f.batchSize;++e){const t=e*d[0],n=e*I.strides[0];for(let e=0;e<f.outHeight;++e){const r=n+e*I.strides[1],a=e*f.strideHeight-w;for(let e=0;e<m;++e){const n=a+e*y;if(n<0||n>=f.inHeight)continue;const s=e*p[0],i=t+n*d[1];for(let e=0;e<f.outWidth;++e){const t=r+e*I.strides[2],n=e*f.strideWidth-v;for(let e=0;e<g;++e){const r=n+e*b;if(r<0||r>=f.inWidth)continue;const a=s+e*p[1],o=i+r*f.inChannels;let u=t,l=a;for(let e=0;e<f.inChannels;++e){const t=S[o+e];for(let e=0;e<k;++e)T[u+e]+=t*N[l+e];u+=k,l+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const wf={kernelName:c.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:vf},kf={kernelName:c.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:d}=r;(0,Bp.H)([a,s],"depthwiseConv2dNativeBackpropFilter");const p=c.backend_util.computeConv2DInfo(a.shape,d,i,o,u,l,!0),{strideHeight:h,strideWidth:f,filterHeight:m,filterWidth:g}=p,y=new c.TensorBuffer(p.filterShape,"float32"),b=p.padInfo.left,x=p.padInfo.top,v=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,k=new c.TensorBuffer(a.shape,a.dtype,w),I=n.data.get(s.dataId).values,S=new c.TensorBuffer(s.shape,s.dtype,I);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((x-e)/h)),n=Math.min(p.outHeight,(p.inHeight+x-e)/h);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((b-r)/f)),s=Math.min(p.outWidth,(p.inWidth+b-r)/f);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/v),u=i%v;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-x;for(let e=a;e<s;++e){const n=r+e*f-b;l+=k.get(u,t,n,o)*S.get(u,c,e,i)}}y.set(l,e,r,o,u)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},If={kernelName:c.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:d}=r;(0,Bp.H)([a,s],"depthwiseConv2DNativeBackpropInput");const p=c.util.computeStrides(a.shape),h=c.util.computeStrides(s.shape),f=c.backend_util.computeConv2DInfo(d,s.shape,i,o,u,l,!0),m=new c.TensorBuffer(f.inShape,"float32"),g=m.values,[y,b,x]=m.strides,v=n.data.get(a.dataId).values,[w,k,I]=p,S=n.data.get(s.dataId).values,[N,T,C]=h,{batchSize:_,filterHeight:A,filterWidth:E,inChannels:$,inHeight:R,inWidth:F,outChannels:D,outHeight:M,outWidth:O,strideHeight:z,strideWidth:L}=f,B=A-1-f.padInfo.top,P=E-1-f.padInfo.left,V=D/$;for(let e=0;e<_;++e)for(let t=0;t<$;++t)for(let n=0;n<R;++n){const r=n-B,a=Math.max(0,Math.ceil(r/z)),s=Math.min(M,(A+r)/z);for(let i=0;i<F;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(O,(E+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*z-r;for(let r=u;r<l;++r){const s=w*e+k*n+I*r,i=N*(A-1-a)+T*(E-1-(r*L-o))+C*t;for(let e=0;e<V;++e)c+=v[s+(t*V+e)]*S[i+e]}}g[y*e+b*n+x*i+t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},Sf={kernelName:c.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=c.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=(0,c.buffer)([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Nf={kernelName:c.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,d=r.shape.length,p=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:f,inHeight:m,inWidth:g,inChannels:y,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:S,dilationHeight:N,dilationWidth:T,outShape:C}=c.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),_=c.util.sizeFromShape(C),A=C.length,E=c.util.getArrayFromDType(r.dtype,_);for(let e=0;e<f;++e)for(let t=0;t<b;++t){const n=t*w-v.top;for(let s=0;s<x;++s){const i=s*k-v.left;for(let o=0;o<y;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){const s=n+t*N;if(s>=0&&s<m)for(let n=0;n<S;++n){const f=i+n*T;if(f>=0&&f<g){const i=c.util.locToIndex([e,s,f,o],d,c.util.computeStrides(r.shape)),m=c.util.locToIndex([t,n,o],h,c.util.computeStrides(a.shape)),g=l[i]+p[m];g>u&&(u=g)}}}E[c.util.locToIndex([e,t,s,o],A,c.util.computeStrides(C))]=u}}}return{dataId:u.write(c.util.toTypedArray(E,r.dtype),C,r.dtype),shape:C,dtype:r.dtype}}},Tf={kernelName:c.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,d=c.util.toNestedArray(r.shape,l.data.get(r.dataId).values),p=c.util.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=c.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);c.util.assert(s.rank===T.length,(()=>`Error in ${c.Dilation2DBackpropFilter}, dy must have the same rank as output ${T.length}, but got ${s.rank}`));const C=c.util.toNestedArray(T,l.data.get(s.dataId).values),_=c.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=d[e][r][l][s]+p[t][n][s];a>i&&(i=a,o=t,u=n)}}}_[o][u][s]+=C[e][t][r][s]}}}return{dataId:l.write(c.util.toTypedArray(_,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Cf={kernelName:c.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,d=c.util.toNestedArray(r.shape,l.data.get(r.dataId).values),p=c.util.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=c.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);c.util.assert(s.rank===T.length,(()=>`Error in ${c.Dilation2DBackpropInput}, dy must have the same rank as output ${T.length}, but got ${s.rank}`));const C=c.util.toNestedArray(T,l.data.get(s.dataId).values),_=c.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<y;++t){const n=t*v-x.top;for(let r=0;r<b;++r){const a=r*w-x.left;for(let s=0;s<g;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<k;++t){const r=n+t*S;if(r>=0&&r<f)for(let n=0;n<I;++n){const l=a+n*N;if(l>=0&&l<m){const a=d[e][r][l][s]+p[t][n][s];a>i&&(i=a,o=r,u=l)}}}_[e][o][u][s]+=C[e][t][r][s]}}}return{dataId:l.write(c.util.toTypedArray(_,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var _f=n(1917),Af=n(4391);function Ef(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;(0,Bp.H)(a,"sum"),o="bool"===a.dtype?(0,qh.p)({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):(0,Gp.y)({inputs:{x:a},backend:n});const u=o.shape.length,l=c.util.parseAxisParam(s,o.shape),d=c.backend_util.getAxesPermutation(l,u);let p=l,h=o;null!=d&&(h=(0,yh.p)({inputs:{x:o},backend:n,attrs:{perm:d}}),p=c.backend_util.getInnerMostAxes(p.length,u)),c.backend_util.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[f,m]=c.backend_util.computeOutAndReduceShapes(h.shape,p),g=c.backend_util.upcastType(h.dtype,"int32");let y=(0,Af.l)(n,f,g);const b=c.util.sizeFromShape(m),x=n.data.get(y.dataId).values,v=n.data.get(h.dataId).values;for(let e=0;e<x.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=v[t+e];x[e]=n}if(i){const e=y;y=ih({inputs:{x:y},backend:n,attrs:{shape:c.backend_util.expandShapeToKeepDim(y.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=d&&n.disposeIntermediateTensorInfo(h),y}const $f={kernelName:c.Sum,backendName:"cpu",kernelFunc:Ef},Rf={kernelName:c.Einsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=c.backend_util.decodeEinsumEquation(a,s.length);c.backend_util.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:d}=c.backend_util.getEinsumComputePath(o,u),p=d.length;let h=null,f=i.length;const m=[];for(let e=0;e<p;++e){for(const t of d[e]){const{permutationIndices:e,expandDims:r}=c.backend_util.getEinsumPermutation(f,u[t]);let a;c.backend_util.isIdentityPermutation(e)?a=s[t]:(a=(0,yh.p)({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);c.util.arraysEqual(a.shape,i)||(a=ih({inputs:{x:a},backend:n,attrs:{shape:i}}),m.push(a)),null===h?h=a:(h=(0,_f.Jp)({inputs:{a,b:h},backend:n}),m.push(h))}e<p-1&&(l[e]>=0&&(h=Ef({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-f),keepDims:!1}}),m.push(h)),f--)}for(const e of m)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},Ff={kernelName:c.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;(0,Bp.H)([r,a],"eluGrad");const s=new Float32Array(c.util.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}};var Df=n(7679);const Mf=c.backend_util.ERF_P,Of=c.backend_util.ERF_A1,zf=c.backend_util.ERF_A2,Lf=c.backend_util.ERF_A3,Bf=c.backend_util.ERF_A4,Pf=c.backend_util.ERF_A5,Vf=(0,Wp.A)(c.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Mf*n);return t*(1-((((Pf*r+Bf)*r+Lf)*r+zf)*r+Of)*r*Math.exp(-n*n))})),Wf={kernelName:c.Erf,backendName:"cpu",kernelFunc:Vf};var Uf=n(1211);function Hf(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(c.util.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),ih({inputs:{x:a},backend:n,attrs:{shape:o}})}const Gf={kernelName:c.ExpandDims,backendName:"cpu",kernelFunc:Hf};var qf=n(969);const jf=(0,Xp.b)(((e,t)=>e/t)),Xf=(0,_h.j)(c.RealDiv,jf),Kf={kernelName:c.RealDiv,backendName:"cpu",kernelFunc:Xf};var Yf=n(1649);function Qf(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],d=c.util.sizeFromShape(l),p=c.util.getTypedArrayFromDType("float32",d),h=c.util.getTypedArrayFromDType("float32",d);for(let e=0;e<a;e++){const r=(0,Wh.tP)({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=(0,Wh.tP)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=(0,Yh.P)({inputs:{real:r,imag:a},backend:n}),{real:l,imag:d}=Zf(i,t,n),f=c.backend_util.mergeRealAndImagArrays(l,d);for(let t=0;t<s;t++){const n=c.backend_util.getComplexWithIndex(f,t);p[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const f=n.makeTensorInfo(l,"float32",p),m=n.makeTensorInfo(l,"float32",h),g=(0,Yh.P)({inputs:{real:f,imag:m},backend:n});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}function Zf(e,t,n){const r=c.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=Jf(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",c.util.createScalarValue(r,"float32")),i=(0,Gp.y)({inputs:{x:s},backend:n}),u=Kf.kernelFunc({inputs:{a:e,b:s},backend:n}),l=Kf.kernelFunc({inputs:{a:t,b:i},backend:n}),d=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:d,imag:p}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=c.backend_util.exponent(a*r,t,n),u=c.backend_util.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),c.backend_util.assignToTypedArray(r,s,i,a)}return r}(c.backend_util.mergeRealAndImagArrays(s,i),r,t);return c.backend_util.splitRealAndImagArrays(e)}var o}function Jf(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=c.backend_util.mergeRealAndImagArrays(e,t),i=n/2,o=c.backend_util.complexWithEvenIndex(s),u=o.real,l=o.imag,d=[u.length],p=a.makeTensorInfo(d,"float32",u),h=a.makeTensorInfo(d,"float32",l),f=(0,Yh.P)({inputs:{real:p,imag:h},backend:a}),m=c.backend_util.complexWithOddIndex(s),g=m.real,y=m.imag,b=[g.length],x=a.makeTensorInfo(b,"float32",g),v=a.makeTensorInfo(b,"float32",y),w=(0,Yh.P)({inputs:{real:x,imag:v},backend:a}),k=Jf(u,l,i,r,a),I=k.real,S=k.imag,N=[I.length],T=a.makeTensorInfo(N,"float32",I),C=a.makeTensorInfo(N,"float32",S),_=(0,Yh.P)({inputs:{real:T,imag:C},backend:a}),A=Jf(g,y,i,r,a),E=A.real,$=A.imag,R=[E.length],F=a.makeTensorInfo(R,"float32",E),D=a.makeTensorInfo(R,"float32",$),M=(0,Yh.P)({inputs:{real:F,imag:D},backend:a}),O=c.backend_util.exponents(n,r),z=[O.real.length],L=a.makeTensorInfo(z,"float32",O.real),B=a.makeTensorInfo(z,"float32",O.imag),P=(0,Yh.P)({inputs:{real:L,imag:B},backend:a}),V=(0,_f.Jp)({inputs:{a:P,b:M},backend:a}),W=(0,sh.IH)({inputs:{a:_,b:V},backend:a}),U=(0,Yf.lu)({inputs:{a:_,b:V},backend:a}),H=(0,tf.k)({inputs:{input:W},backend:a}),G=(0,tf.k)({inputs:{input:U},backend:a}),q=Jh({inputs:{input:W},backend:a}),j=Jh({inputs:{input:U},backend:a}),X=nf({inputs:[H,G],backend:a,attrs:{axis:0}}),K=nf({inputs:[q,j],backend:a,attrs:{axis:0}}),Y=a.data.get(X.dataId).values,Q=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(f),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(v),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(M),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(K),{real:Y,imag:Q}}const em={kernelName:c.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=c.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=ih({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Qf(i,!1,n),u=ih({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function tm(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||c.util.inferDtype(a),o=c.util.getArrayFromDType(i,c.util.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const nm={kernelName:c.Fill,backendName:"cpu",kernelFunc:tm},rm={kernelName:c.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=c.util.getTypedArrayFromDType(r.dtype,c.util.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,d=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let c=d[o];i>=0&&i<u&&(c=d[t+n+i*l+a]),s[o]=c}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var am=n(6574);const sm=(0,Xp.b)(((e,t)=>Math.floor(e/t))),im=(0,_h.j)(c.FloorDiv,sm,null,"int32"),om={kernelName:c.FloorDiv,backendName:"cpu",kernelFunc:im},um={kernelName:c.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=af({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=(0,sh.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=ah(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}},lm={kernelName:c.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p,activation:h,leakyreluAlpha:f}=r;let m=vf({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:p}});if(i){const e=m;m=(0,sh.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(h){const e=m;m=ah(n,m,h,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var cm=n(1820);const dm={kernelName:c.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=c.util.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,d,p]=c.backend_util.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=n.data.get(a.dataId).values,f=n.bufferSync(r),m=(0,cm.m)(h,f,r.dtype,l,o,d,p,r.shape,s);return n.makeTensorInfo(u,r.dtype,m.values)}};var pm=n(4468);const hm={kernelName:c.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;(0,Bp.H)([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=c.util.sizeFromShape(s.shape),d=c.util.parseAxisParam(i,a.shape)[0],p=c.backend_util.segment_util.collectGatherOpShapeInfo(a,s,d,u),h=ih({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),f=ih({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],g=n.bufferSync(f),y=n.bufferSync(h),b=(0,pm.i)(y,g,m);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}};var fm=n(6272),mm=n(6259);const gm={kernelName:c.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=c.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=ih({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Qf(i,!0,n),u=ih({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},ym=(0,Wp.A)(c.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),bm={kernelName:c.IsFinite,backendName:"cpu",kernelFunc:ym},xm=(0,Wp.A)(c.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),vm={kernelName:c.IsInf,backendName:"cpu",kernelFunc:xm},wm=(0,Wp.A)(c.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),km={kernelName:c.IsNan,backendName:"cpu",kernelFunc:wm};var Im=n(8405),Sm=n(635),Nm=n(1325);const Tm={kernelName:c.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=(0,Nm.b)(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}};var Cm=n(5223);const _m=(0,Wp.A)(c.Log1p,(e=>Math.log1p(e))),Am={kernelName:c.Log1p,backendName:"cpu",kernelFunc:_m},Em=(0,Xp.b)(((e,t)=>e&&t)),$m=(0,_h.j)(c.LogicalAnd,Em,null,"bool"),Rm={kernelName:c.LogicalAnd,backendName:"cpu",kernelFunc:$m},Fm=(0,Wp.A)(c.LogicalNot,(e=>e?0:1),"bool"),Dm={kernelName:c.LogicalNot,backendName:"cpu",kernelFunc:Fm},Mm=(0,Xp.b)(((e,t)=>e||t)),Om=(0,_h.j)(c.LogicalOr,Mm,null,"bool"),zm={kernelName:c.LogicalOr,backendName:"cpu",kernelFunc:Om},Lm={kernelName:c.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;(0,Bp.H)(a,"LRN");const l=a.shape[3],d=l-1,p=n.data.get(a.dataId).values,h=c.util.sizeFromShape(a.shape),f=new Float32Array(h);function m(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,d);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=m(e),n=p[e]*Math.pow(i+o*t,-u);f[e]=n}return n.makeTensorInfo(a.shape,a.dtype,f)}},Bm={kernelName:c.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:d}=r;(0,Bp.H)(i,"LRNGrad");const p=c.util.sizeFromShape(i.shape),h=i.shape[3],f=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,g=n.data.get(s.dataId).values,y=new Float32Array(p),b=p;for(let e=0;e<b;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(m[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*d*m[t]*g[e]/a;e===t&&(n+=Math.pow(a,-d)),n*=f[e],y[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,y)}};var Pm=n(5126),Vm=n(7107);function Wm(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,d=c.util.parseAxisParam(s,u);let p=d;const h=c.backend_util.getAxesPermutation(p,l);let f=o.data.get(a.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];f=(0,Vm.H)(f,u,a.dtype,h,e),p=c.backend_util.getInnerMostAxes(p.length,l),u=e}(0,Bp.H)(a,"max"),c.backend_util.assertAxesAreInnerMostDims("max",p,l);const[m,g]=c.backend_util.computeOutAndReduceShapes(u,p),y=c.util.sizeFromShape(g),b=(0,Pm.B)(f,y,m,a.dtype),x=o.write(b,m,a.dtype);let v=m;return i&&(v=c.backend_util.expandShapeToKeepDim(m,d)),{dataId:x,shape:v,dtype:a.dtype}}const Um={kernelName:c.Max,backendName:"cpu",kernelFunc:Wm};var Hm=n(1717);const Gm={kernelName:c.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;(0,Bp.H)(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;c.util.assert(c.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=c.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let d;if(1===l.filterWidth&&1===l.filterHeight&&c.util.arraysEqual(l.inShape,l.outShape))d=(0,Gp.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=c.util.computeStrides(a.shape),r=Dh(e,a.shape,a.dtype,t,l,"max");d=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return d}},qm={kernelName:c.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,Bp.H)(a,"maxPool3d");const d=c.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,l),p=Oh(n.data.get(a.dataId).values,a.shape,a.dtype,c.util.computeStrides(a.shape),d,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},jm={kernelName:c.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,Bp.H)([a,s],"maxPool3DGrad");const d=c.backend_util.computePool3DInfo(s.shape,i,o,1,u,l),p=function(e,t){const n=(0,c.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,d=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;for(let c=0;c<t.batchSize;++c)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=i;const v=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-f;let h=l;for(;h<0;)h+=o;const w=Math.min(t.inHeight,d+l);for(let a=0;a<t.outWidth;++a){const f=a*s-m;let k=f;for(;k<0;)k+=u;const I=Math.min(t.inWidth,p+f);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){const n=t-b;for(let r=h;r<w;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-f,o=e.get(c,t,r,s,g);o>=S&&(S=o,N=n*d*p+a*d+i)}}}n.set(N,c,y,r,a,g)}}}return n}(n.bufferSync(s),d),h=d.strideDepth,f=d.strideHeight,m=d.strideWidth,g=d.dilationDepth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterDepth,v=d.effectiveFilterHeight,w=d.effectiveFilterWidth,k=x-1-d.padInfo.front,I=w-1-d.padInfo.left,S=v-1-d.padInfo.top,N=(0,c.buffer)(s.shape,"float32"),T=n.bufferSync(a);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inDepth;++n)for(let r=0;r<d.inHeight;++r)for(let a=0;a<d.inWidth;++a){const s=n-k,i=r-S,o=a-I;let u=0;for(let n=0;n<x;n+=g){const r=(s+n)/h;if(!(r<0||r>=d.outDepth||Math.floor(r)!==r))for(let a=0;a<v;a+=y){const s=(i+a)/f;if(!(s<0||s>=d.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=b){const l=(o+i)/m;if(l<0||l>=d.outWidth||Math.floor(l)!==l)continue;const c=x*v*w-1-p.get(e,r,s,l,t)===n*v*w+a*w+i?1:0;0!==c&&(u+=T.get(e,r,s,l,t)*c)}}}N.set(u,e,n,r,a,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},Xm={kernelName:c.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;(0,Bp.H)([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:d,dimRoundingMode:p}=r,h=c.backend_util.computePool2DInfo(o.shape,u,l,1,d,p),f=n.data.get(o.dataId).values,m=(0,c.buffer)(h.outShape,o.dtype,Mh(f,o.shape,o.dtype,h).values),g=h.strideHeight,y=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,v=h.effectiveFilterHeight,w=h.effectiveFilterWidth,k=w-1-h.padInfo.left,I=v-1-h.padInfo.top,S=(0,c.buffer)(o.shape,"float32"),N=n.data.get(a.dataId).values,T=(0,c.buffer)(a.shape,"float32",N);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-I,s=r-k;let i=0;for(let n=0;n<v;n+=b){const r=(a+n)/g;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=x){const o=(s+a)/y;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=v*w-1-m.get(e,r,o,t)===n*w+a?1:0;0!==u&&(i+=T.get(e,r,o,t)*u)}}S.set(i,e,n,r,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},Km={kernelName:c.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;(0,Bp.H)(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,d=c.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[p,h]=function(e,t,n,r,a){const s=Dh(e,0,n,c.util.computeStrides(t),a,"max"),i=Mh(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,d),f=u.write(p,d.outShape,r.dtype),m=u.write(h,d.outShape,r.dtype);return[{dataId:f,shape:d.outShape,dtype:r.dtype},{dataId:m,shape:d.outShape,dtype:"int32"}]}},Ym={kernelName:c.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=c.util.parseAxisParam(s,a.shape),u=c.backend_util.computeOutAndReduceShapes(a.shape,o)[1],l=c.util.sizeFromShape(u),d=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));d.push(p);const h=(0,qh.p)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});d.push(h);const f=Xf({inputs:{a:h,b:p},backend:n});d.push(f);const m=Ef({inputs:{x:f},backend:n,attrs:{axis:s,keepDims:i}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),m}},Qm={kernelName:c.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,Bp.H)(a,"min");const o=c.util.parseAxisParam(s,a.shape);let u=o;const l=c.backend_util.getAxesPermutation(u,a.shape.length);let d=a;null!=l&&(d=(0,yh.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=c.backend_util.getInnerMostAxes(u.length,a.shape.length)),c.backend_util.assertAxesAreInnerMostDims("min",u,d.shape.length);const[p,h]=c.backend_util.computeOutAndReduceShapes(d.shape,u),f=c.util.sizeFromShape(h),m=c.util.makeZerosTypedArray(c.util.sizeFromShape(p),d.dtype),g=n.data.get(d.dataId).values;for(let e=0;e<m.length;++e){const t=e*f;let n=g[t];for(let e=0;e<f;++e){const r=g[t+e];(Number.isNaN(r)||r<n)&&(n=r)}m[e]=n}null!=l&&n.disposeIntermediateTensorInfo(d);const y=n.makeTensorInfo(p,d.dtype,m);if(i){const e=ih({inputs:{x:y},backend:n,attrs:{shape:c.backend_util.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(y),e}return y}};var Zm=n(612);const Jm={kernelName:c.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;(0,Bp.H)(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),d="reflect"===i?0:1,p=n.data.get(a.dataId).values,h=a.shape.length,f=c.util.computeStrides(a.shape),m=c.util.sizeFromShape(o),g=o.length,y=c.util.computeStrides(o),b=c.util.getTypedArrayFromDType(a.dtype,m);for(let e=0;e<m;e++){let t=c.util.indexToLoc(e,g,y);for(let e=0;e<g;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-d:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+d);t=t.map(((e,t)=>e-u[t]));const n=c.util.locToIndex(t,h,f);b[e]=p[n]}return{dataId:n.write(b,o,a.dtype),shape:o,dtype:a.dtype}}},eg=(0,Xp.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),tg=(0,_h.j)(c.Mod,eg),ng={kernelName:c.Mod,backendName:"cpu",kernelFunc:tg};var rg=n(2948);function ag(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=c.util.parseAxisParam([o],a.shape),l=Wm({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),d=c.backend_util.expandShapeToKeepDim(l.shape,u),p=ih({inputs:{x:l},backend:n,attrs:{shape:d}}),h=(0,Yf.lu)({inputs:{a,b:p},backend:n}),f=(0,Uf.Qq)({inputs:{x:h},backend:n}),m=Ef({inputs:{x:f},backend:n,attrs:{axis:u,keepDims:!1}}),g=ih({inputs:{x:m},backend:n,attrs:{shape:d}}),y=Xf({inputs:{a:f,b:g},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),y}const sg={kernelName:c.Softmax,backendName:"cpu",kernelFunc:ag},ig={kernelName:c.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;(0,Bp.H)(a,"multinomial");const u=o?a:ag({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],d=u.shape[1],p=n.data.get(u.dataId).values,h=[l,s],f=c.util.makeZerosTypedArray(c.util.sizeFromShape(h),"int32");for(let e=0;e<l;++e){const t=e*d,n=new Float32Array(d-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=rg.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();f[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){f[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",f)}};var og=n(854);const ug=c.kernel_impls.nonMaxSuppressionV3Impl,lg={kernelName:c.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;(0,Bp.H)(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=ug(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},cg=c.kernel_impls.nonMaxSuppressionV4Impl,dg={kernelName:c.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;(0,Bp.H)(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:p,validOutputs:h}=cg(c,d,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([h]))]}},pg=c.kernel_impls.nonMaxSuppressionV5Impl,hg={kernelName:c.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;(0,Bp.H)(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,p=i,h=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=pg(c,d,p,h,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var fg=n(8584);const mg={kernelName:c.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;(0,Bp.H)(a,"oneHot");const u=c.util.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const d=n.data.get(a.dataId).values;for(let e=0;e<u;++e)d[e]>=0&&d[e]<s&&(l[e*s+d[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function gg(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,tf.k)({inputs:{input:r},backend:n}),t=gg({inputs:{x:e},backend:n}),a=Jh({inputs:{input:r},backend:n}),s=gg({inputs:{x:a},backend:n}),i=(0,Yh.P)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return tm({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const yg={kernelName:c.ZerosLike,backendName:"cpu",kernelFunc:gg},bg={kernelName:c.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,tf.k)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Jh({inputs:{input:a},backend:r}),i=gg({inputs:{x:s},backend:r}),o=(0,Yh.P)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return tm({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function xg(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Hf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{c.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),c.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=nf({inputs:t.map((e=>{const t=Hf({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const vg={kernelName:c.Pack,backendName:"cpu",kernelFunc:xg},wg={kernelName:c.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;(0,Bp.H)(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,d=c.util.sizeFromShape(a.shape),p=a.shape.length,h=c.util.computeStrides(a.shape),f=c.util.sizeFromShape(o),m=o.length,g=c.util.computeStrides(o),y=c.util.getTypedArrayFromDType(a.dtype,f);0!==i&&y.fill(i);for(let e=0;e<d;e++){const t=c.util.indexToLoc(e,p,h).map(((e,t)=>e+u[t]));y[c.util.locToIndex(t,m,g)]=l[e]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},kg=(0,Xp.b)(((e,t)=>Math.pow(e,t))),Ig=(0,_h.j)(c.Pow,kg),Sg={kernelName:c.Pow,backendName:"cpu",kernelFunc:Ig};var Ng=n(9560),Tg=n(9230);const Cg={kernelName:c.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=(0,Tg.b)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},_g=(0,Wp.A)(c.Reciprocal,(e=>1/e)),Ag={kernelName:c.Reciprocal,backendName:"cpu",kernelFunc:_g},Eg={kernelName:c.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;(0,Bp.H)(a,"resizeBilinear");const u=c.util.computeStrides(a.shape),[l,d]=o,[p,h,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(c.util.sizeFromShape([p,l,d,m])),b=[s&&l>1?h-1:h,s&&d>1?f-1:f],x=[s&&l>1?l-1:l,s&&d>1?d-1:d];let v=0;const w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<d;e++){let t;t=i?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(f-1,Math.ceil(t)),c=o+n*u[2],d=l+n*u[2],p=o+s*u[2],h=l+s*u[2];for(let e=0;e<m;e++){const t=g[c+e],n=g[d+e],s=t+(g[p+e]-t)*r,i=s+(n+(g[h+e]-n)*r-s)*a;y[v++]=i}}}return n.makeTensorInfo([p,l,d,m],"float32",y)}},$g={kernelName:c.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;(0,Bp.H)([s,a],"resizeBilinearGrad");const o=c.util.computeStrides(a.shape),[u,l,d,p]=a.shape,[,h,f]=s.shape,m=new Float32Array(u*l*d*p),g=[i&&h>1?l-1:l,i&&f>1?d-1:d],y=[i&&h>1?h-1:h,i&&f>1?f-1:f],b=g[0]/y[0],x=g[1]/y[1],v=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*b,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,c=1-u;for(let e=0;e<f;e++){const t=e*x,n=Math.floor(t),r=Math.min(Math.ceil(t),d-1),a=t-n,l=1-a,h=s+n*o[2],f=s+r*o[2],g=i+n*o[2],y=i+r*o[2],b=c*l,k=c*a,I=u*l,S=u*a;for(let e=0;e<p;e++){const t=v[w++];m[h+e]+=t*b,m[f+e]+=t*k,m[g+e]+=t*I,m[y+e]+=t*S}}}}return n.makeTensorInfo([u,d,l,p],"float32",m)}},Rg={kernelName:c.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;(0,Bp.H)(a,"resizeNearestNeighbor");const u=c.util.computeStrides(a.shape),[l,d]=o,[p,h,f,m]=a.shape,g=n.data.get(a.dataId).values,y=new Float32Array(p*l*d*m),b=[s&&l>1?h-1:h,s&&d>1?f-1:f],x=[s&&l>1?l-1:l,s&&d>1?d-1:d],v=b[0]/x[0],w=b[1]/x[1];let k=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?v*(e+.5):v*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<d;e++){const t=i?w*(e+.5):w*e;let n=Math.min(f-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<m;e++){const t=g[r+e];y[k++]=t}}}}return n.makeTensorInfo([p,l,d,m],a.dtype,y)}},Fg={kernelName:c.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;(0,Bp.H)([s,a],"resizeNearestNeighborGrad");const o=c.util.computeStrides(a.shape),u=c.util.computeStrides(s.shape),[l,d,p,h]=a.shape,[,f,m]=s.shape,g=new Float32Array(l*d*p*h),y=n.data.get(s.dataId).values,b=[i&&f>1?d-1:d,i&&m>1?p-1:p],x=[i&&f>1?f-1:f,i&&m>1?m-1:m],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,S=2*Math.ceil(k)+2,N=2*Math.ceil(I)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<d;e++){const n=t+e*o[1],r=Math.floor(e*k),a=Math.floor(r-S/2);for(let r=0;r<p;r++){const s=n+r*o[2],l=Math.floor(r*I),c=Math.floor(l-N/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<S;s++){const l=s+a;if(l<0||l>=f)continue;const h=t+l*u[1],g=l*v;if(e===Math.min(d-1,i?Math.round(g):Math.floor(g)))for(let e=0;e<N;e++){const t=e+c;if(t<0||t>=m)continue;const a=h+t*u[2],s=t*w;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=y[a+n])}}g[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,g)}},Dg={kernelName:c.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;(0,Bp.H)(a,"reverse");const i=a.shape.length,o=c.util.parseAxisParam(s,a.shape);if(0===i)return(0,Gp.y)({inputs:{x:a},backend:n});const u=new c.TensorBuffer(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Mg={kernelName:c.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=c.util.getTypedArrayFromDType(r.dtype,c.util.sizeFromShape(r.shape)),[l,d,p,h]=r.shape,[f,m]=c.backend_util.getImageCenter(i,d,p),g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*p*d*h;for(let e=0;e<d;e++){const n=e*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let i=0;i<h;i++){const o=[l,e,r,i],c=o[2],x=o[1];let v=(c-f)*y-(x-m)*g,w=(c-f)*g+(x-m)*y;v=Math.round(v+f),w=Math.round(w+m);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<p&&w>=0&&w<d&&(k=b[t+w*(p*h)+v*h+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Og=(0,Wp.A)(c.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),zg={kernelName:c.Round,backendName:"cpu",kernelFunc:Og};var Lg=n(7742);function Bg(e,t,n,r,a,s,i,o,u,l){const d=[r/a,a],p=e.values,h=t.values;if(0===r)return(0,c.buffer)(n,t.dtype);const f=(0,c.buffer)(d,t.dtype);f.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=p[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?f.values[u*a+n]+=h[e*a+n]:f.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return f}const Pg={kernelName:c.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:d,outputSize:p}=c.backend_util.calculateShapes(s,a,i),h=Bg(n.bufferSync(a),n.bufferSync(s),i,p,l,u,o,d,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},Vg={kernelName:c.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;(0,Bp.H)([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,d=(0,c.upcastType)(a.dtype,s.dtype),p=c.util.makeZerosTypedArray(c.util.sizeFromShape(a.shape),d);let h=0;const f=0===i||i>1||1===a.shape.length?1:c.util.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<f;t++)1===o[e]?p[h++]=u[e]:p[h++]=l[e];return n.makeTensorInfo(a.shape,d,p)}},Wg=c.backend_util.SELU_SCALEALPHA,Ug=c.backend_util.SELU_SCALE,Hg=(0,Wp.A)(c.Selu,(e=>e>=0?Ug*e:Wg*(Math.exp(e)-1))),Gg={kernelName:c.Selu,backendName:"cpu",kernelFunc:Hg},qg=(0,Wp.A)(c.Sign,(e=>e<0?-1:e>0?1:0)),jg={kernelName:c.Sign,backendName:"cpu",kernelFunc:qg},Xg=(0,Wp.A)(c.Sin,(e=>Math.sin(e))),Kg={kernelName:c.Sin,backendName:"cpu",kernelFunc:Xg},Yg=(0,Wp.A)(c.Sinh,(e=>Math.sinh(e))),Qg={kernelName:c.Sinh,backendName:"cpu",kernelFunc:Yg},Zg=Math.log(1.1920928955078125e-7)+2,Jg=(0,Wp.A)(c.Softplus,(e=>{const t=e>-Zg,n=e<Zg,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),ey={kernelName:c.Softplus,backendName:"cpu",kernelFunc:Jg},ty={kernelName:c.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;(0,Bp.H)([a],"spaceToBatchND");const o=c.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=wg.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=c.backend_util.getReshaped(l.shape,s,o,!1),p=c.backend_util.getPermuted(d.length,s.length,!1),h=c.backend_util.getReshapedPermuted(l.shape,s,o,!1),f=ih({inputs:{x:l},backend:n,attrs:{shape:d}}),m={x:f},g={perm:p},y=(0,yh.p)({inputs:m,backend:n,attrs:g}),b=ih({inputs:{x:y},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}};var ny=n(2123);const ry={kernelName:c.SparseFillEmptyRows,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,p,h,f,m]=(0,ny.c)(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,d),n.makeTensorInfo([p[0]],a.dtype,h),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var ay=n(3849);const sy={kernelName:c.SparseReshape,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=(0,ay.U)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};var iy=n(3989);const oy={kernelName:c.SparseSegmentMean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=(0,iy.V)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},uy={kernelName:c.SparseSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=(0,iy.V)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},ly={kernelName:c.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:d,strides:p,outputSize:h}=c.backend_util.calculateShapes(s,a,o),f=Bg(n.bufferSync(a),n.bufferSync(s),o,h,d,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,f.dtype,f.values)}},cy={kernelName:c.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=c.util.parseAxisParam(i,a.shape)[0],u=c.backend_util.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[o]=e;const r=(0,Wh.tP)({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},dy=(0,Wp.A)(c.Sqrt,(e=>Math.sqrt(e))),py={kernelName:c.Sqrt,backendName:"cpu",kernelFunc:dy},hy={kernelName:c.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,Bp.H)(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var fy=n(212);const my=(0,Wp.A)(c.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),gy={kernelName:c.Step,backendName:"cpu",kernelFunc:my};var yy=n(2210);const by={kernelName:c.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:d,newAxisMask:p,shrinkAxisMask:h}=r;(0,Bp.H)(a,"stridedSlice");const{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=c.slice_util.sliceInfo(a.shape,s,i,o,u,l,d,p,h),v=ih({inputs:{x:a},backend:n,attrs:{shape:b}});let w;if(f){const e=(0,Wh.tP)({inputs:{x:v},backend:n,attrs:{begin:m,size:y}});w=ih({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))w=n.makeTensorInfo(x,a.dtype,[]);else{const e=n.bufferSync(v),t=(0,yy.t)(x,e,g,m);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const k=ih({inputs:{x:w},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),k}};var xy=n(6841);const vy={kernelName:c.StringNGrams,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,p=n.data.get(c.dataId).values,h=n.data.get(d.dataId).values,[f,m]=(0,xy.A)(p,h,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};var wy=n(8639);const ky={kernelName:c.StringSplit,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=(0,wy.Q)(o,u,a),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};var Iy=n(6626);const Sy={kernelName:c.StringToHashBucketFast,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(s.dataId).values,o=(0,Iy.h)(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},Ny=(0,Wp.A)(c.Tan,(e=>Math.tan(e))),Ty={kernelName:c.Tan,backendName:"cpu",kernelFunc:Ny},Cy=(0,Wp.A)(c.Tanh,(e=>Math.tanh(e))),_y={kernelName:c.Tanh,backendName:"cpu",kernelFunc:Cy};var Ay=n(7723);const Ey={kernelName:c.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;(0,Bp.H)(a,"tile");const i=(0,Ay.R)(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var $y=n(9556);const Ry={kernelName:c.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;(0,Bp.H)(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=(0,$y.W)(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Fy={kernelName:c.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[d,p,h,f]=a.shape,[m,g]=null!=l?l:[p,h],y=[d,m,g,f],b=c.util.computeStrides(a.shape),x=b[0],v=b[1],w=b[2],k=c.util.getTypedArrayFromDType(a.dtype,c.util.sizeFromShape(y));k.fill(u);const I=r.data.get(a.dataId).values,S=r.data.get(s.dataId).values;for(let e=0;e<d;++e){const t=1===s.shape[0]?S:S.subarray(8*e,8*e+8);for(let n=0;n<m;++n)for(let r=0;r<g;++r)for(let a=0;a<f;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=Dy(c,h,o),m=Dy(d,p,o);switch(i){case"nearest":s=Oy(I,p,h,x,v,w,e,m,f,a,u);break;case"bilinear":s=zy(I,p,h,x,v,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}k[e*x+n*v+r*w+a]=s}return r.makeTensorInfo(y,a.dtype,k)}return{dataId:r.write(k,y,a.dtype),shape:a.shape,dtype:a.dtype}}};function Dy(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return c.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return c.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return c.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function My(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function Oy(e,t,n,r,a,s,i,o,u,l,c){return My(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function zy(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),p=Math.floor(u),h=d+1,f=p+1;return(h-o)*((f-u)*My(e,t,n,r,a,s,i,d,p,l,c)+(u-p)*My(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*My(e,t,n,r,a,s,i,h,p,l,c)+(u-p)*My(e,t,n,r,a,s,i,h,f,l,c))}var Ly=n(5638);const By={kernelName:c.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;(0,Bp.H)(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,Ly.S)(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Py={kernelName:c.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[s]=e;const t=(0,Wh.tP)({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});p[e]=ih({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},Vy={kernelName:c.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;(0,Bp.H)(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let d=s;for(let e=0;e<l;++e){const t=Hf({inputs:{input:d},backend:n,attrs:{dim:e+1}});d=t,u.push(t)}for(let e=0;e<i;++e){const t=c.util.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=(0,Df.Dg)({inputs:{a:r,b:d},backend:n}),i=(0,qh.p)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=(0,_f.Jp)({inputs:{a:i,b:a},backend:n}),p=Ef({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(r),u.push(s),u.push(i),u.push(l),u.push(p)}const p=xg({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Wy=[ch,dh.fC,hh,mh,sh.j4,gh,bh,xh,vh,wh,Ih,Nh,Ch,$h,Fh,zh,Lh,Bh,Ph,lh,Vh,Uh,Gh,qh.M,jh.y2,Kh,Yh.z,Qh,rf,of,uf,sf,cf,df,lf,hf,mf,gf,yf,bf,xf,wf,kf,If,Sf,Nf,Cf,Tf,Kf,Rf,Hp,Ff,Df.Kx,Wf,Uf.SX,Gf,qf.Vu,em,nm,rm,am.Ao,om,um,lm,dm,hm,fm.Ce,mm.V,Gp.I,gm,ef,bm,vm,km,jp,Im.zh,Sm.m3,Tm,Cm.xM,Am,Rm,Dm,zm,Lm,Bm,Hm.eJ,Gm,qm,jm,Xm,Km,Um,Ym,Qm,Zm.u0,Jm,ng,ig,_f.f$,og.AF,lg,dg,hg,fg.nP,mg,bg,vg,wg,Sg,Qp,Ng.Iz,Cg,tf.O,Ag,Jp,th,oh,Eg,$g,Rg,Fg,Dg,Mg,zg,Lg.FY,Pg,Vg,Gg,rh,jg,Kg,Qg,Wh.C6,sg,ey,ty,ry,sy,oy,uy,ly,cy,py,hy,fy.MS,gy,by,vy,ky,Sy,Yf.GR,$f,Ty,_y,Ey,Ry,yh.b,Fy,By,Py,Vy,yg];for(const e of Wy)(0,c.registerKernel)(e);var Uy=n(6920);const Hy={"tfjs-core":c.version_core,"tfjs-backend-cpu":"3.8.0","tfjs-backend-webgl":Uy.version_webgl,"tfjs-data":Lp,"tfjs-layers":oo,"tfjs-converter":$d.gJ,tfjs:"3.8.0"}},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=h)return k}else{if(e<=-f)return I;if(e+1>=f)return w}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));s=s.mul(p).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var p=4294967296,h=p*p,f=h/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var v=i(-1);n.NEG_ONE=v;var w=u(-1,2147483647,!1);n.MAX_VALUE=w;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,h=0,f=0;return h+=(f+=s+(65535&e.low))>>>16,p+=(h+=a+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((h&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,h=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*h)>>>16,y+=(b+=s*h)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=a*h)>>>16,y&=65535,f+=(y+=s*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*h+a*p+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(v)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:v:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),h=p.mul(e);h.isNegative()||h.gt(a);)h=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),s=s.add(p),a=a.sub(h)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),a=n(8652),s=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(a,s){var i,o=(0,eval)("this"),u=256,l=s.pow(u,6),c=s.pow(2,52),d=2*c,p=255;function h(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),h=new f(r),x=function(){for(var e=h.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=h.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|h.g(4)},x.quick=function(){return h.g(4)/4294967296},x.double=x,y(b(h.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,h),e.state=function(){return m(h,{})}),n?(s.random=e,t):e})(x,p,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=h,y(s.random(),a),e.exports){e.exports=h;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return h}.call(t,n,t,e))||(e.exports=r)}([],Math)},4639:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.getBrowserType=t.BrowserType=void 0,function(e){e[e.MSIE=0]="MSIE",e[e.EDGE=1]="EDGE",e[e.CHROME=2]="CHROME",e[e.SAFARI=3]="SAFARI",e[e.FIREFOX=4]="FIREFOX",e[e.OPERA=5]="OPERA",e[e.OTHER=6]="OTHER"}(n=t.BrowserType||(t.BrowserType={})),t.getBrowserType=function(){var e=window.navigator.userAgent.toLowerCase();return-1!==e.indexOf("msie")||-1!==e.indexOf("trident")?n.MSIE:-1!==e.indexOf("edge")?n.EDGE:-1!==e.indexOf("chrome")?n.CHROME:-1!==e.indexOf("safari")?n.SAFARI:-1!==e.indexOf("firefox")?n.FIREFOX:-1!==e.indexOf("opera")?n.OPERA:n.OTHER}},1454:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))},o=this&&this.__generator||function(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!((a=(a=i.trys).length>0&&a[a.length-1])||6!==s[0]&&2!==s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}};Object.defineProperty(t,"__esModule",{value:!0});var u,l=n(3970),c=s(n(1247)),d=s(n(6542)),p=n(4639),h=self,f=function(e){return i(void 0,void 0,void 0,(function(){return o(this,(function(t){switch(t.label){case 0:return e.useTFWasmBackend||e.browserType===p.BrowserType.SAFARI?(console.log("use wasm backend"),n(2178),[4,d.setBackend("wasm")]):[3,2];case 1:return t.sent(),[3,4];case 2:return console.log("use webgl backend"),n(6920),[4,d.setBackend("webgl")];case 3:t.sent(),t.label=4;case 4:return[2]}}))}))},m=function(e,t,n){return i(void 0,void 0,void 0,(function(){var t,r,a,s,i,c;return o(this,(function(o){switch(o.label){case 0:return t=n.processWidth<=0||n.processHeight<=0?e.width:n.processWidth,r=n.processWidth<=0||n.processHeight<=0?e.height:n.processHeight,a=new OffscreenCanvas(t,r),(s=a.getContext("2d")).drawImage(e,0,0,t,r),i=s.getImageData(0,0,t,r),n.type!==l.BodypixFunctionType.SegmentPerson?[3,2]:[4,u.segmentPerson(i,n.segmentPersonParams)];case 1:return c=o.sent(),[3,10];case 2:return n.type!==l.BodypixFunctionType.SegmentPersonParts?[3,4]:[4,u.segmentPersonParts(i,n.segmentPersonPartsParams)];case 3:return c=o.sent(),[3,10];case 4:return n.type!==l.BodypixFunctionType.SegmentMultiPerson?[3,6]:[4,u.segmentMultiPerson(i,n.segmentMultiPersonParams)];case 5:return c=o.sent(),[3,10];case 6:return n.type!==l.BodypixFunctionType.SegmentMultiPersonParts?[3,8]:[4,u.segmentMultiPersonParts(i,n.segmentMultiPersonPartsParams)];case 7:return c=o.sent(),[3,10];case 8:return[4,u.segmentPerson(i,n.segmentPersonParams)];case 9:c=o.sent(),o.label=10;case 10:return[2,c]}}))}))};onmessage=function(e){return i(void 0,void 0,void 0,(function(){var t,n,r,a,s;return o(this,(function(i){switch(i.label){case 0:return e.data.message!==l.WorkerCommand.INITIALIZE?[3,2]:(t=e.data.config,[4,f(t)]);case 1:return i.sent(),c.load(e.data.config.model).then((function(t){console.log("bodypix loaded default",e.data.config),u=t,h.postMessage({message:l.WorkerResponse.INITIALIZED})})),[3,4];case 2:return e.data.message!==l.WorkerCommand.PREDICT?[3,4]:(t=e.data.config,n=e.data.image,r=e.data.uid,a=e.data.params,[4,m(n,0,a)]);case 3:s=i.sent(),h.postMessage({message:l.WorkerResponse.PREDICTED,uid:r,prediction:s}),i.label=4;case 4:return[2]}}))}))}},3970:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.BodypixFunctionType=t.ModelConfigMobileNetV1_05=t.ModelConfigMobileNetV1=t.ModelConfigResNet=t.WorkerResponse=t.WorkerCommand=void 0,t.WorkerCommand={INITIALIZE:"initialize",PREDICT:"predict"},t.WorkerResponse={INITIALIZED:"initialized",PREDICTED:"predicted"},t.ModelConfigResNet={architecture:"ResNet50",outputStride:32,quantBytes:2},t.ModelConfigMobileNetV1={architecture:"MobileNetV1",outputStride:16,multiplier:.75,quantBytes:2},t.ModelConfigMobileNetV1_05={architecture:"MobileNetV1",outputStride:16,multiplier:.5,quantBytes:2},(n=t.BodypixFunctionType||(t.BodypixFunctionType={}))[n.SegmentPerson=0]="SegmentPerson",n[n.SegmentMultiPerson=1]="SegmentMultiPerson",n[n.SegmentPersonParts=2]="SegmentPersonParts",n[n.SegmentMultiPersonParts=3]="SegmentMultiPersonParts"},914:()=>{},7256:()=>{},8158:()=>{},2980:()=>{},4862:()=>{},7958:()=>{},5410:()=>{},8628:()=>{},5778:()=>{},1601:()=>{},7792:()=>{},5042:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}return n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(1454)})()}));