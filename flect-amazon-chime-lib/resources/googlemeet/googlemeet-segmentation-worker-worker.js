/*! For license information please see googlemeet-segmentation-worker-worker.js.LICENSE.txt */
!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)("object"==typeof exports?exports:e)[r]=n[r]}}("undefined"!=typeof self?self:this,(function(){return(()=>{var e={8166:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(8433);function a(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}},224:(e,t,n)=>{"use strict";n.d(t,{bk:()=>s,fC:()=>i});var r=n(8433),a=n(8166);function s(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const i={kernelName:r.SYM,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;(0,a.H)(t,"abs");let i=new Float32Array(r.D5U.sizeFromShape(t.shape));return i=s(n.data.get(t.dataId).values),n.makeOutput(i,t.shape,"float32")}}},2779:(e,t,n)=>{"use strict";n.d(t,{EH:()=>i,IH:()=>u,j4:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e+t)),o=(0,s.H)(((e,t,n,r)=>({real:e+n,imag:t+r}))),u=(0,s.j)(r.mm_,i,o),l={kernelName:r.mm_,backendName:"cpu",kernelFunc:u}},8607:(e,t,n)=>{"use strict";n.d(t,{W:()=>a,i:()=>s});var r=n(8433);function a(e,t,n,a,s){const i=r.D5U.sizeFromShape(a),o=r.D5U.makeZerosTypedArray(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(o[r]+=i>0?t[n]:1)}return o}function s(e,t,n,a=!1){const s=e.shape[0],i=e.shape[1],o=(0,r.f3b)([s,n],t.dtype);for(let r=0;r<s;r++)for(let s=0;s<i;s++){const i=e.get(r,s);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(a?o.set(1,r,i):t.size>0?o.set(o.get(r,i)+t.get(r,s),r,i):o.set(o.get(r,i)+1,r,i))}return o}},9258:(e,t,n)=>{"use strict";n.d(t,{p:()=>l,M:()=>c});var r=n(8433),a=n(3533),s=n(4391),i=n(6961),o=n(1775),u=n(2186);function l(e){const{inputs:t,backend:n,attrs:c}=e,{x:p}=t,{dtype:h}=c;if("complex64"===h){if("complex64"===p.dtype)return(0,o.y)({inputs:{x:p},backend:n});const e=(0,s.l)(n,p.shape,p.dtype),t=l({inputs:{x:p},backend:n,attrs:{dtype:"float32"}}),r=(0,i.P)({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===p.dtype){const e=(0,u.k)({inputs:{input:p},backend:n}),t=l({inputs:{x:e},backend:n,attrs:{dtype:h}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.hasEncodingLoss(p.dtype,h)){const e=(0,o.y)({inputs:{x:p},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:h}}if("int32"===h){const e=n.data.get(p.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(p.shape,"int32",t)}if("bool"===h){const e=n.data.get(p.dataId).values,t=r.D5U.toTypedArray([0],p.dtype),[s,i]=(0,a.b)(((e,t)=>e!==t?1:0))(p.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${p.dtype} to ${h}`)}const c={kernelName:r.RFZ,backendName:"cpu",kernelFunc:l}},4769:(e,t,n)=>{"use strict";n.d(t,{__:()=>i,y2:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.ceil(e))),o=(0,s.O)(r.gJX,i),u={kernelName:r.gJX,backendName:"cpu",kernelFunc:o}},6961:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}n.d(t,{P:()=>r,z:()=>a});const a={kernelName:n(8433).Zz9,backendName:"cpu",kernelFunc:r}},8926:(e,t,n)=>{"use strict";n.d(t,{j:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.sizeFromShape(e.shape);s.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{const i="string"===n?r.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+a;for(let t=0;t<e.shape[1];++t)s[r+t]=i[o++]}a+=e.shape[1]}))}return s}},7679:(e,t,n)=>{"use strict";n.d(t,{tW:()=>i,Dg:()=>o,Kx:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e===t?1:0)),o=(0,s.j)(r.hdR,i,null,"bool"),u={kernelName:r.hdR,backendName:"cpu",kernelFunc:o}},1211:(e,t,n)=>{"use strict";n.d(t,{Ro:()=>i,Qq:()=>o,SX:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.exp(e))),o=(0,s.O)(r.NEP,i),u={kernelName:r.NEP,backendName:"cpu",kernelFunc:o}},969:(e,t,n)=>{"use strict";n.d(t,{OF:()=>i,Vu:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.expm1(e))),o=(0,s.O)(r.Y0y,i),u={kernelName:r.Y0y,backendName:"cpu",kernelFunc:o}},6574:(e,t,n)=>{"use strict";n.d(t,{r6:()=>i,Ao:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.floor(e))),o=(0,s.O)(r.OR,i),u={kernelName:r.OR,backendName:"cpu",kernelFunc:o}},1820:(e,t,n)=>{"use strict";n.d(t,{m:()=>a});var r=n(8433);function a(e,t,n,a,s,i,o,u,l){const c=(0,r.f3b)([a,i],n);for(let n=0;n<a;n++){const r=[];let a=0;for(let t=0;t<s;t++){const i=e[n*s+t];a+=i*o[t],r.push(i)}if(a<0||a>=l/i)throw new Error(`Invalid indices: ${r} does not index into ${u}`);for(let e=0;e<i;e++)c.values[n*i+e]=t.get(...t.indexToLoc(a*i+e))}return c}},4468:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var r=n(8433);function a(e,t,n){const a=(0,r.f3b)(n,e.dtype);for(let n=0;n<a.size;++n){const r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];const u=e.locToIndex(r);a.values[n]=e.values[u]}return a}},6272:(e,t,n)=>{"use strict";n.d(t,{o:()=>i,Ce:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e>t?1:0)),o=(0,s.j)(r.iZT,i,null,"bool"),u={kernelName:r.iZT,backendName:"cpu",kernelFunc:o}},6259:(e,t,n)=>{"use strict";n.d(t,{HL:()=>i,V:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e>=t?1:0)),o=(0,s.j)(r.Acj,i,null,"bool"),u={kernelName:r.Acj,backendName:"cpu",kernelFunc:o}},1775:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}n.d(t,{y:()=>r,I:()=>a});const a={kernelName:n(8433).iJz,backendName:"cpu",kernelFunc:r}},8405:(e,t,n)=>{"use strict";n.d(t,{rO:()=>i,zh:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e<t?1:0)),o=(0,s.j)(r.vtC,i,null,"bool"),u={kernelName:r.vtC,backendName:"cpu",kernelFunc:o}},635:(e,t,n)=>{"use strict";n.d(t,{lx:()=>i,m3:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e<=t?1:0)),o=(0,s.j)(r.CAk,i,null,"bool"),u={kernelName:r.CAk,backendName:"cpu",kernelFunc:o}},1325:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e,t,n){const a=(t-e)/(n-1),s=r.D5U.makeZerosTypedArray(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+a;return s}},5223:(e,t,n)=>{"use strict";n.d(t,{vX:()=>i,xM:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>Math.log(e))),o=(0,s.O)(r.ZbH,i),u={kernelName:r.ZbH,backendName:"cpu",kernelFunc:o}},5126:(e,t,n)=>{"use strict";n.d(t,{B:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.D5U.getTypedArrayFromDType(a,r.D5U.sizeFromShape(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}},1717:(e,t,n)=>{"use strict";n.d(t,{wS:()=>i,eJ:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>Math.max(e,t))),o=(0,s.j)(r.BMI,i),u={kernelName:r.BMI,backendName:"cpu",kernelFunc:o}},612:(e,t,n)=>{"use strict";n.d(t,{vP:()=>i,u0:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>Math.min(e,t))),o=(0,s.j)(r.q8u,i),u={kernelName:r.q8u,backendName:"cpu",kernelFunc:o}},1917:(e,t,n)=>{"use strict";n.d(t,{$3:()=>i,Jp:()=>u,f$:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e*t)),o=(0,s.H)(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),u=(0,s.j)(r.wYn,i,o),l={kernelName:r.wYn,backendName:"cpu",kernelFunc:u}},854:(e,t,n)=>{"use strict";n.d(t,{uC:()=>i,AF:()=>o});var r=n(8433),a=n(8166),s=n(1917);function i(e,t,n){const a=r.D5U.createScalarValue(-1,n);return(0,s.$3)([],t,a,e,n)}const o={kernelName:r.kuV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;(0,a.H)(r,"neg");const s=n.data.get(r.dataId).values,[o,u]=i(s,r.shape,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}}},8584:(e,t,n)=>{"use strict";n.d(t,{Gj:()=>i,nP:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e!==t?1:0)),o=(0,s.j)(r.yQU,i,null,"bool"),u={kernelName:r.yQU,backendName:"cpu",kernelFunc:o}},9560:(e,t,n)=>{"use strict";n.d(t,{Qg:()=>i,Iz:()=>o});var r=n(8433),a=n(8166),s=n(4802);function i(e,t,n,a){const[s,i]=r.Wap.computeOutAndReduceShapes(e,a),o=(0,r.x8V)(t,"int32"),u=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(s),o),l=r.D5U.sizeFromShape(i);for(let e=0;e<u.length;++e){const t=e*l;let r=1;for(let e=0;e<l;++e)r*=n[t+e];u[e]=r}return{outVals:u,outShape:s,outDtype:o}}const o={kernelName:r.DlI,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:o}=e,{x:u}=t,{axis:l,keepDims:c}=o;(0,a.H)(u,"prod");const p=u.shape.length,h=r.D5U.parseAxisParam(l,u.shape),d=r.Wap.getAxesPermutation(h,p);let f=h,m=u;const g=[];null!=d&&(m=(0,s.p)({inputs:{x:u},backend:n,attrs:{perm:d}}),g.push(m),f=r.Wap.getInnerMostAxes(f.length,p));const y=n.data.get(m.dataId).values,{outVals:b,outShape:x,outDtype:w}=i(m.shape,m.dtype,y,f);let v=x;return c&&(v=r.Wap.expandShapeToKeepDim(x,h)),g.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(v,w,b)}}},9230:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.makeZerosTypedArray(0,a);const s=Math.abs(Math.ceil((t-e)/n)),i=r.D5U.makeZerosTypedArray(s,a);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}},2186:(e,t,n)=>{"use strict";function r(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}n.d(t,{k:()=>r,O:()=>a});const a={kernelName:n(8433).xJR,backendName:"cpu",kernelFunc:r}},7742:(e,t,n)=>{"use strict";n.d(t,{zd:()=>i,FY:()=>u});var r=n(8433),a=n(8029),s=n(6738);const i=(0,a.a)((e=>1/Math.sqrt(e))),o=(0,s.O)(r.bV0,i),u={kernelName:r.bV0,backendName:"cpu",kernelFunc:o}},2578:(e,t,n)=>{"use strict";n.d(t,{rT:()=>s,tP:()=>i,C6:()=>o});var r=n(8433),a=n(8166);function s(e,t,n,a,s){const i=r.kuN.isSliceContinous(a,t,n),o=r.D5U.sizeFromShape(n),u=r.D5U.computeStrides(a);if(i){const n=r.kuN.computeFlatOffset(t,u);return"string"===s?e.slice(n,n+o):e.subarray(n,n+o)}const l="string"===s?r.Wap.fromUint8ToStringArray(e):e,c=(0,r.f3b)(a,s,l),p=(0,r.f3b)(n,s);for(let e=0;e<p.size;++e){const n=p.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));p.set(c.get(...r),...n)}return"string"===s?r.Wap.fromStringArrayToUint8(p.values):p.values}function i(e){const{inputs:t,backend:n,attrs:i}=e,{x:o}=t,{begin:u,size:l}=i;(0,a.H)(o,"slice");const[c,p]=r.kuN.parseSliceParams(o,u,l);r.kuN.assertParamsValid(o,c,p);const h=s(n.data.get(o.dataId).values,c,p,o.shape,o.dtype);return n.makeTensorInfo(p,o.dtype,h)}const o={kernelName:r.p2w,backendName:"cpu",kernelFunc:i}},2123:(e,t,n)=>{"use strict";n.d(t,{c:()=>a});var r=n(8433);function a(e,t,n,a,s,i,o){const u=t[0],l=i[0],c=new Array(l),p=new Array(u),h=t[1];if(0===l){if(0!==u)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${u}`);return[r.D5U.getArrayFromDType(n,0),[0,h],r.D5U.getArrayFromDType(s,0),c,p]}let d=!0,f=0;const m=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=l)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${l}`);++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<l;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=a;for(let e=0;e<u;++e)p[e]=e;return[t,[u,h],n,c,p]}{const t=m[l-1],i=r.D5U.getArrayFromDType(n,t*h),d=r.D5U.getArrayFromDType(s,t),f=new Array(l).fill(0);for(let t=0;t<u;++t){const n=e[t*h],r=f[n],s=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<h;++n)i[s*h+n]=e[t*h+n];d[s]=a[t],p[t]=s}for(let e=0;e<l;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=o}return[i,[t,h],d,c,p]}}},3849:(e,t,n)=>{"use strict";n.d(t,{U:()=>a});var r=n(8433);function a(e,t,n,a,s){const i=r.D5U.sizeFromShape(a),o=t[0],u=s.length,l=[];let c=1,p=-1;for(let e=0;e<u;++e){const t=s[e];if(-1===t){if(-1!==p)throw new Error(`only one output dimension may be -1, not both ${p} and ${e}`);p=e,l.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,l.push(t)}}if(-1!==p){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${a} outputShape= ${l}`);l[p]=e}const h=r.D5U.sizeFromShape(l);if(h!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${h}. inputShape=${a} outputShape=${l}`);const d=a.length,f=[];if(d>0){f[d-1]=1;for(let e=d-2;e>=0;--e)f[e]=f[e+1]*a[e+1]}const m=[];if(u>0){m[u-1]=1;for(let e=u-2;e>=0;--e)m[e]=m[e+1]*l[e+1]}const g=r.D5U.getArrayFromDType(n,o*u);for(let t=0;t<o;++t){let n=0;for(let r=0;r<d;++r)n+=e[t*d+r]*f[r];for(let e=0;e<u;++e)g[t*u+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,u],l]}},3989:(e,t,n)=>{"use strict";n.d(t,{V:()=>a});var r=n(8433);function a(e,t,n,a,s,i=!1,o=0){const u=a.length;if(u!==s.length)throw new Error("segmentIds and indices should have same size.");const l=[t[0],e.length/t[0]],c=l[1],p=u>0?s[u-1]+1:0;if(p<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=p;const d=h.reduce(((e,t)=>e*t),1),f=r.D5U.getArrayFromDType(n,d);if(0===u)return p>0&&f.fill(o),[f,h];if(p<=0)throw new Error("segment ids must be >= 0");let m=0,g=1,y=0,b=s[m];for(;;){let t=0;if(g<u){if(t=s[g],b===t){++g;continue}if(b>=t)throw new Error("segment ids are not increasing")}if(b<0||b>=p)throw new Error(`Segment id ${b} out of range [0, ${p}), possibly because segmentIds input is not sorted.`);b>y&&f.fill(o,y*c,b*c);for(let t=m;t<g;++t){const n=a[t];if(n<0||n>=l[0])throw new Error(`Bad: indices[${t}] == ${a[t]} out of range [0, ${l[0]})`);for(let t=0;t<c;t++)f[b*c+t]+=e[n*c+t]}if(i)for(let e=0;e<c;e++)f[b*c+e]/=g-m;if(m=g,++g,y=b+1,b=t,g>u)break}return y<p&&f.fill(o,y*c,p*c),[f,h]}},212:(e,t,n)=>{"use strict";n.d(t,{Hz:()=>i,MS:()=>u});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>{const n=e-t;return n*n})),o=(0,s.j)(r._tC,i),u={kernelName:r._tC,backendName:"cpu",kernelFunc:o}},2210:(e,t,n)=>{"use strict";n.d(t,{t:()=>a});var r=n(8433);function a(e,t,n,a){const s=(0,r.f3b)(e,t.dtype);for(let e=0;e<s.size;e++){const r=s.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+a[e];s.set(t.get(...i),...r)}return s}},6841:(e,t,n)=>{"use strict";n.d(t,{A:()=>s});var r=n(8433);class a{constructor(e,t,n,a,s,i){this.separator=r.D5U.encodeString(e),this.nGramWidths=t,this.leftPad=r.D5U.encodeString(n),this.rightPad=r.D5U.encodeString(a),this.padWidth=s,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),p=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[p+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[p+t]),m(this.separator);if(c>0){m(e[p+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=a-1,i=r.D5U.getArrayFromDType("int32",a);if(0===n||0===a){const e=new Array(n);for(let e=0;e<=s;++e)i[e]=0;return[e,i]}i[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),i[e]=i[e-1]+r}const o=new Array(i[s]);for(let n=0;n<s;++n){const r=t[n];let a=i[n];if(this.nGramWidths.forEach((s=>{const i=t[n+1]-t[n],u=this.getNumNGrams(i,s);this.createNGrams(e,r,o,a,u,s),a+=u})),this.preserveShort&&a===i[n]){const s=t[n+1]-t[n];if(0===s)continue;const i=s+2*this.padWidth,u=1;this.createNGrams(e,r,o,a,u,i)}}return[o,i]}}function s(e,t,n,r,s,i,o,u){return new a(n,r,s,i,o,u).compute(e,t)}},8639:(e,t,n)=>{"use strict";n.d(t,{Q:()=>s});var r=n(8433);function a(e,t,n){if(!e.length)return[];if(0===t.length){const t=new Array(e.length);for(let n=0;n<e.length;++n)t[n]=e.subarray(n,n+1);return t}if(1===t.length){const r=t[0],a=[];let s=e.indexOf(r);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return n&&0===e.length||a.push(e),a}const r=[];let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}return r}function s(e,t,n){const s=e.length,i=[];let o=0,u=0;const l=new Array(s);for(let r=0;r<s;++r){const s=a(e[r],t,n),c=s.length;l[r]=c,o+=c,u=Math.max(u,c),i.push(...s)}const c=r.D5U.getArrayFromDType("int32",2*o),p=new Array(o),h=[s,u];let d=0;for(let e=0;e<s;++e)for(let t=0;t<l[e];++t)c[2*d]=e,c[2*d+1]=t,p[d]=i[d],++d;return[c,p,h]}},6626:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var r=n(8433);function a(e,t){const n=r.D5U.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=r.D5U.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}},1649:(e,t,n)=>{"use strict";n.d(t,{VY:()=>i,lu:()=>u,GR:()=>l});var r=n(8433),a=n(3533),s=n(6205);const i=(0,a.b)(((e,t)=>e-t)),o=(0,s.H)(((e,t,n,r)=>({real:e-n,imag:t-r}))),u=(0,s.j)(r.Tr8,i,o),l={kernelName:r.Tr8,backendName:"cpu",kernelFunc:u}},7723:(e,t,n)=>{"use strict";n.d(t,{R:()=>a});var r=n(8433);function a(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const a=(0,r.f3b)(n,e.dtype);for(let t=0;t<a.values.length;++t){const n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const s=e.locToIndex(r);a.values[t]=e.values[s]}return a}},9556:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(8433);const a=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function s(e,t,n=0,i=e.length-1){for(;i>n;){if(i-n>600){const r=i-n+1,a=t-n+1,o=Math.log(r),u=.5*Math.exp(2*o/3),l=.5*Math.sqrt(o*u*(r-u)/r)*Math.sign(a-r/2);s(e,t,Math.max(n,Math.floor(t-a*u/r+l)),Math.min(i,Math.floor(t+(r-a)*u/r+l)))}const o=e[t];let u=n,l=i;for(r.D5U.swap(e,n,t),a(e[i],o)>0&&r.D5U.swap(e,n,i);u<l;){for(r.D5U.swap(e,u,l),u++,l--;a(e[u],o)<0;)u+=1;for(;a(e[l],o)>0;)l-=1}0===a(e[n],o)?r.D5U.swap(e,n,l):(l+=1,r.D5U.swap(e,l,i)),l<=t&&(n=l+1),t<=l&&(i=l-1)}}function i(e,t,n,i,o){const u=t[t.length-1],[l,c]=[e.length/u,u],p=r.D5U.getTypedArrayFromDType(n,l*i),h=r.D5U.getTypedArrayFromDType("int32",l*i);for(let t=0;t<l;t++){const n=t*c,r=e.subarray(n,n+c);let u=new Array(r.length);r.forEach(((e,t)=>u[t]={value:e,index:t})),i<u.length&&(s(u,i),u=u.slice(0,i)),o&&u.sort(a);const l=t*i,d=p.subarray(l,l+i),f=h.subarray(l,l+i);for(let e=0;e<i;e++)d[e]=u[e].value,f[e]=u[e].index}const d=t.slice();return d[d.length-1]=i,[(0,r.f3b)(d,n,p),(0,r.f3b)(d,"int32",h)]}},4802:(e,t,n)=>{"use strict";n.d(t,{p:()=>i,b:()=>o});var r=n(8433),a=n(8166),s=n(7107);function i(e){const{inputs:t,attrs:n,backend:r}=e,{x:i}=t,{perm:o}=n;(0,a.H)(i,"transpose");const u=i.shape.length,l=new Array(u);for(let e=0;e<l.length;e++)l[e]=i.shape[o[e]];const c=r.data.get(i.dataId).values,p=(0,s.H)(c,i.shape,i.dtype,o,l);return{dataId:r.write(p,l,i.dtype),shape:l,dtype:i.dtype}}const o={kernelName:r.G3Y,backendName:"cpu",kernelFunc:i}},7107:(e,t,n)=>{"use strict";n.d(t,{H:()=>a});var r=n(8433);function a(e,t,n,a,s){const i=t.length,o=r.D5U.sizeFromShape(t),u=r.D5U.computeStrides(t),l=r.D5U.computeStrides(s),c=r.D5U.getTypedArrayFromDType(n,r.D5U.sizeFromShape(s));for(let t=0;t<o;++t){const n=r.D5U.indexToLoc(t,i,u),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[a[e]];c[r.D5U.locToIndex(s,i,l)]=e[t]}return c}},5638:(e,t,n)=>{"use strict";n.d(t,{S:()=>a});var r=n(8433);function a(e,t,n,a){const s=r.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<s;e++)i[0]*=n[e];i[1]=n[s];for(let e=s+1;e<n.length;e++)i[2]*=n[e];const o={},u=new Int32Array(n[s]),l=new r.YDk(i,a,e),c=[],p=1===i[0]&&1===i[2];for(let t=0;t<n[s];t++){let n;if(p)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(l.get(n,t,r));n=e.join(",")}if(void 0!==o[n])u[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,u[t]=e,c.push(t)}}const h=i.slice();h[1]=Object.keys(o).length;const d=new r.YDk(h,a);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)d.set(l.get(n,e,r),n,t,r)}));const f=n.slice();return f[s]=h[1],{outputValues:d.values,outputShape:f,indices:u}}},3533:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var r=n(8433);function a(e){return(t,n,a,s,i)=>{const o=r.Wap.assertAndGetBroadcastShape(t,n),u=o.length,l=r.D5U.computeStrides(o),c=r.D5U.sizeFromShape(o),p=r.D5U.getTypedArrayFromDType(i,c),h=t.length,d=n.length,f=r.D5U.computeStrides(t),m=r.D5U.computeStrides(n),g=r.Wap.getBroadcastDims(t,o),y=r.Wap.getBroadcastDims(n,o);if(g.length+y.length===0)for(let t=0;t<p.length;++t)p[t]=e(a[t%a.length],s[t%s.length]);else for(let t=0;t<p.length;++t){const n=r.D5U.indexToLoc(t,u,l),i=n.slice(-h);g.forEach((e=>i[e]=0));const o=r.D5U.locToIndex(i,h,f),c=n.slice(-d);y.forEach((e=>c[e]=0));const b=r.D5U.locToIndex(c,d,m);p[t]=e(a[o],s[b])}return[p,o]}}},6205:(e,t,n)=>{"use strict";n.d(t,{j:()=>o,H:()=>u});var r=n(8433),a=n(8166),s=n(9258),i=n(6961);function o(e,t,n,o){return null==n?({inputs:n,backend:s})=>{const{a:i,b:u}=n,l=s;(0,a.H)([i,u],e);const c=l.data.get(i.dataId).values,p=l.data.get(u.dataId).values,h="string"===i.dtype?r.Wap.fromUint8ToStringArray(c):c,d="string"===i.dtype?r.Wap.fromUint8ToStringArray(p):p,f=o||i.dtype,[m,g]=t(i.shape,u.shape,h,d,f);return l.makeTensorInfo(g,f,m)}:({inputs:e,backend:r})=>{const{a,b:u}=e,l=r;if("complex64"===a.dtype||"complex64"===u.dtype){const e=(0,s.p)({inputs:{x:a},backend:l,attrs:{dtype:"complex64"}}),t=l.data.get(e.dataId),r=t.complexTensorInfos.real,o=t.complexTensorInfos.imag,c=l.data.get(r.dataId).values,p=l.data.get(o.dataId).values,h=(0,s.p)({inputs:{x:u},backend:l,attrs:{dtype:"complex64"}}),d=l.data.get(h.dataId),f=d.complexTensorInfos.real,m=d.complexTensorInfos.imag,g=l.data.get(f.dataId).values,y=l.data.get(m.dataId).values,[b,x,w]=n(a.shape,u.shape,c,p,g,y),v=l.makeTensorInfo(w,"float32",b),k=l.makeTensorInfo(w,"float32",x),I=(0,i.P)({inputs:{real:v,imag:k},backend:l});return l.disposeIntermediateTensorInfo(e),l.disposeIntermediateTensorInfo(h),l.disposeIntermediateTensorInfo(v),l.disposeIntermediateTensorInfo(k),I}{const e=l.data.get(a.dataId).values,n=l.data.get(u.dataId).values,r=o||a.dtype,[s,i]=t(a.shape,u.shape,e,n,r);return l.makeTensorInfo(i,r,s)}}}function u(e){return(t,n,a,s,i,o)=>{const u=r.Wap.assertAndGetBroadcastShape(t,n),l=r.D5U.sizeFromShape(u),c=u.length,p=r.D5U.computeStrides(u),h=r.D5U.getTypedArrayFromDType("float32",l),d=r.D5U.getTypedArrayFromDType("float32",l),f=r.Wap.getBroadcastDims(t,u),m=r.Wap.getBroadcastDims(n,u),g=r.Wap.mergeRealAndImagArrays(a,s),y=r.Wap.mergeRealAndImagArrays(i,o),b=t.length,x=r.D5U.computeStrides(t),w=n.length,v=r.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<h.length;t++){const n=t%g.length,r=t%y.length,a=e(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);h[t]=a.real,d[t]=a.imag}else for(let t=0;t<h.length;t++){const n=r.D5U.indexToLoc(t,c,p),a=n.slice(-b);f.forEach((e=>a[e]=0));const s=r.D5U.locToIndex(a,b,x),i=n.slice(-w);m.forEach((e=>i[e]=0));const o=r.D5U.locToIndex(i,w,v),u=e(g[2*s],g[2*s+1],y[2*o],y[2*o+1]);h[t]=u.real,d[t]=u.imag}return[h,d,u]}}},8029:(e,t,n)=>{"use strict";n.d(t,{a:()=>a});var r=n(8433);function a(e){return(t,n,a)=>{const s=r.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],a);return s}}},6738:(e,t,n)=>{"use strict";n.d(t,{A:()=>s,O:()=>i});var r=n(8433),a=n(8166);function s(e,t,n){return({inputs:s,attrs:i,backend:o})=>{const{x:u}=s;if((0,a.H)(u,e),"string"===u.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const l=o,c=l.data.get(u.dataId).values,p=r.D5U.sizeFromShape(u.shape),h=n||u.dtype,d=r.D5U.getArrayFromDType(h,p);for(let e=0;e<p;++e)d[e]=t(c[e],i);return l.makeTensorInfo(u.shape,h,d)}}function i(e,t,n){return({inputs:r,attrs:s,backend:i})=>{const{x:o}=r;if((0,a.H)(o,e),"string"===o.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const u=i,l=u.data.get(o.dataId).values,c=n||o.dtype,p=t(l,c,s);return u.makeTensorInfo(o.shape,c,p)}}},4391:(e,t,n)=>{"use strict";n.d(t,{l:()=>s});var r=n(8433),a=n(6961);function s(e,t,n="float32"){if("complex64"===n){const n=s(e,t,"float32"),r=s(e,t,"float32");return(0,a.P)({inputs:{real:n,imag:r},backend:e})}const i=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,i)}},2948:(e,t,n)=>{var r=n(2140),a=n(9980),s=n(1730),i=n(1133),o=n(4026),u=n(865),l=n(8721);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},2140:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},9980:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},4026:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},1133:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},1730:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},8721:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(914)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},2178:(e,t,n)=>{"use strict";n.r(t),n.d(t,{BackendWasm:()=>ln,setWasmPath:()=>yn,setWasmPaths:()=>bn,version_wasm:()=>xn});var r,a,s=n(8433);let i;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(r||(r={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid"}(a||(a={}));const o={kernelName:s.usg,backendName:"wasm",setupFunc:function(e){i=e.wasm.cwrap(s.usg,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:o,bias:u,preluActivationWeights:l}=t;if("float32"!==s.dtype||"float32"!==o.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:c,transposeB:p,activation:h,leakyreluAlpha:d}=r,f=n.dataIdMap.get(s.dataId).id,m=n.dataIdMap.get(o.dataId).id;let g=0;if(null!=u){const e=n.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);g=e.id}const y=null==l?0:n.dataIdMap.get(l.dataId).id,b=a[h];if(null==b)throw new Error(`${h} activation not yet supported for FusedConv2D in the wasm backend.`);const x=c?s.shape[2]:s.shape[1],w=p?o.shape[1]:o.shape[2],v=s.shape[0],k=n.makeOutput([v,x,w],s.dtype),I=n.dataIdMap.get(k.dataId).id,S=new Uint8Array(new Int32Array(s.shape).buffer),N=new Uint8Array(new Int32Array(o.shape).buffer);return i(f,S,s.shape.length,m,N,o.shape.length,c,p,b,g,y,d||0,I),k}};function u(e){let t;return{kernelName:e,backendName:"wasm",setupFunc:function(n){t=n.wasm.cwrap(e,null,["number","number"])},kernelFunc:function(e){const{backend:n,inputs:{x:r}}=e,a=n.dataIdMap.get(r.dataId).id,i=n.makeOutput(r.shape,r.dtype),o=n.dataIdMap.get(i.dataId).id;return 0===s.D5U.sizeFromShape(i.shape)||t(a,o),i}}}const l=u(s.SYM);function c(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(i){const{backend:o,inputs:u}=i,{a:l,b:c}=u,p=o.dataIdMap.get(l.dataId).id,h=o.dataIdMap.get(c.dataId).id,d=null!=n?n:l.dtype,f=s.Wap.assertAndGetBroadcastShape(l.shape,c.shape),m=o.makeOutput(f,d);if(0===s.D5U.sizeFromShape(f))return m;const g=new Uint8Array(new Int32Array(l.shape).buffer),y=new Uint8Array(new Int32Array(c.shape).buffer),b=o.dataIdMap.get(m.dataId).id,x=()=>a(p,g,l.shape.length,h,y,c.shape.length,r[l.dtype],b);if(t&&"float32"===l.dtype)return x(),m;const w=s.Wap.getBroadcastDims(l.shape,f),v=s.Wap.getBroadcastDims(c.shape,f),k=w.every(((e,t)=>e===t)),I=v.every(((e,t)=>e===t));if(k&&I)return x(),m;throw new Error(`Broadcasting along outer dims is not yet supported for ${l.dtype} ${e}.`)}}}const p=c(s.mm_,!0);let h;const d={kernelName:s.Xze,backendName:"wasm",setupFunc:function(e){h=e.wasm.cwrap(s.Xze,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===s.D5U.sizeFromShape(a.shape))return a;const i=t.map((e=>n.dataIdMap.get(e.dataId).id)),o=new Uint8Array(new Int32Array(i).buffer),u=n.dataIdMap.get(a.dataId).id;return h(o,i.length,r[a.dtype],u),a}};function f(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const m={kernelName:s.iJz,backendName:"wasm",kernelFunc:f};let g;function y(e){const{inputs:t,backend:n,attrs:a}=e,[s,i]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,a.perm);let o=!0;for(let e=0;e<i.length;e++)i[e]!==e&&(o=!1);const u=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:s,dtype:t.x.dtype};if(o){const e=f({inputs:t,backend:n});return e.shape=u,e}const c=n.makeOutput(u,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(c.dataId).id,d=new Uint8Array(new Int32Array(i).buffer),m=new Uint8Array(new Int32Array(l.shape).buffer);return g(p,m,l.shape.length,r[l.dtype],h,d,i.length),c}const b={kernelName:s.G3Y,backendName:"wasm",kernelFunc:y,setupFunc:function(e){g=e.wasm.cwrap(s.G3Y,null,["number","array","number","number","number","array","number"])}};function x(e,t,n){const r=e.shape,a=e.shape.length,i=s.D5U.parseAxisParam(t,r);let o=i;const u=s.Wap.getAxesPermutation(o,a);let l=null,c=!1;if(null!=u){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[u[e]];o=s.Wap.getInnerMostAxes(o.length,a),l=y({inputs:{x:e},attrs:{perm:u},backend:n});const i=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==i&&(c=!0)}return{transposed:l,originalAxes:i,axes:o,inputWasTransposed:c}}let w;const v={kernelName:s.oT6,backendName:"wasm",setupFunc:function(e){w=e.wasm.cwrap(s.oT6,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:d}=x(o,a,t);d&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.Wap.assertAxesAreInnerMostDims("all",p,f);const[m,g]=s.Wap.computeOutAndReduceShapes(l.shape,p),y=s.D5U.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.D5U.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;w(u,y,e)}if(d&&t.disposeData(c.dataId),i){const e=s.Wap.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}};let k;const I={kernelName:s.IKK,backendName:"wasm",setupFunc:function(e){k=e.wasm.cwrap(s.IKK,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:d}=x(o,a,t);d&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.Wap.assertAxesAreInnerMostDims("any",p,f);const[m,g]=s.Wap.computeOutAndReduceShapes(l.shape,p),y=s.D5U.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.D5U.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;k(u,y,e)}if(d&&t.disposeData(c.dataId),i){const e=s.Wap.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}};let S;const N={kernelName:s.sJF,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i}=a,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:p,axes:h,inputWasTransposed:d}=x(o,i,t);if(d){const e=t.dataIdMap.get(p.dataId).id;e!==u&&(c=p,l=e)}const f=c.shape.slice(0,-1),m=t.makeOutput(f,"int32"),g=t.dataIdMap.get(m.dataId).id,y=s.D5U.sizeFromShape(m.shape),b=c.shape[h[0]];return S(l,r[c.dtype],y,b,g),d&&t.disposeData(p.dataId),m},setupFunc:function(e){S=e.wasm.cwrap(s.sJF,null,["number","number","number","number","number"])}};let T;const C={kernelName:s.JhU,backendName:"wasm",setupFunc:function(e){T=e.wasm.cwrap(s.JhU,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,p=s.Wap.computePool2DInfo(a.shape,o,u,1,l,c),h=p.filterHeight,d=p.filterWidth,f=p.padInfo.top,m=p.padInfo.right,g=p.padInfo.bottom,y=p.padInfo.left,b=p.strideHeight,x=p.strideWidth,w=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);const v=r.makeOutput(p.outShape,"float32"),k=r.dataIdMap.get(v.dataId).id;return T(i,a.shape[0],a.shape[1],a.shape[2],h,d,f,m,g,y,b,x,w,k),v}};function $(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,i=s.D5U.sizeFromShape(r.shape),o=s.D5U.inferFromImplicitShape(a,i);return s.D5U.assert(i===s.D5U.sizeFromShape(o),(()=>`new shape: ${o}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:o,dtype:r.dtype}}const A={kernelName:s.HZH,backendName:"wasm",kernelFunc:$};let E;const _={kernelName:s.XLW,backendName:"wasm",setupFunc:function(e){E=e.wasm.cwrap(s.XLW,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:i}=t,{transposeA:o,transposeB:u}=r;if("float32"!==a.dtype||"float32"!==i.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const l=a.shape.length,c=i.shape.length,p=o?a.shape[l-2]:a.shape[l-1],h=u?i.shape[c-1]:i.shape[c-2],d=o?a.shape[l-1]:a.shape[l-2],f=u?i.shape[c-2]:i.shape[c-1],m=a.shape.slice(0,-2),g=i.shape.slice(0,-2),y=s.D5U.sizeFromShape(m),b=s.D5U.sizeFromShape(g),x=y===b||1===y||1===b;s.D5U.assert(l>=2&&c>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`));const w=(y>b?a.shape.slice(0,-2):i.shape.slice(0,-2)).concat([d,f]);s.D5U.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${a.shape} and ${i.shape} and transposeA=${o} and transposeB=${u} must match.`));const v=u?[b,f,h]:[b,h,f],k=$({inputs:{x:a},backend:n,attrs:{shape:o?[y,p,d]:[y,d,p]}}),I=$({inputs:{x:i},backend:n,attrs:{shape:v}}),S=n.dataIdMap.get(k.dataId).id,N=n.dataIdMap.get(I.dataId).id,T=o?k.shape[2]:k.shape[1],C=u?I.shape[1]:I.shape[2],A=Math.max(y,b),_=n.makeOutput([A,T,C],k.dtype),D=n.dataIdMap.get(_.dataId).id,R=new Uint8Array(new Int32Array(k.shape).buffer),F=new Uint8Array(new Int32Array(I.shape).buffer);return E(S,R,k.shape.length,N,F,I.shape.length,o,u,D),n.disposeData(k.dataId),n.disposeData(I.dataId),_.shape=w,_}};var D=n(2578);function R(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[i,o]=s.kuN.parseSliceParams(t,n,r),u=s.kuN.isSliceContinous(t.shape,i,o),l=a.readSync(t.dataId),c=a.makeOutput(o,t.dtype),p=s.D5U.computeStrides(t.shape),h=a.dataIdMap.get(c.dataId);if(u){const e=s.kuN.computeFlatOffset(i,p);return"string"===t.dtype?h.stringBytes=l.slice(e,e+s.D5U.sizeFromShape(o)):a.typedArrayFromHeap(c).set(l.subarray(e,e+s.D5U.sizeFromShape(o))),c}if("string"===t.dtype){const e=(0,D.rT)(l,i,o,t.shape,t.dtype);return h.stringBytes=e,c}const d=a.typedArrayFromHeap(c),f=t.shape.length;if(2===f)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(l,p[0],d,i,o);else if(3===f)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],p=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<p;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(l,p[0],p[1],d,i,o);else if(4===f)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],p=u+i[0],h=l+i[1],d=c+i[2],f=s[3];for(let s=u;s<p;s++)for(let u=l;u<h;u++)for(let l=c;l<d;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(l,p[0],p[1],p[2],d,i,o);else{const e=(0,D.rT)(l,i,o,t.shape,t.dtype);d.set(e)}return c}const F={kernelName:s.p2w,backendName:"wasm",kernelFunc:R},O={kernelName:s.zws,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r,u=i.reduce(((e,t)=>e*t)),l=s.Wap.getReshaped(a.shape,i,u),c=s.Wap.getPermuted(l.length,i.length),p=s.Wap.getReshapedPermuted(a.shape,i,u),h=s.Wap.getSliceBeginCoords(o,i.length),d=s.Wap.getSliceSize(p,o,i.length),f=$({inputs:{x:a},backend:n,attrs:{shape:l}}),m=y({inputs:{x:f},backend:n,attrs:{perm:c}}),g=R({inputs:{x:$({inputs:{x:m},backend:n,attrs:{shape:p}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(f.dataId),n.disposeData(m.dataId),n.disposeData(f.dataId),g}};function M(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const z={kernelName:s.RFZ,backendName:"wasm",kernelFunc:M},B=u(s.gJX);let L;const W={kernelName:s.xnO,backendName:"wasm",setupFunc:function(e){L=e.wasm.cwrap(s.xnO,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return L(o,s,i,l),u}};var U=n(8926);function P(e){const{inputs:t,backend:n}=e,r=s.D5U.parseAxisParam(e.attrs.axis,t[0].shape)[0];let a=s.Wap.computeOutShape(t.map((e=>e.shape)),r);const i=t.filter((e=>s.D5U.sizeFromShape(e.shape)>0));if(1===i.length)return f({inputs:{x:i[0]},backend:n});const o=n.makeOutput(a,t[0].dtype);if(0===s.D5U.sizeFromShape(a))return o;const u=i.map((e=>e.shape));if(s.Wap.assertParamsConsistent(u,r),"string"===i[0].dtype){const e=i.map((e=>{const t=s.D5U.sizeFromShape(e.shape.slice(r));return $({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));a=s.Wap.computeOutShape(e.map((e=>e.shape)),1);const l=1===e[0].shape[0],c=(0,U.j)(u,a,t[0].dtype,l),p=s.Wap.computeOutShape(i.map((e=>e.shape)),r);return o.shape=p,n.dataIdMap.get(o.dataId).stringBytes=s.Wap.fromStringArrayToUint8(c),e.forEach((e=>n.disposeData(e.dataId))),o}const l=s.D5U.sizeFromShape(i[0].shape.slice(0,r));let c=0;const p=i.map((e=>{const t=s.D5U.sizeFromShape(e.shape.slice(r));return c+=t,t})),h=i.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*c;for(let n=0;n<h.length;n++){const r=p[n],a=e*r,s=h[n].subarray(a,a+r);d.set(s,t),t+=r}}return o}const V={kernelName:s.Eh3,backendName:"wasm",kernelFunc:P};let H;const G={kernelName:s.mhS,backendName:"wasm",setupFunc:function(e){H=e.wasm.cwrap(s.mhS,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:p,dimRoundingMode:h,dataFormat:d}=n,f=s.Wap.convertConv2DDataFormat(d),m=s.Wap.computeConv2DInfo(a.shape,i.shape,l,c,p,h,!1,f),g=m.filterHeight,y=m.filterWidth,b=m.padInfo.top,x=m.padInfo.right,w=m.padInfo.bottom,v=m.padInfo.left,k=m.dilationHeight,I=m.dilationWidth,S=m.strideHeight,N=m.strideWidth,T=m.inChannels,C=m.outChannels,$="SAME"===m.padInfo.type?1:0;if("channelsLast"!==m.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);const A=r.makeOutput(m.outShape,"float32"),E=r.dataIdMap.get(A.dataId).id;return H(o,a.shape[0],a.shape[1],a.shape[2],u,g,y,b,x,w,v,$,k,I,S,N,T,C,E),A}};let j;const q={kernelName:s.wm,backendName:"wasm",setupFunc:function(e){j=e.wasm.cwrap(s.wm,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:i}=n,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:p}=r,h=s.Wap.convertConv2DDataFormat(l),d=s.Wap.computeConv2DInfo(p,i.shape,o,1,u,c,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:v,outWidth:k,strideHeight:I,strideWidth:S}=d,N=m-1-d.padInfo.top,T=g-1-d.padInfo.left,C="channelsLast"===d.dataFormat,$=s.D5U.computeStrides(d.inShape),A=s.D5U.computeStrides(a.shape),[E,_,D]=s.D5U.computeStrides(i.shape),R=$[0],F=C?$[1]:$[2],O=C?$[2]:1,M=C?1:$[1],z=A[0],B=C?A[1]:A[2],L=C?A[2]:1,W=C?1:A[1],U=t.makeOutput(d.inShape,"float32"),P=t.dataIdMap.get(U.dataId).id,V=t.dataIdMap.get(a.dataId).id,H=t.dataIdMap.get(i.dataId).id;return j(V,H,f,m,g,b,x,y,v,k,w,I,S,N,T,E,_,D,R,F,O,M,z,B,L,W,P),U}},X=u(s.mc4),K=u(s.TR1);var Q;let Y;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Q||(Q={}));const J={kernelName:s.VcC,backendName:"wasm",setupFunc:function(e){Y=e.wasm.cwrap(s.VcC,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[p,h]=i,d=[c,p,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=M({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(d,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return Y(g,y,b,c,v,p,h,Q[a],s,w),null!=f&&t.disposeData(f.dataId),x}};let Z;const ee={kernelName:s.iHb,backendName:"wasm",setupFunc:function(e){Z=e.wasm.cwrap(s.iHb,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:i}=t,{axis:o,exclusive:u,reverse:l}=a,c=i.shape.length;s.D5U.assert("float32"===i.dtype||"int32"===i.dtype,(()=>`cumsum does not support ${i.dtype} tensors in the WASM backend`));const p=s.Wap.getAxesPermutation([o],c);let h=i;null!==p&&(h=y({inputs:{x:i},attrs:{perm:p},backend:n}));const d=s.Wap.getInnerMostAxes(1,c)[0];s.Wap.assertAxesAreInnerMostDims("cumsum",[d],c);const f=n.makeOutput(h.shape,h.dtype),m=h.shape[d],g=n.dataIdMap.get(h.dataId).id,b=n.dataIdMap.get(f.dataId).id;Z(g,u?1:0,l?1:0,m,b,r[i.dtype]);let x=f;return null!==p&&(x=y({inputs:{x:f},attrs:{perm:s.Wap.getUndoAxesPermutation(p)},backend:n}),n.disposeData(h.dataId),n.disposeData(f.dataId)),x}};let te;const ne={kernelName:s.T0n,backendName:"wasm",setupFunc:function(e){te=e.wasm.cwrap(s.T0n,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:i,dataFormat:o}=r;s.D5U.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const u=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],p="NHWC"===o?a.shape[3]:a.shape[1],h=l*i,d=c*i,f=p/(i*i),m="NHWC"===o?[u,h,d,f]:[u,f,h,d],g=t.makeOutput(m,"float32"),y=t.dataIdMap.get(a.dataId).id,b=new Uint8Array(new Int32Array(s.D5U.computeStrides(a.shape)).buffer),x=new Uint8Array(new Int32Array(m).buffer),w=new Uint8Array(new Int32Array(s.D5U.computeStrides(m)).buffer),v=t.dataIdMap.get(g.dataId).id;return te(y,i,"NHWC"===o?1:0,b,a.shape.length-1,x,w,m.length,v),g}};let re;const ae={kernelName:s.cie,backendName:"wasm",setupFunc:function(e){re=e.wasm.cwrap(s.cie,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:i}=t,o=r.dataIdMap.get(a.dataId).id,u=r.dataIdMap.get(i.dataId).id,{strides:l,dilations:c,pad:p,dimRoundingMode:h}=n,d=null==c?[1,1]:c,f=s.Wap.computeConv2DInfo(a.shape,i.shape,l,d,p,h,!0),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(f.outShape,"float32"),A=r.dataIdMap.get($.dataId).id;return re(o,a.shape[0],a.shape[1],a.shape[2],u,m,g,y,b,x,w,C,v,k,I,S,N,T,A),$}},se=c(s.hdR,!1,"bool"),ie=u(s.NEP);function oe(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:i}=n,o=a.shape.length,u=a.shape.slice();let l=i;return i<0&&(s.D5U.assert(-(o+1)<=i,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+i+1),u.splice(l,0,1),$({inputs:{x:a},backend:r,attrs:{shape:u}})}const ue={kernelName:s.YFo,backendName:"wasm",kernelFunc:oe},le={kernelName:s.deh,backendName:"wasm",kernelFunc:function(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}};let ce;const pe={kernelName:s.Uyb,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return ce(s,o,u,l,c,i),a},setupFunc:function(e){ce=e.wasm.cwrap(s.Uyb,null,["number","number","number","number","number","number"])}},he=u(s.OR),de=c(s.jeX,!1);let fe;const me={kernelName:s.sHE,backendName:"wasm",setupFunc:function(e){fe=e.wasm.cwrap(s.sHE,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:i,mean:o,variance:u,offset:l,scale:c}=n,p=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,d=t.dataIdMap.get(u.dataId).id,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=null!=c?t.dataIdMap.get(c.dataId).id:0,g=t.makeOutput(i.shape,i.dtype);if(0===s.D5U.sizeFromShape(i.shape))return g;const y=t.dataIdMap.get(g.dataId).id;return fe(p,h,d,f,m,a,y),g}};let ge;const ye={kernelName:s._V0,backendName:"wasm",setupFunc:function(e){ge=e.wasm.cwrap(s._V0,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:p,dilations:h,dataFormat:d,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,y=s.Wap.computeConv2DInfo(i.shape,o.shape,c,h,p,f),b=a[m];if(null==b)throw new Error(`${m} activation not yet supported for FusedConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,w=r.dataIdMap.get(o.dataId).id,v=y.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);k=e.id}const I=y.filterHeight,S=y.filterWidth,N=y.padInfo.top,T=y.padInfo.right,C=y.padInfo.bottom,$=y.padInfo.left,A=y.dilationHeight,E=y.dilationWidth,_=y.strideHeight,D=y.strideWidth,R=y.inChannels,F="SAME"===y.padInfo.type?1:0,O=y.batchSize,M=y.inHeight,z=y.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const B=r.makeOutput(y.outShape,"float32"),L=r.dataIdMap.get(B.dataId).id,W=null==l?0:r.dataIdMap.get(l.dataId).id;return ge(x,O,M,z,w,I,S,k,N,T,C,$,F,A,E,_,D,R,v,b,W,g||0,L),B}};let be;const xe={kernelName:s.luS,backendName:"wasm",setupFunc:function(e){be=e.wasm.cwrap(s.luS,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:i,filter:o,bias:u,preluActivationWeights:l}=t,{strides:c,pad:p,dilations:h,dataFormat:d,dimRoundingMode:f,activation:m,leakyreluAlpha:g}=n,y=s.Wap.computeConv2DInfo(i.shape,o.shape,c,h,p,f,!0),b=a[m];if(null==b)throw new Error(`${m} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const x=r.dataIdMap.get(i.dataId).id,w=r.dataIdMap.get(o.dataId).id,v=y.outChannels;let k=0;if(null!=u){const e=r.dataIdMap.get(u.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==v)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${v})`);k=e.id}const I=y.filterHeight,S=y.filterWidth,N=y.padInfo.top,T=y.padInfo.right,C=y.padInfo.bottom,$=y.padInfo.left,A=y.dilationHeight,E=y.dilationWidth,_=y.strideHeight,D=y.strideWidth,R=y.inChannels,F="SAME"===y.padInfo.type?1:0,O=y.batchSize,M=y.inHeight,z=y.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const B=r.makeOutput(y.outShape,"float32"),L=r.dataIdMap.get(B.dataId).id,W=null==l?0:r.dataIdMap.get(l.dataId).id;return be(x,O,M,z,w,I,S,k,N,T,C,$,F,A,E,_,D,R,v,b,W,g||0,L),B}};let we;const ve={kernelName:s.q1x,backendName:"wasm",setupFunc:function(e){we=e.wasm.cwrap(s.q1x,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:a,indices:i}=n,[o,u,l,c]=s.DaI.prepareAndValidate(a,i),p=t.makeOutput(o,a.dtype);if(0===u)return p;const h=i.shape,d=h[h.length-1],f=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(i.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),y=t.dataIdMap.get(p.dataId).id;return we(f,r[a.dtype],m,u,d,l,g,y),p}};let ke;const Ie={kernelName:s.qi_,backendName:"wasm",setupFunc:function(e){ke=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{x:i,indices:o}=n,{axis:u,batchDims:l}=a,c=s.D5U.parseAxisParam(u,i.shape)[0],p=s.Wap.segment_util.collectGatherOpShapeInfo(i,o,c,l),h=$({inputs:{x:i},attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]},backend:t}),d=s.D5U.sizeFromShape(o.shape),f=$({inputs:{x:o},attrs:{shape:[p.batchSize,d/p.batchSize]},backend:t}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],g=t.makeOutput(m,i.dtype);if(0===s.D5U.sizeFromShape(i.shape))return g;const y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(s.D5U.computeStrides(h.shape)).buffer),k=new Uint8Array(new Int32Array(s.D5U.computeStrides(m)).buffer);return ke(b,r[i.dtype],v,y,x,p.batchSize,k,w),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=p.outputShape,g}},Se=c(s.iZT,!1,"bool"),Ne=c(s.Acj,!1,"bool");let Te;const Ce={kernelName:s.J$2,backendName:"wasm",setupFunc:function(e){Te=e.wasm.cwrap(s.J$2,null,["number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,i=r.makeOutput(t.shape,t.dtype);if(0!==s.D5U.sizeFromShape(t.shape)){const e=r.dataIdMap.get(i.dataId).id;Te(a,n,e)}return i}},$e=c(s.vtC,!1,"bool"),Ae=c(s.CAk,!1,"bool"),Ee=u(s.ZbH),_e=c(s.PYm,!1,"bool");let De;const Re={kernelName:s.YoZ,backendName:"wasm",setupFunc:function(e){De=e.wasm.cwrap(s.YoZ,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:i}=r,{x:o}=n;let u=t.dataIdMap.get(o.dataId).id,l=o;const{transposed:c,axes:p,originalAxes:h,inputWasTransposed:d}=x(o,a,t);d&&(l=c,u=t.dataIdMap.get(c.dataId).id);const f=l.shape.length;s.Wap.assertAxesAreInnerMostDims("max",p,f);const[m,g]=s.Wap.computeOutAndReduceShapes(l.shape,p),y=s.D5U.sizeFromShape(g),b=t.makeOutput(m,o.dtype);if(0!==s.D5U.sizeFromShape(l.shape)){const e=t.dataIdMap.get(b.dataId).id;De(u,y,e)}if(d&&t.disposeData(c.dataId),i){const e=s.Wap.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}},Fe=c(s.BMI,!1);let Oe;const Me={kernelName:s.mTV,backendName:"wasm",setupFunc:function(e){Oe=e.wasm.cwrap(s.mTV,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,i=r.dataIdMap.get(a.dataId).id,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=n,p=s.Wap.computePool2DInfo(a.shape,o,u,1,l,c),h=p.filterHeight,d=p.filterWidth,f=p.padInfo.top,m=p.padInfo.right,g=p.padInfo.bottom,y=p.padInfo.left,b=p.dilationHeight,x=p.dilationWidth,w=p.strideHeight,v=p.strideWidth,k=p.inChannels,I=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const S=r.makeOutput(p.outShape,"float32"),N=r.dataIdMap.get(S.dataId).id;return Oe(i,a.shape[0],a.shape[1],a.shape[2],h,d,f,m,g,y,b,x,w,v,k,I,N),S}};let ze;const Be={kernelName:s.q2K,backendName:"wasm",setupFunc:function(e){ze=e.wasm.cwrap(s.q2K,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:p,axes:h,originalAxes:d,inputWasTransposed:f}=x(o,a,t);let m=h;if(f){const e=t.dataIdMap.get(p.dataId).id;e!==u&&(c=p,l=e,m=s.Wap.getInnerMostAxes(m.length,c.shape.length))}s.Wap.assertAxesAreInnerMostDims("mean",m,c.shape.length);const[g,y]=s.Wap.computeOutAndReduceShapes(c.shape,m),b=s.D5U.sizeFromShape(y);let w=c;"float32"!==c.dtype&&(w=M({backend:t,inputs:{x:c},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(w.dataId).id);const v=t.makeOutput(g,"float32");if(0!==s.D5U.sizeFromShape(c.shape)){const e=t.dataIdMap.get(v.dataId).id;ze(l,b,e)}if(f&&t.disposeData(p.dataId),i){const e=s.Wap.expandShapeToKeepDim(v.shape,d);v.shape=e}return"float32"!==c.dtype&&t.disposeData(w.dataId),v}};let Le;const We={kernelName:s.c17,backendName:"wasm",setupFunc:function(e){Le=e.wasm.cwrap(s.c17,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:p,axes:h,originalAxes:d,inputWasTransposed:f}=x(o,a,t);if(f){const e=t.dataIdMap.get(p.dataId).id;e!==u&&(c=p,l=e)}const m=c.shape.length;s.Wap.assertAxesAreInnerMostDims("min",h,m);const[g,y]=s.Wap.computeOutAndReduceShapes(c.shape,h),b=s.D5U.sizeFromShape(y),w=t.makeOutput(g,c.dtype);if(0!==s.D5U.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;Le(l,b,e)}if(f&&t.disposeData(p.dataId),i){const e=s.Wap.expandShapeToKeepDim(w.shape,d);w.shape=e}return w}},Ue=c(s.q8u,!1);var Pe;let Ve;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Pe||(Pe={}));const He={kernelName:s.jQs,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,mode:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(h).buffer);return Ve(o,c,t.shape.length,r[t.dtype],d,f,Pe[s],l),u},setupFunc:function(e){Ve=e.wasm.cwrap(s.jQs,null,["number","array","number","number","array","array","number","number"])}},Ge=c(s.wYn,!0),je=u(s.kuV);function qe(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let Xe;const Ke={kernelName:s.uv1,backendName:"wasm",setupFunc:function(e){Xe=e.wasm.cwrap(s.uv1,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,p=Xe(l,c,s,a,i),{pSelectedIndices:h,selectedSize:d,pSelectedScores:f,pValidOutputs:m}=qe(t,p);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([d],"int32",h)}};let Qe;const Ye={kernelName:s.cye,backendName:"wasm",setupFunc:function(e){Qe=e.wasm.cwrap(s.cye,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=Qe(c,p,s,a,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=qe(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",d),t.makeOutput([],"int32",g)]}};let Je;const Ze={kernelName:s.W0H,backendName:"wasm",setupFunc:function(e){Je=e.wasm.cwrap(s.W0H,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=Je(c,p,s,a,i,o),{pSelectedIndices:d,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=qe(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",d),t.makeOutput([f],"float32",m)]}},et=c(s.yQU,!1,"bool");let tt;const nt={kernelName:s.we_,backendName:"wasm",setupFunc:function(e){tt=e.wasm.cwrap(s.we_,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return tt(c,s,i,o,l),u}},rt={kernelName:s.qWM,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},at={kernelName:s.QiL,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return oe({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=P({inputs:t.map((e=>{const t=oe({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeData(e.dataId))),l}};let st;const it={kernelName:s.lyA,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:s}}=e,i=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),o=n.dataIdMap.get(t.dataId).id,u=n.makeOutput(i,t.dtype),l=n.dataIdMap.get(u.dataId).id,c=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),f=new Uint8Array(new Int32Array(h).buffer);return st(o,c,t.shape.length,r[t.dtype],d,f,s,l),u},setupFunc:function(e){st=e.wasm.cwrap(s.lyA,null,["number","array","number","number","array","array","number","number"])}},ot=c(s.pe_,!1);let ut;const lt={kernelName:s.o0g,backendName:"wasm",setupFunc:function(e){ut=e.wasm.cwrap(s.o0g,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=n.makeOutput(r.shape,"float32"),u=n.dataIdMap.get(o.dataId).id;return ut(s,i,u),o}};let ct;const pt={kernelName:s.DlI,backendName:"wasm",setupFunc:function(e){ct=e.wasm.cwrap(s.DlI,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{axis:i,keepDims:o}=a,{x:u}=n,l=t.dataIdMap.get(u.dataId).id;let c=l,p=u;const{transposed:h,axes:d,originalAxes:f,inputWasTransposed:m}=x(u,i,t);let g=d;if(m){const e=t.dataIdMap.get(h.dataId).id;e!==l&&(p=h,c=e,g=s.Wap.getInnerMostAxes(g.length,p.shape.length))}s.Wap.assertAxesAreInnerMostDims("prod",g,p.shape.length);const[y,b]=s.Wap.computeOutAndReduceShapes(p.shape,g),w=s.D5U.sizeFromShape(b),v=t.makeOutput(y,p.dtype);if(0!==s.D5U.sizeFromShape(p.shape)){const e=t.dataIdMap.get(v.dataId).id;ct(c,w,r[v.dtype],e)}if(m&&t.disposeData(h.dataId),o){const e=s.Wap.expandShapeToKeepDim(v.shape,f);v.shape=e}return v}};var ht=n(9230);const dt={kernelName:s.e6w,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=(0,ht.b)(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},ft=c(s.oHH,!0),mt=u(s.qkr),gt=u(s.SbG);let yt;const bt={kernelName:s._Yw,backendName:"wasm",setupFunc:function(e){yt=e.wasm.cwrap(s._Yw,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:i,halfPixelCenters:o,size:u}=r,[l,c]=u,[p,h,d,f]=a.shape,m=[p,l,c,f];let g,y=t.dataIdMap.get(a.dataId);"float32"!==y.dtype&&(g=M({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),y=t.dataIdMap.get(g.dataId));const b=y.id,x=t.makeOutput(m,"float32");if(0===s.D5U.sizeFromShape(a.shape))return x;const w=t.dataIdMap.get(x.dataId).id;return yt(b,p,h,d,f,l,c,i?1:0,o?1:0,w),null!=g&&t.disposeData(g.dataId),x}};let xt;const wt={kernelName:s.mKl,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=s.D5U.parseAxisParam(i,a.shape);if(0===a.shape.length)return f({inputs:{x:a},backend:n});const u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,p=new Uint8Array(new Int32Array(o).buffer),h=new Uint8Array(new Int32Array(a.shape).buffer);xt(l,p,o.length,h,a.shape.length,c);const d=$({inputs:{x:u},attrs:{shape:a.shape},backend:n});return n.disposeData(u.dataId),d},setupFunc:function(e){xt=e.wasm.cwrap(s.mKl,null,["number","array","number","array","number","number"])}};let vt;const kt={kernelName:s.b9H,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:i,fillValue:o,center:u}=r,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,f,m]=a.shape,[g,y]=s.Wap.getImageCenter(u,d,f),b="number"==typeof o?[o,o,o,0===o?0:255]:[...o,255],x=new Uint8Array(new Int32Array(b).buffer);return vt(c,h,d,f,m,i,g,y,x,b.length,p),l},setupFunc:function(e){vt=e.wasm.cwrap(s.b9H,null,["number","number","number","number","number","number","number","number","array","number","number"])}},It=u(s.e07),St=u(s.bV0);let Nt;const Tt={kernelName:s.xQA,backendName:"wasm",setupFunc:function(e){Nt=e.wasm.cwrap(s.xQA,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:a}=e,{indices:i,updates:o}=n,{shape:u}=a,l=t.makeOutput(u,o.dtype);if(0===s.D5U.sizeFromShape(u))return l;const{sliceRank:c,numUpdates:p,sliceSize:h,strides:d,outputSize:f}=s.yV1.calculateShapes(o,i,u),m=t.dataIdMap.get(i.dataId).id,g=t.dataIdMap.get(o.dataId).id,y=new Uint8Array(new Int32Array(d).buffer),b=t.dataIdMap.get(l.dataId).id;return Nt(m,g,r[o.dtype],c,p,h,y,f,b),l}};let Ct;const $t={kernelName:s.PhF,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(i.dataId).id,c=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(c.dataId).id,h=r.shape.length,d=a.shape.length,f=0===h||h>1||1===d?1:s.D5U.sizeFromShape(a.shape.slice(1));return Ct(o,u,l,f,p),c},setupFunc:function(e){Ct=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let At;const Et={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){At=e.wasm.cwrap(s.a5O,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(a.dataId).id;return 0===s.D5U.sizeFromShape(a.shape)||At(r,i),a}},_t=u(s.RQH);let Dt;const Rt={kernelName:s.Gcp,backendName:"wasm",setupFunc:function(e){Dt=e.wasm.cwrap(s.Gcp,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,i=t.makeOutput(n.shape,n.dtype),o=t.dataIdMap.get(i.dataId).id,u=n.shape[r],l=s.D5U.sizeFromShape(n.shape)/u;return 0===s.D5U.sizeFromShape(i.shape)||Dt(a,o,u,l),i}},Ft={kernelName:s.TQc,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r,u=s.D5U.sizeFromShape(i),l=[[0,0]];l.push(...o);for(let e=1+i.length;e<a.shape.length;++e)l.push([0,0]);const c=it.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),p=s.Wap.getReshaped(c.shape,i,u,!1),h=s.Wap.getPermuted(p.length,i.length,!1),d=s.Wap.getReshapedPermuted(c.shape,i,u,!1),f=$({inputs:{x:c},backend:n,attrs:{shape:p}}),m=y({inputs:{x:f},backend:n,attrs:{perm:h}}),g=$({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(m.dataId),g}},Ot={kernelName:s.L8s,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=n,u=s.D5U.parseAxisParam(o,a.shape)[0],l=s.Wap.prepareSplitSize(a,i,u),c=new Array(a.shape.length).fill(0),p=a.shape.slice();return l.map((e=>{const t=[...p];t[u]=e;const n=R({inputs:{x:a},attrs:{begin:c,size:t},backend:r});return c[u]+=e,n}))}},Mt=u(s.FKq),zt=u(s.bK0),Bt=c(s._tC,!0);let Lt;const Wt={kernelName:s.h8e,backendName:"wasm",setupFunc:function(e){Lt=e.wasm.cwrap(s.h8e,null,["number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return Lt(i,a,u),o}};let Ut;const Pt={kernelName:s.jQk,backendName:"wasm",setupFunc:function(e){Ut=e.wasm.cwrap(s.jQk,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n;let{begin:i,end:o,strides:u}=r;null==u&&(u=new Array(i.length));const{beginMask:l,endMask:c,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,f=s.Wap.slice_util.maskToAxes(p);if(f.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==p&&0!==h)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==p&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const m=a.shape.length-i.length,g=s.Wap.slice_util.maskToAxes(h),y=a.shape.slice();g.forEach((e=>{i[e]=0,o[e]=1,y.splice(e,0,1)}));const b=$({inputs:{x:a},attrs:{shape:y},backend:t}),{begin:x,end:w,strides:v}=s.Wap.slice_util.getNormalizedAxes(b.shape,f,m,i,o,u,l,c,p);i=x,o=w,u=v;const k=s.Wap.slice_util.maskToAxes(d);k.forEach((e=>{o[e]=i[e]+1,u[e]=1}));const I=s.Wap.slice_util.computeOutShape(i,o,u),S=I.filter(((e,t)=>-1===k.indexOf(t)));if(u.every((e=>1===e))){const e=R({inputs:{x:b},attrs:{begin:i,size:I},backend:t});t.disposeData(b.dataId);const n=$({inputs:{x:e},attrs:{shape:S},backend:t});return t.disposeData(e.dataId),n}const N=t.makeOutput(S,"float32");if(!S.some((e=>0===e))){const e=t.dataIdMap.get(b.dataId).id,n=new Uint8Array(new Int32Array(s.D5U.computeStrides(b.shape)).buffer),r=new Uint8Array(new Int32Array(i).buffer),a=new Uint8Array(new Int32Array(o).buffer),l=new Uint8Array(new Int32Array(u).buffer),c=new Uint8Array(new Int32Array(S).buffer),p=new Uint8Array(new Int32Array(s.D5U.computeStrides(S)).buffer),h=t.dataIdMap.get(N.dataId).id;Ut(e,n,b.shape.length,r,a,l,c,p,S.length,h)}t.disposeData(b.dataId);const T=$({inputs:{x:N},attrs:{shape:S},backend:t});return t.disposeData(N.dataId),T}},Vt=c(s.Tr8,!0);let Ht;const Gt={kernelName:s.GBy,backendName:"wasm",setupFunc:function(e){Ht=e.wasm.cwrap(s.GBy,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:i}=r,{x:o}=n,u=t.dataIdMap.get(o.dataId).id;let l=u,c=o;const{transposed:p,axes:h,originalAxes:d,inputWasTransposed:f}=x(o,a,t);let m=h;if(f){const e=t.dataIdMap.get(p.dataId).id;e!==u&&(c=p,l=e,m=s.Wap.getInnerMostAxes(m.length,c.shape.length))}s.Wap.assertAxesAreInnerMostDims("sum",m,c.shape.length);const[g,y]=s.Wap.computeOutAndReduceShapes(c.shape,m),b=s.D5U.sizeFromShape(y),w=t.makeOutput(g,c.dtype);if(0!==s.D5U.sizeFromShape(c.shape)){const e=t.dataIdMap.get(w.dataId).id;Ht(l,b,e)}if(f&&t.disposeData(p.dataId),i){const e=s.Wap.expandShapeToKeepDim(w.shape,d);w.shape=e}return w}},jt=u(s.sEM),qt=u(s.MIZ);let Xt;const Kt={kernelName:s.n9L,backendName:"wasm",setupFunc:function(e){Xt=e.wasm.cwrap(s.n9L,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:a}=e,{x:s}=t,i=n.dataIdMap.get(s.dataId).id,{reps:o}=a,u=new Array(s.shape.length);for(let e=0;e<u.length;e++)u[e]=s.shape[e]*o[e];const l=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(u).buffer),p=n.makeOutput(u,s.dtype),h=n.dataIdMap.get(p.dataId).id;return Xt(i,l,s.shape.length,c,u.length,r[p.dtype],h),p}};let Qt;const Yt={kernelName:s.cWu,backendName:"wasm",setupFunc:function(e){Qt=e.wasm.cwrap(s.cWu,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:a}=e,{k:s,sorted:i}=n,o=t.dataIdMap.get(a.dataId).id,u=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=s;const c=t.makeOutput(l,a.dtype),p=t.dataIdMap.get(c.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return Qt(o,u,a.shape.length,r[a.dtype],s,i,p,d),[c,h]}};let Jt;const Zt={kernelName:s.wx7,backendName:"wasm",setupFunc:function(e){Jt=e.wasm.cwrap(s.wx7,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:i}=n,{interpolation:o,fillMode:u,fillValue:l,outputShape:c}=r,[p,h,d,f]=a.shape,[m,g]=null!=c?c:[h,d],y=[p,m,g,f],b=new Uint8Array(new Int32Array(s.D5U.computeStrides(a.shape)).buffer),x=t.makeOutput(y,a.dtype),w=t.dataIdMap.get(x.dataId).id,v=t.dataIdMap.get(a.dataId).id,k=t.dataIdMap.get(i.dataId).id,I="nearest"===o?1:2;let S;switch(u){case"constant":S=1;break;case"reflect":S=2;break;case"wrap":S=3;break;case"nearest":S=4;break;default:S=1}return Jt(v,k,i.shape[0]>1,p,m,g,f,d,h,b,a.shape.length-1,I,S,l,w),x}},en={kernelName:s.ToN,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),p=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)p[s]=e,c[e]=R({inputs:{x:a},attrs:{begin:p,size:h},backend:n});return c.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u})))}},tn={kernelName:s.RuY,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},nn=[l,p,d,v,I,N,C,_,O,z,B,W,V,G,q,X,K,J,ee,ne,ae,se,ie,ue,le,pe,he,de,o,me,ye,xe,ve,Ie,Se,Ne,m,Ce,$e,Ae,Ee,_e,Re,Fe,Me,Be,We,Ue,He,Ge,je,Ke,Ye,Ze,et,nt,rt,at,it,ot,lt,pt,dt,ft,mt,gt,A,bt,wt,kt,St,It,Tt,$t,Et,_t,F,Rt,Ft,Ot,Mt,zt,Bt,Wt,Pt,Vt,Gt,jt,qt,Kt,Yt,Zt,b,en,tn];for(const e of nn)(0,s.wCN)(e);const rn=(0,s.OBj)();rn.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11])))),rn.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(rn.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var an=n(8349),sn=n.n(an),on=n(7234),un=n.n(on);class ln extends s.Zuw{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.init(),this.dataIdMap=new s.JLz(this,(0,s.SRH)())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=s.D5U.now();return e(),{kernelMs:s.D5U.now()-t}}move(e,t,n,r,a){const i=this.dataIdNextNumber++;if("string"===r){const s=t;return void this.dataIdMap.set(e,{id:i,stringBytes:s,shape:n,dtype:r,memoryOffset:null,refCount:a})}const o=s.D5U.sizeFromShape(n),u=o*s.D5U.bytesPerElement(r),l=this.wasm._malloc(u);this.dataIdMap.set(e,{id:i,memoryOffset:l,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(i,o,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,u),l)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+s.D5U.sizeFromShape(r)*s.D5U.bytesPerElement(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const i=s.D5U.sizeFromShape(e);this.wasm.tfjs.registerTensor(a,i,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),i=s.D5U.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,i);case"int32":return new Int32Array(r,a,i);case"bool":return new Uint8Array(r,a,i);default:throw new Error(`Unknown dtype ${t}`)}}}function cn(e,t,n){if(null!=hn)return hn;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=fn&&null!=fn[r]?fn[r]:n+r}const pn=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let hn=null,dn=null,fn={},mn=!1,gn=!1;function yn(e,t=!1){if((0,s.MXe)("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),mn)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");hn=e,gn=t}function bn(e,t=!1){if(mn)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)dn=e;else{fn=e;const t=pn.filter((e=>null==fn[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}gn=t}const xn="3.8.0";(0,s.jqO)("wasm",(async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([(0,s.OBj)().getAsync("WASM_HAS_SIMD_SUPPORT"),(0,s.OBj)().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,r)=>{const a={};var i;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?cn(e,t,null!=dn?dn:r):r+n},gn&&(a.instantiateWasm=(i=cn(e,t,null!=dn?dn:""),(e,t)=>(s.D5U.fetch(i,{credentials:"same-origin"}).then((n=>{n.ok||e.env.a(`failed to load wasm binary file at '${i}'`),n.arrayBuffer().then((n=>{WebAssembly.instantiate(n,e).then((e=>{t(e.instance,e.module)}))}))})),{})));let o,u=!1;a.onAbort=()=>{u||mn||(mn=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==hn?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+sn().toString()],{type:"text/javascript"}),o=sn()(a)):o=un()(a),o.then((e=>{u=!0,mn=!1,e.tfjs={init:e.cwrap("init",null,[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})}))}))}();return new ln(e)}),2)},8349:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return _.buffer!=F&&J(_.buffer),O}function a(){return _.buffer!=F&&J(_.buffer),M}function s(){return _.buffer!=F&&J(_.buffer),z}function i(){return _.buffer!=F&&J(_.buffer),B}function o(){return _.buffer!=F&&J(_.buffer),L}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise((function(e,t){u=e,l=t}));var p,h={};for(p in c)c.hasOwnProperty(p)&&(h[p]=c[p]);var d=[],f=function(e,t){throw t},m=!1,g=!1,y=!1,b=!1;m="object"==typeof window,g="function"==typeof importScripts,y="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,b=!m&&!y&&!g;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(F=c.buffer);var w,v,k,I,S,N="";function T(e){return c.locateFile?c.locateFile(e,N):N+e}if(y){var C;N=g?n(2980).dirname(N)+"/":"//",w=function(e,t){return I||(I=n(7256)),S||(S=n(2980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),U(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof sn))throw e})),process.on("unhandledRejection",ye),f=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(7958)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else b?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(U("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?d=scriptArgs:void 0!==arguments&&(d=arguments),"function"==typeof quit&&(f=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(m||g)&&(g?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",y?(w=function(e,t){return I||(I=n(7256)),S||(S=n(2980)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),U(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},g&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));y&&"undefined"==typeof performance&&(n.g.performance=n(4862).performance);var $,A=c.print||console.log.bind(console),E=c.printErr||console.warn.bind(console);for(p in h)h.hasOwnProperty(p)&&(c[p]=h[p]);h=null,c.arguments&&(d=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(f=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&($=c.wasmBinary);var _,D,R=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ye("no native wasm support detected");var F,O,M,z,B,L,W=!1;function U(e,t){e||ye("Assertion failed: "+t)}function P(e){var t=c["_"+e];return U(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function V(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);X(e,t=en(n),n)}return t},array:function(e){var t=en(e.length);return Q(e,t),t}},i=P(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Jt()),o[l]=c(r[l])):o[l]=r[l]}var p=i.apply(null,o);return p=function(e){return"string"===t?j(e):"boolean"===t?Boolean(e):e}(p),0!==u&&Zt(u),p}function H(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?P(e):function(){return V(e,t,n,arguments)}}function G(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function j(e,t){return e?G(a(),e,t):""}function q(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function X(e,t,n){return q(e,a(),t,n)}function K(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}function Q(e,n){t().set(e,n)}function Y(e,t){return e%t>0&&(e+=t-e%t),e}function J(e){F=e,c.HEAP8=O=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=M=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=B=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=L=new Float64Array(e)}var Z,ee=c.INITIAL_MEMORY||16777216;if(x)_=c.wasmMemory,F=c.buffer;else if(c.wasmMemory)_=c.wasmMemory;else if(!((_=new WebAssembly.Memory({initial:ee/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),y&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");_&&(F=_.buffer),ee=F.byteLength,J(F);var te=[],ne=[],re=[],ae=[],se=[];function ie(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)ce(c.preRun.shift());Ae(te)}}function oe(){x||Ae(ne)}function ue(){x||Ae(re)}function le(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)pe(c.postRun.shift());Ae(se)}}function ce(e){te.unshift(e)}function pe(e){se.unshift(e)}x||ne.push({func:function(){Bt()}});var he=0,de=null,fe=null;function me(e){U(!x,"addRunDependency cannot be used in a pthread worker"),he++,c.monitorRunDependencies&&c.monitorRunDependencies(he)}function ge(e){if(he--,c.monitorRunDependencies&&c.monitorRunDependencies(he),0==he&&(null!==de&&(clearInterval(de),de=null),fe)){var t=fe;fe=null,t()}}function ye(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),E(e+=""),W=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function be(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}c.preloadedImages={},c.preloadedAudios={};var xe="data:application/octet-stream;base64,";function we(e){return be(e,xe)}var ve="file://";function ke(e){return be(e,ve)}var Ie="tfjs-backend-wasm-threaded-simd.wasm";function Se(e){try{if(e==Ie&&$)return new Uint8Array($);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){ye(e)}}function Ne(){if(!$&&(m||g)){if("function"==typeof fetch&&!ke(Ie))return fetch(Ie,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Ie+"'";return e.arrayBuffer()})).catch((function(){return Se(Ie)}));if(v)return new Promise((function(e,t){v(Ie,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return Se(Ie)}))}function Te(){var e={a:zt};function t(e,t){var n=e.exports;if(c.asm=n,Z=c.asm.F,D=t,!x){var r=Oe.unusedWorkers.length;Oe.unusedWorkers.forEach((function(e){Oe.loadWasmModuleToWorker(e,(function(){--r||ge()}))}))}}function n(e){t(e.instance,e.module)}function r(t){return Ne().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),ye(e)}))}if(x||me(),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return E("Module.instantiateWasm callback failed with error: "+e),!1}return($||"function"!=typeof WebAssembly.instantiateStreaming||we(Ie)||ke(Ie)||"function"!=typeof fetch?r(n):fetch(Ie,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(l),{}}we(Ie)||(Ie=T(Ie));var Ce={9832:function(){throw"Canceled!"},9850:function(e,t){setTimeout((function(){qt(e,t)}),0)}};function $e(){Oe.initRuntime()}function Ae(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?Z.get(n)():Z.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function Ee(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),an>>2),a=0;if(r==e&&Atomics.compareExchange(s(),an>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function _e(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=Oe.pthreads[e];t.worker.terminate(),Oe.freeThreadData(t),Oe.runningWorkers.splice(Oe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}function De(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";Oe.pthreads[e].worker.postMessage({cmd:"cancel"})}function Re(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=Oe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;Oe.returnWorkerToPool(n)}}c._emscripten_futex_wake=Ee;var Fe,Oe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=Math.min(4,Math.max(1,(navigator.hardwareConcurrency||1)/2)),t=0;t<e;++t)Oe.allocateUnusedWorker()},initRuntime:function(){for(var e=Lt(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=Lt(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),Yt(e,!g,1),jt(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;Oe.threadExitHandlers.length>0;)Oe.threadExitHandlers.pop()();x&&Vt()&&Ht()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),Oe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),Ee(e+0,2147483647),Yt(0,0,0)},threadExit:function(e){var t=Vt();t&&(Oe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){Oe.runExitHandlersAndDeinitThread(Vt(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in Oe.pthreads)(r=Oe.pthreads[e])&&r.worker&&Oe.returnWorkerToPool(r.worker);Oe.pthreads={};for(var t=0;t<Oe.unusedWorkers.length;++t)(n=Oe.unusedWorkers[t]).terminate();for(Oe.unusedWorkers=[],t=0;t<Oe.runningWorkers.length;++t){var n,r=(n=Oe.runningWorkers[t]).pthread;Oe.freeThreadData(r),n.terminate()}Oe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,Wt(t),Wt(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&Wt(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){Oe.runWithoutMainThreadQueuedCalls((function(){delete Oe.pthreads[e.pthread.threadInfoStruct],Oe.unusedWorkers.push(e),Oe.runningWorkers.splice(Oe.runningWorkers.indexOf(e),1),Oe.freeThreadData(e.pthread),e.pthread=void 0}))},runWithoutMainThreadQueuedCalls:function(e){s()[rn>>2]=0;try{e()}finally{s()[rn>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(Oe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Vt()){var s=Oe.pthreads[r.targetThread];return s?s.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(Oe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Gt();else if("spawnThread"===a)Dt(n.data);else if("cleanupThread"===a)Re(r.thread);else if("killThread"===a)_e(r.thread);else if("cancelThread"===a)De(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)A("Thread "+r.threadId+": "+r.text);else if("printErr"===a)E("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&Oe.returnWorkerToPool(e);else if("exitProcess"===a)try{un(r.returnCode)}catch(n){if(n instanceof sn)return;throw n}else"cancelDone"===a?Oe.returnWorkerToPool(e):"objectTransfer"===a?Oe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):E("worker sent an unknown command "+a);Oe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){E("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},y&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("exit",(function(e){}))),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:_,wasmModule:D})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");Oe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==Oe.unusedWorkers.length&&(Oe.allocateUnusedWorker(),Oe.loadWasmModuleToWorker(Oe.unusedWorkers[0])),Oe.unusedWorkers.length>0?Oe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function Me(e,t){tn(e,t),Zt(e)}function ze(){return R}function Be(e,t){return Z.get(e)(t)}function Le(e,t,n,r){ye("Assertion failed: "+j(e)+", at: "+[t?j(t):"unknown filename",n,r?j(r):"unknown function"])}function We(e,t){_main(e,t)}function Ue(e){return s()[Ut()>>2]=e,e}function Pe(e,t){if(x)return Qe(1,1,e,t)}function Ve(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=Oe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1}function He(){ye()}function Ge(e,t,n){var r=Ze(t,n);return Ce[e].apply(null,r)}function je(e,t){}function qe(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(m){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),an>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),an>>2,0),-73;if(0==Atomics.exchange(s(),an>>2,0))break;if(Gt(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),an>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function Xe(e,t,n){a().copyWithin(e,t,t+n)}function Ke(){return y?n(8158).cpus().length:navigator.hardwareConcurrency}function Qe(e,t){for(var n=arguments.length-2,r=Jt(),a=n,s=en(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=Kt(e,a,s,t);return Zt(r),c}c.establishStackSpace=Me,c.getNoExitRuntime=ze,c.invokeEntryPoint=Be,Fe=y?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var Ye=[],Je=[];function Ze(e,t){var n;for(Je.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,Je.push(r?o()[t++>>1]:s()[t]),++t}return Je}function et(e,t,n){Ye.length=t;for(var r=n>>3,a=0;a<t;a++)Ye[a]=o()[r+a];return(e<0?Ce[-e-1]:Mt[e]).apply(null,Ye)}function tt(){return a().length}function nt(e){try{return _.grow(e-F.byteLength+65535>>>16),J(_.buffer),1}catch(e){}}function rt(e){var t=tt();if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),nt(Math.min(n,Y(Math.max(e,a),65536))))return!0}return!1}var at={inEventHandler:0,removeAllEventListeners:function(){for(var e=at.eventHandlers.length-1;e>=0;--e)at._removeHandler(e);at.eventHandlers=[],at.deferredCalls=[]},registerRemoveEventListeners:function(){at.removeEventListenersRegistered||(ae.push(at.removeAllEventListeners),at.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in at.deferredCalls){var s=at.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}at.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),at.deferredCalls.sort((function(e,t){return e.precedence<t.precedence}))},removeDeferredCalls:function(e){for(var t=0;t<at.deferredCalls.length;++t)at.deferredCalls[t].targetFunction==e&&(at.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return at.inEventHandler&&at.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(at.canPerformEventHandlerRequests())for(var e=0;e<at.deferredCalls.length;++e){var t=at.deferredCalls[e];at.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target!=e||t&&t!=at.eventHandlers[n].eventTypeString||at._removeHandler(n--)},_removeHandler:function(e){var t=at.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),at.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++at.inEventHandler,at.currentEventHandler=e,at.runDeferredCalls(),e.handlerFunc(t),at.runDeferredCalls(),--at.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),at.eventHandlers.push(e),at.registerRemoveEventListeners();else for(var n=0;n<at.eventHandlers.length;++n)at.eventHandlers[n].target==e.target&&at.eventHandlers[n].eventTypeString==e.eventTypeString&&at._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=Jt(),o=en(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,Qt(0,e,637534208,t,r,o),Zt(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return Oe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};function st(e){var t=K(e)+1,n=Lt(t);return X(e,n,t),n}function it(e,t,n,r){var a=Jt(),i=en(12),o=0;t&&(o=st(t)),s()[i>>2]=o,s()[i+4>>2]=n,s()[i+8>>2]=r,Qt(0,e,657457152,0,o,i),Zt(a)}function ot(e,t,n,r){it(e,t=t?j(t):"",n,r)}function ut(e){return e>2?j(e):e}var lt=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function ct(e){return e=ut(e),lt[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}function pt(e){return ct(e)}function ht(e,t,n){var r=pt(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(ot(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function dt(e,t,n){return x?Qe(2,1,e,t,n):ht(e,t,n)}function ft(e,t,n){return pt(e)?ht(e,t,n):dt(e,t,n)}function mt(e){}function gt(e,t){}function yt(e){var t=e.getExtension("ANGLE_instanced_arrays");if(t)return e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)},1}function bt(e){var t=e.getExtension("OES_vertex_array_object");if(t)return e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)},1}function xt(e){var t=e.getExtension("WEBGL_draw_buffers");if(t)return e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)},1}function wt(e){return!!(e.multiDrawWebgl=e.getExtension("WEBGL_multi_draw"))}var vt={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){vt.lastError||(vt.lastError=e)},getNewId:function(e){for(var t=vt.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=j(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?vt.registerContext(n,t):0},registerContext:function(e,t){var n=Lt(8);s()[n+4>>2]=Vt();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),vt.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&vt.initExtensions(r),n},makeContextCurrent:function(e){return vt.currentContext=vt.contexts[e],c.ctx=Nt=vt.currentContext&&vt.currentContext.GLctx,!(e&&!Nt)},getContext:function(e){return vt.contexts[e]},deleteContext:function(e){vt.currentContext===vt.contexts[e]&&(vt.currentContext=null),"object"==typeof at&&at.removeAllHandlersOnTarget(vt.contexts[e].GLctx.canvas),vt.contexts[e]&&vt.contexts[e].GLctx.canvas&&(vt.contexts[e].GLctx.canvas.GLctxObject=void 0),Wt(vt.contexts[e].handle),vt.contexts[e]=null},initExtensions:function(e){if(e||(e=vt.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t=e.GLctx;yt(t),bt(t),xt(t),t.disjointTimerQueryExt=t.getExtension("EXT_disjoint_timer_query"),wt(t),(t.getSupportedExtensions()||[]).forEach((function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&t.getExtension(e)}))}},populateUniformTable:function(e){for(var t=vt.programs[e],n=vt.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=Nt.getProgramParameter(t,35718),s=0;s<a;++s){var i=Nt.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=Nt.getUniformLocation(t,o);if(u){var l=vt.getNewId(vt.uniforms);r[o]=[i.size,l],vt.uniforms[l]=u;for(var c=1;c<i.size;++c){var p=o+"["+c+"]";u=Nt.getUniformLocation(t,p),l=vt.getNewId(vt.uniforms),vt.uniforms[l]=u}}}}},kt=["default","low-power","high-performance"];function It(e,t){var n=t>>2,r=s()[n+6],a={alpha:!!s()[n+0],depth:!!s()[n+1],stencil:!!s()[n+2],antialias:!!s()[n+3],premultipliedAlpha:!!s()[n+4],preserveDrawingBuffer:!!s()[n+5],powerPreference:kt[r],failIfMajorPerformanceCaveat:!!s()[n+7],majorVersion:s()[n+8],minorVersion:s()[n+9],enableExtensionsByDefault:s()[n+10],explicitSwapControl:s()[n+11],proxyContextToMainThread:s()[n+12],renderViaOffscreenBackBuffer:s()[n+13]},i=pt(e);return i?a.explicitSwapControl?0:vt.createContext(i,a):0}function St(e,t){return It(e,t)}var Nt,Tt={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Tt.buffers[e];0===t||10===t?((1===e?A:E)(G(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Tt.varargs+=4,s()[Tt.varargs-4>>2]},getStr:function(e){return j(e)},get64:function(e,t){return e}};function Ct(e){return x?Qe(3,1,e):0}function $t(e,t,n,r,a){if(x)return Qe(4,1,e,t,n,r,a)}function At(e,t,n,r){if(x)return Qe(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Tt.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Et(e){var t=Oe.threadExitHandlers.pop();e&&t()}function _t(e,t){Oe.threadExitHandlers.push((function(){Z.get(e)(t)}))}function Dt(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=Oe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";Oe.runningWorkers.push(t);for(var n=Lt(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=Oe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Pt()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function Rt(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return E("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return Xt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=nn(16,o):U((u-=o)>0);for(var p=Lt(228),h=0;h<57;++h)i()[(p>>2)+h]=0;s()[e>>2]=p,s()[p+12>>2]=p;var d=p+152;s()[d>>2]=d;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:p,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Dt(f),0}function Ft(e){if(x)return Qe(6,1,e);switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Ue(28),-1}x||Oe.initMainThreadBlock();var Ot,Mt=[null,Pe,dt,Ct,$t,At,Ft],zt={e:Le,r:We,x:Ve,b:He,y:Ge,j:je,c:qe,d:Ee,f:Fe,p:Xe,z:Ke,u:et,q:rt,v:ft,i:mt,t:gt,w:St,m:Ct,n:$t,g:At,o:$e,a:_||c.wasmMemory,k:Et,l:_t,h:Rt,s:Ft},Bt=(Te(),c.___wasm_call_ctors=function(){return(Bt=c.___wasm_call_ctors=c.asm.A).apply(null,arguments)}),Lt=(c._init=function(){return(c._init=c.asm.B).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.C).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.D).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.E).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.G).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.H).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.I).apply(null,arguments)},c._All=function(){return(c._All=c.asm.J).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.K).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.L).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.M).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.N).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.O).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.P).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.Q).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.R).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.S).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.T).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.U).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.V).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.W).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm.X).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.Y).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.Z).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm._).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.$).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.aa).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.ba).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ca).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.da).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ea).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.fa).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ga).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.ha).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ia).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.ja).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.ka).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.la).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.ma).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.na).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.oa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.pa).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.qa).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.ra).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.sa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.ta).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ua).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.va).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.wa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.xa).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.ya).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.za).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Aa).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Ba).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ca).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Da).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ea).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Fa).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ga).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.Ha).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ia).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Ja).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Ka).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.La).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Ma).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Na).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Oa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Pa).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Qa).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Ra).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Sa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Ta).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ua).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Va).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm.Wa).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.Xa).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.Ya).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.Za).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm._a).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.$a).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.ab).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.bb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.cb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.db).apply(null,arguments)},c._malloc=function(){return(Lt=c._malloc=c.asm.eb).apply(null,arguments)}),Wt=c._free=function(){return(Wt=c._free=c.asm.fb).apply(null,arguments)},Ut=c.___errno_location=function(){return(Ut=c.___errno_location=c.asm.gb).apply(null,arguments)},Pt=c._emscripten_get_global_libc=function(){return(Pt=c._emscripten_get_global_libc=c.asm.hb).apply(null,arguments)},Vt=c._pthread_self=function(){return(Vt=c._pthread_self=c.asm.ib).apply(null,arguments)},Ht=c.___pthread_tsd_run_dtors=function(){return(Ht=c.___pthread_tsd_run_dtors=c.asm.jb).apply(null,arguments)},Gt=c._emscripten_main_thread_process_queued_calls=function(){return(Gt=c._emscripten_main_thread_process_queued_calls=c.asm.kb).apply(null,arguments)},jt=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.lb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(jt=c._emscripten_register_main_browser_thread_id=c.asm.mb).apply(null,arguments)}),qt=c.__emscripten_do_dispatch_to_thread=function(){return(qt=c.__emscripten_do_dispatch_to_thread=c.asm.nb).apply(null,arguments)},Xt=c._emscripten_sync_run_in_main_thread_4=function(){return(Xt=c._emscripten_sync_run_in_main_thread_4=c.asm.ob).apply(null,arguments)},Kt=c._emscripten_run_in_main_runtime_thread_js=function(){return(Kt=c._emscripten_run_in_main_runtime_thread_js=c.asm.pb).apply(null,arguments)},Qt=c.__emscripten_call_on_thread=function(){return(Qt=c.__emscripten_call_on_thread=c.asm.qb).apply(null,arguments)},Yt=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.rb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(Yt=c.__emscripten_thread_init=c.asm.sb).apply(null,arguments)}),Jt=c.stackSave=function(){return(Jt=c.stackSave=c.asm.tb).apply(null,arguments)},Zt=c.stackRestore=function(){return(Zt=c.stackRestore=c.asm.ub).apply(null,arguments)},en=c.stackAlloc=function(){return(en=c.stackAlloc=c.asm.vb).apply(null,arguments)},tn=c._emscripten_stack_set_limits=function(){return(tn=c._emscripten_stack_set_limits=c.asm.wb).apply(null,arguments)},nn=c._memalign=function(){return(nn=c._memalign=c.asm.xb).apply(null,arguments)},rn=c.__emscripten_allow_main_runtime_queued_calls=9824,an=c.__emscripten_main_thread_futex=11448;function sn(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function on(e){if(e=e||d,!(he>0)){if(x)return u(c),oe(),void postMessage({cmd:"loaded"});ie(),he>0||(c.setStatus?(c.setStatus("Running..."),setTimeout((function(){setTimeout((function(){c.setStatus("")}),1),t()}),1)):t())}function t(){Ot||(Ot=!0,c.calledRun=!0,W||(oe(),ue(),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),le()))}}function un(e,t){if(!t||!R||0!==e){if(!t&&x)throw postMessage({cmd:"exitProcess",returnCode:e}),new sn(e);R||(Oe.terminateAllThreads(),c.onExit&&c.onExit(e),W=!0),f(e,new sn(e))}}if(c.cwrap=H,c.PThread=Oe,c.PThread=Oe,c.wasmMemory=_,c.ExitStatus=sn,fe=function e(){Ot||on(),Ot||(fe=e)},c.run=on,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(R=!1,Oe.initWorker()),on(),e.ready});e.exports=a},7234:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,a=n}));var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u=[],l=!1,c=!1,p=!1,h=!1;l="object"==typeof window,c="function"==typeof importScripts,p="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,h=!l&&!p&&!c;var d,f,m,g,y,b="";function x(e){return s.locateFile?s.locateFile(e,b):b+e}p?(b=c?n(2980).dirname(b)+"/":"//",d=function(e,t){return g||(g=n(7256)),y||(y=n(2980)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=d(e,!0);return t.buffer||(t=new Uint8Array(t)),N(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),u=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof Re))throw e})),process.on("unhandledRejection",re),s.inspect=function(){return"[Emscripten Module object]"}):h?("undefined"!=typeof read&&(d=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(N("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?u=scriptArgs:void 0!==arguments&&(u=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(l||c)&&(c?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",d=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},c&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var w,v,k=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(u=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(w=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&re("no native wasm support detected");var S=!1;function N(e,t){e||re("Assertion failed: "+t)}function T(e){var t=s["_"+e];return N(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function C(e,t,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);z(e,t=De(n),n)}return t},array:function(e){var t=De(e.length);return B(e,t),t}},i=T(e),o=[],u=0;if(r)for(var l=0;l<r.length;l++){var c=s[n[l]];c?(0===u&&(u=Ee()),o[l]=c(r[l])):o[l]=r[l]}var p=i.apply(null,o);return p=function(e){return"string"===t?O(e):"boolean"===t?Boolean(e):e}(p),0!==u&&_e(u),p}function $(e,t,n,r){var a=(n=n||[]).every((function(e){return"number"===e}));return"string"!==t&&a&&!r?T(e):function(){return C(e,t,n,arguments)}}var A,E,_,D,R="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function F(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&R)return R.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function O(e,t){return e?F(_,e,t):""}function M(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function z(e,t,n){return M(e,_,t,n)}function B(e,t){E.set(e,t)}function L(e,t){return e%t>0&&(e+=t-e%t),e}function W(e){A=e,s.HEAP8=E=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=D=new Int32Array(e),s.HEAPU8=_=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var U,P=[],V=[],H=[],G=[];function j(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)Q(s.preRun.shift());de(P)}function q(){de(V)}function X(){de(H)}function K(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)Y(s.postRun.shift());de(G)}function Q(e){P.unshift(e)}function Y(e){G.unshift(e)}V.push({func:function(){$e()}});var J=0,Z=null,ee=null;function te(e){J++,s.monitorRunDependencies&&s.monitorRunDependencies(J)}function ne(e){if(J--,s.monitorRunDependencies&&s.monitorRunDependencies(J),0==J&&(null!==Z&&(clearInterval(Z),Z=null),ee)){var t=ee;ee=null,t()}}function re(e){s.onAbort&&s.onAbort(e),I(e+=""),S=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function ae(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}s.preloadedImages={},s.preloadedAudios={};var se="data:application/octet-stream;base64,";function ie(e){return ae(e,se)}var oe="file://";function ue(e){return ae(e,oe)}var le="tfjs-backend-wasm.wasm";function ce(e){try{if(e==le&&w)return new Uint8Array(w);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){re(e)}}function pe(){if(!w&&(l||c)){if("function"==typeof fetch&&!ue(le))return fetch(le,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+le+"'";return e.arrayBuffer()})).catch((function(){return ce(le)}));if(f)return new Promise((function(e,t){f(le,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ce(le)}))}function he(){var e={a:Ce};function t(e,t){var n=e.exports;s.asm=n,W((v=s.asm.i).buffer),U=s.asm.o,ne()}function n(e){t(e.instance)}function r(t){return pe().then((function(t){return WebAssembly.instantiate(t,e)})).then(t,(function(e){I("failed to asynchronously prepare wasm: "+e),re(e)}))}if(te(),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return I("Module.instantiateWasm callback failed with error: "+e),!1}return(w||"function"!=typeof WebAssembly.instantiateStreaming||ie(le)||ue(le)||"function"!=typeof fetch?r(n):fetch(le,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return I("wasm streaming compile failed: "+e),I("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a),{}}function de(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?U.get(n)():U.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function fe(){re()}function me(e,t,n){_.copyWithin(e,t,t+n)}function ge(){return _.length}function ye(e){try{return v.grow(e-A.byteLength+65535>>>16),W(v.buffer),1}catch(e){}}function be(e){var t=ge(),n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),ye(Math.min(n,L(Math.max(e,a),65536))))return!0}return!1}ie(le)||(le=x(le));var xe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=xe.buffers[e];0===t||10===t?((1===e?k:I)(F(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return xe.varargs+=4,D[xe.varargs-4>>2]},getStr:function(e){return O(e)},get64:function(e,t){return e}};function we(e){return 0}function ve(e,t,n,r,a){}function ke(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=D[t+8*s>>2],o=D[t+(8*s+4)>>2],u=0;u<o;u++)xe.printChar(e,_[i+u]);a+=o}return D[r>>2]=a,0}function Ie(){return 6}function Se(e){return D[Ae()>>2]=e,e}function Ne(e){switch(e){case 30:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return Se(28),-1}var Te,Ce={a:fe,d:me,e:be,f:we,c:ve,b:ke,g:Ie,h:Ne},$e=(he(),s.___wasm_call_ctors=function(){return($e=s.___wasm_call_ctors=s.asm.j).apply(null,arguments)}),Ae=(s._init=function(){return(s._init=s.asm.k).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.l).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.m).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.n).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.p).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.q).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.r).apply(null,arguments)},s._All=function(){return(s._All=s.asm.s).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.t).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.u).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.v).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.w).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.x).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.y).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.z).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.A).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.B).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.C).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.D).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.E).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.F).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.G).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.H).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.I).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.J).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.K).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.L).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.M).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.N).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.O).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.P).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.Q).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.R).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.S).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.T).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.U).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.V).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.W).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.X).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Y).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.Z).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm._).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.$).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.aa).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.ba).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ca).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.da).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ea).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.fa).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ga).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.ha).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ia).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.ja).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.ka).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.la).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.ma).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.na).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.oa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.pa).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.qa).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ra).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.sa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.ta).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ua).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.va).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.wa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.xa).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.ya).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.za).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Aa).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Ba).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ca).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Da).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ea).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Fa).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ga).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Ha).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ia).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Ja).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Ka).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.La).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Ma).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Na).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Oa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Pa).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Qa).apply(null,arguments)},s.___errno_location=function(){return(Ae=s.___errno_location=s.asm.Ra).apply(null,arguments)}),Ee=s.stackSave=function(){return(Ee=s.stackSave=s.asm.Sa).apply(null,arguments)},_e=s.stackRestore=function(){return(_e=s.stackRestore=s.asm.Ta).apply(null,arguments)},De=s.stackAlloc=function(){return(De=s.stackAlloc=s.asm.Ua).apply(null,arguments)};function Re(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function Fe(e){function n(){Te||(Te=!0,s.calledRun=!0,S||(q(),X(),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),K()))}e=e||u,J>0||(j(),J>0||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n()))}if(s.cwrap=$,ee=function e(){Te||Fe(),Te||(ee=e)},s.run=Fe,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return Fe(),e.ready});e.exports=a},6920:(e,t,n)=>{"use strict";n.r(t),n.d(t,{GPGPUContext:()=>qe,MathBackendWebGL:()=>Zn,forceHalfFloat:()=>tr,gpgpu_util:()=>a,setWebGLContext:()=>l,version_webgl:()=>er,webgl:()=>nr,webgl_util:()=>r});var r={};n.r(r),n.d(r,{assertNotComplex:()=>he,bindCanvasToFramebuffer:()=>W,bindColorTextureToFramebuffer:()=>U,bindTextureToProgramUniformSampler:()=>L,bindTextureUnit:()=>O,bindVertexBufferToProgramAttribute:()=>F,callAndCheck:()=>b,canBeRepresented:()=>x,createFragmentShader:()=>I,createFramebuffer:()=>R,createProgram:()=>N,createStaticIndexBuffer:()=>A,createStaticVertexBuffer:()=>$,createTexture:()=>_,createVertexShader:()=>k,getBatchDim:()=>q,getExtensionOrThrow:()=>v,getFramebufferErrorMessage:()=>H,getMaxTexturesInShader:()=>ae,getNumChannels:()=>E,getProgramUniformLocation:()=>B,getProgramUniformLocationOrThrow:()=>z,getRowsCols:()=>X,getShapeAs3D:()=>K,getTextureShapeFromLogicalShape:()=>Q,getWebGLDisjointQueryTimerVersion:()=>se,getWebGLErrorMessage:()=>w,getWebGLMaxTextureSize:()=>te,hasExtension:()=>ie,isCapableOfRenderingToFloatTexture:()=>ue,isDownloadFloatTextureEnabled:()=>le,isReshapeFree:()=>J,isWebGLFenceEnabled:()=>pe,isWebGLVersionEnabled:()=>oe,linkProgram:()=>T,resetMaxTextureSize:()=>ne,resetMaxTexturesInShader:()=>re,unbindColorTextureFromFramebuffer:()=>P,unbindTextureUnit:()=>M,validateFramebuffer:()=>V,validateProgram:()=>C,validateTextureSize:()=>D});var a={};n.r(a),n.d(a,{bindVertexProgramAttributeStreams:()=>Le,createBufferFromOutputTexture:()=>Pe,createFloat16MatrixTexture:()=>De,createFloat16PackedMatrixTexture:()=>Be,createFloat32MatrixTexture:()=>Ee,createIndexBuffer:()=>Ce,createPackedMatrixTexture:()=>Me,createUnsignedBytesMatrixTexture:()=>Fe,createVertexBuffer:()=>Te,createVertexShader:()=>Ne,downloadByteEncodedFloatMatrixFromOutputTexture:()=>He,downloadFloat32MatrixFromBuffer:()=>Ve,downloadMatrixFromPackedOutputTexture:()=>je,downloadPackedMatrixFromBuffer:()=>Ge,getInternalFormatForFloat16MatrixTexture:()=>_e,getInternalFormatForFloat16PackedMatrixTexture:()=>ze,getInternalFormatForFloat32MatrixTexture:()=>Ae,getInternalFormatForPackedMatrixTexture:()=>Oe,getInternalFormatForUnsignedBytesMatrixTexture:()=>Re,uploadDenseMatrixToTexture:()=>We,uploadPixelDataToTexture:()=>Ue});var s={};n.r(s),n.d(s,{addImpl:()=>pt.EH,bincountImpl:()=>ht.W,bincountReduceImpl:()=>ht.i,ceilImpl:()=>dt.__,concatImpl:()=>ft.j,equalImpl:()=>mt.tW,expImpl:()=>gt.Ro,expm1Impl:()=>yt.OF,floorImpl:()=>bt.r6,gatherNdImpl:()=>xt.m,gatherV2Impl:()=>wt.i,greaterEqualImpl:()=>kt.HL,greaterImpl:()=>vt.o,lessEqualImpl:()=>St.lx,lessImpl:()=>It.rO,linSpaceImpl:()=>Nt.b,logImpl:()=>Tt.vX,maxImpl:()=>Ct.B,maximumImpl:()=>$t.wS,minimumImpl:()=>At.vP,multiplyImpl:()=>Et.$3,negImpl:()=>_t.uC,notEqualImpl:()=>Dt.Gj,prodImpl:()=>Rt.Qg,rangeImpl:()=>Ft.b,rsqrtImpl:()=>Ot.zd,simpleAbsImpl:()=>ct.bk,sliceImpl:()=>Mt.rT,sparseFillEmptyRowsImpl:()=>zt.c,sparseReshapeImpl:()=>Bt.U,sparseSegmentReductionImpl:()=>Lt.V,squaredDifferenceImpl:()=>Wt.Hz,stridedSliceImpl:()=>Ut.t,stringNGramsImpl:()=>Pt.A,stringSplitImpl:()=>Vt.Q,stringToHashBucketFastImpl:()=>Ht.h,subImpl:()=>Gt.VY,tileImpl:()=>jt.R,topKImpl:()=>qt.W,transposeImpl:()=>Xt.H,uniqueImpl:()=>Kt.S});var i=n(8433);const o={},u={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function l(e,t){o[e]=t}function c(e){if(!(e in o)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete o[e]}),!1),1===e?t.getContext("webgl",u)||t.getContext("experimental-webgl",u):t.getContext("webgl2",u)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;o[e]=t}const t=o[e];return t.isContextLost()?(delete o[e],c(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),o[e])}var p,h,d;function f(e,t){return[t,e]}function m(e){const t=i.D5U.sizeFromShape(e),n=Math.ceil(t/4);return i.D5U.sizeToSquarishShape(n)}function g(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function y(e,t){const n=e;let r,a,s,o,u,l,c,p,h,d;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,o=n.RGBA32F,u=n.RED,c=4,p=1,h=n.HALF_FLOAT,d=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,o=n.RGBA,u=e.RGBA,c=4,p=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),l=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:o,textureFormatFloat:u,downloadTextureFormat:l,downloadUnpackNumChannels:c,defaultNumChannels:p,textureTypeHalfFloat:h,textureTypeFloat:d}}function b(e,t){const n=t();return(0,i.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+w(e,t))}(e),n}function x(e){return!!((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function w(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function v(e,t){return G(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function k(e,t){const n=G(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function I(e,t){const n=G(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(b(e,(()=>e.shaderSource(n,t))),b(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=S.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,o=a.map(((e,t)=>i.D5U.rightPad((t+1).toString(),s)+e));let u=0;for(let e=0;e<o.length;e++)u=Math.max(o[e].length,u);const l=o.slice(0,r-1),c=o.slice(r-1,r),p=o.slice(r);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${i.D5U.rightPad(c[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(p||(p={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(h||(h={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(d||(d={}));const S=/ERROR: [0-9]+:([0-9]+):/g;function N(e){return G(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function T(e,t){if(b(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function C(e,t){if(b(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function A(e,t){const n=G(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),b(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function E(){return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?1:4}function _(e){return G(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function D(e,t){const n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function R(e){return G(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function F(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),b(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),b(e,(()=>e.enableVertexAttribArray(o))),!0)}function O(e,t,n){j(e,n),b(e,(()=>e.activeTexture(e.TEXTURE0+n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function M(e,t){j(e,t),b(e,(()=>e.activeTexture(e.TEXTURE0+t))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function z(e,t,n){return G(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function B(e,t,n){return e.getUniformLocation(t,n)}function L(e,t,n,r){b(e,(()=>O(e,t,r))),b(e,(()=>e.uniform1i(n,r)))}function W(e){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),b(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function U(e,t,n){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function P(e,t){b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),b(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function V(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+H(e,t))}function H(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function G(e,t,n){const r=b(e,(()=>t()));if(null==r)throw new Error(n);return r}function j(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function q(e,t=2){return i.D5U.sizeFromShape(e.slice(0,e.length-t))}function X(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function K(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[q(e),...X(e)]),t}function Q(e,t=!1){let n=(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?i.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=i.D5U.squeezeShape(e);e=t.newShape}let r=i.D5U.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=q(e);let n=2,a=2;return e.length&&([n,a]=X(e)),r=t*(n/2)*(a/2),i.D5U.sizeToSquarishShape(r).map((e=>2*e))}return i.D5U.sizeToSquarishShape(r)}function Y(e){return e%2==0}function J(e,t){if(e=e.slice(-2),t=t.slice(-2),i.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(Y(n)&&Y(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&Y(e[0])&&Y(t[0])}let Z,ee;function te(e){if(null==Z){const t=c(e);Z=t.getParameter(t.MAX_TEXTURE_SIZE)}return Z}function ne(){Z=null}function re(){ee=null}function ae(e){if(null==ee){const t=c(e);ee=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ee)}function se(e){if(0===e)return 0;let t;const n=c(e);return t=ie(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ie(n,"EXT_disjoint_timer_query")?1:0,t}function ie(e,t){return null!=e.getExtension(t)}function oe(e){try{if(null!=c(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ue(e){if(0===e)return!1;const t=c(e);if(1===e){if(!ie(t,"OES_texture_float"))return!1}else if(!ie(t,"EXT_color_buffer_float"))return!1;return ce(t)}function le(e){if(0===e)return!1;const t=c(e);if(1!==e){if(ie(t,"EXT_color_buffer_float"))return ce(t);const e="EXT_color_buffer_half_float";if(ie(t,e)){const n=t.getExtension(e);return function(e,t){const n=y(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!ie(t,"OES_texture_float")&&(!!ie(t,"WEBGL_color_buffer_float")&&ce(t))}function ce(e){const t=y(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function pe(e){return 2===e&&null!=c(e).fenceSync}function he(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&i.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const de=(0,i.OBj)();function fe(){let e,t,n,r,a,s,o,u,l,c;return 2===(0,i.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",o="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",o="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:o,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function me(e,t,n="index"){const r=i.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function ge(e,t,n="index"){const r=i.D5U.computeStrides(t);return r.map(((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`)).join("")}function ye(e){const t=i.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}de.registerFlag("HAS_WEBGL",(()=>de.getNumber("WEBGL_VERSION")>0)),de.registerFlag("WEBGL_VERSION",(()=>oe(2)?2:oe(1)?1:0)),de.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),de.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===de.get("WEBGL_VERSION"))),de.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),de.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),de.registerFlag("WEBGL_PACK",(()=>de.getBool("HAS_WEBGL"))),de.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_CLIP",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_PACK_REDUCE",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_LAZILY_UNPACK",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_CONV_IM2COL",(()=>de.getBool("WEBGL_PACK"))),de.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>te(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>ae(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=de.getNumber("WEBGL_VERSION");return 0===e?0:se(e)})),de.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>de.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!i.C2$.isMobile())),de.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>ue(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!de.getBool("WEBGL_FORCE_F16_TEXTURES")&&de.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),de.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>le(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>pe(de.getNumber("WEBGL_VERSION")))),de.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>de.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),de.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),de.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>i.C2$.isMobile()&&de.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),de.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),de.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),de.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),de.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const be="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class xe{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=p.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class we{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=p.DENSE;const t=m(e),n=fe();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${me(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class ve{constructor(e){this.variableNames=["A"],this.outTexUsage=h.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class ke{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=h.DOWNLOAD;const t=fe();this.outputShape=e,this.userCode=`\n      ${be}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class Ie{constructor(e,t,n=!1){this.variableNames=["A"];const r=fe(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${ye(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class Se{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=fe(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${ye(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function Ne(e){const t=fe();return k(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function Te(e){return $(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function Ce(e){return A(e,new Uint16Array([0,1,2,2,1,3]))}function $e(e,t,n,r,a,s){D(t,n);const i=_(e),o=e.TEXTURE_2D;return b(e,(()=>e.bindTexture(o,i))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),b(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),b(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Ae(e){return e.internalFormatFloat}function Ee(e,t,n,r){const[a,s]=f(t,n);return $e(e,a,s,Ae(r),r.textureFormatFloat,e.FLOAT)}function _e(e){return e.internalFormatHalfFloat}function De(e,t,n,r){const[a,s]=f(t,n);return $e(e,a,s,_e(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function Re(e){return e.downloadTextureFormat}function Fe(e,t,n,r){const[a,s]=f(t,n);return $e(e,a,s,Re(r),e.RGBA,e.UNSIGNED_BYTE)}function Oe(e){return e.internalFormatPackedFloat}function Me(e,t,n,r){const[a,s]=g(t,n);return $e(e,a,s,Oe(r),e.RGBA,e.FLOAT)}function ze(e){return e.internalFormatPackedHalfFloat}function Be(e,t,n,r){const[a,s]=g(t,n);return $e(e,a,s,ze(r),e.RGBA,r.textureTypeHalfFloat)}function Le(e,t,n){return b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),F(e,t,"clipSpacePos",n,3,20,0)&&F(e,t,"uv",n,2,20,12)}function We(e,t,n,r,a,s){let i,o,u;b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Ue(e,t,n){b(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):b(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),b(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function Pe(e,t,n,r){const a=e.createBuffer();b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return b(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),b(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}function Ve(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function He(e,t,n,r){const[a,s]=f(t,n),i=new Uint8Array(t*n*4);return b(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function Ge(e,t,n,r,a,s,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=g(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function je(e,t,n){const r=new Float32Array(t*n*4);return b(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}class qe{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,i.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,l(t,e)):this.gl=c(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,i.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=v(this.gl,e),ie(this.gl,t))this.textureHalfFloatExtension=v(this.gl,t);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ie(this.gl,r))this.colorBufferHalfFloatExtension=v(this.gl,r);else if((0,i.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ie(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ie(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=Te(this.gl),this.indexBuffer=Ce(this.gl),this.framebuffer=R(this.gl),this.textureConfig=y(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,i.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;b(e,(()=>e.finish())),b(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),b(e,(()=>e.deleteFramebuffer(this.framebuffer))),b(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),b(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),b(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),Ee(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),De(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),Fe(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),Ue(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),We(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),Be(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),Me(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(P(this.gl,this.framebuffer),this.outputTexture=null),b(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>He(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Ge(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return Ve(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=Pe(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,i.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>je(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=I(t,e);null==this.vertexShader&&(this.vertexShader=Ne(t));const r=N(t);return b(t,(()=>t.attachShader(r,this.vertexShader))),b(t,(()=>t.attachShader(r,n))),T(t,r),this.debug&&C(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=Le(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&b(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&C(this.gl,this.program),b(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?z(this.gl,e,t):B(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),b(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),L(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=g(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&C(this.gl,this.program),V(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),b(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),b(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=v(this.gl,2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await i.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||i.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),U(this.gl,e,this.framebuffer),this.debug&&V(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(U(this.gl,this.outputTexture,this.framebuffer),this.debug&&V(this.gl)):P(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;U(r,e,this.framebuffer),this.debug&&V(r),this.outputTexture=e,b(r,(()=>r.viewport(0,0,t,n))),b(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),b(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Xe}=i.Wap;function Ke(e,t,n){const r=[];if(e.forEach((e=>{const t=i.D5U.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=st(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const a=r.join("\n"),s=e.map((e=>function(e,t,n=!1,r){let a="";a+=n?Ye(e,r):Qe(e,r);const s=e.shapeInfo.logicalShape,o=t.logicalShape;return s.length<=o.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,u=Xe(e.shapeInfo.logicalShape,t.logicalShape),l=at(o),c=o-s;let p;const h=["x","y","z","w","u","v"];p=0===s?"":o<2&&u.length>=1?"coords = 0;":u.map((e=>`coords.${h[e+c]} = 0;`)).join("\n");let d="";d=o<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+c]}`)).join(", ");let f="return outputValue;";const m=1===i.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===i.D5U.sizeFromShape(t.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const e=s-2,t=s-1;u.indexOf(e)>-1&&u.indexOf(t)>-1?f="return vec4(outputValue.x);":u.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      vec4 outputValue = get${r}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,o=e.shapeInfo.texShape,u=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&u===l&&null==e.shapeInfo.flatOffset&&i.D5U.arraysEqual(o,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=at(l),p=Xe(e.shapeInfo.logicalShape,t.logicalShape),h=l-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":l<2&&p.length>=1?"coords = 0;":p.map((e=>`coords.${f[e+h]} = 0;`)).join("\n");let m="";return m=l<2&&u>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+h]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${r}(${m});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),o=t.texShape,u=fe(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let c,p,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Je}\n    ${Ze}\n    ${et}\n  `}(u);return t.isPacked?(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(i.D5U.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,o,n.enableShapeUniforms),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(c=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return i.D5U.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ge(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=me(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ge(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=me(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=me(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=me(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o,n.enableShapeUniforms),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),n.packedInputs&&(h+=tt),[h,l,p,a,c,s,n.userCode].join("\n")}function Qe(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=nt(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${rt(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=nt(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&i.D5U.arraysEqual(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:o,keptDims:u}=i.D5U.squeezeShape(n),l=o;if(l.length<n.length){const n=["row","col"];return`\n      ${Qe(it(e,l),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${ot(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${rt(e)}\n      }\n    `;const c=s[0],p=s[1],h=nt(r);return 1===p?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${p}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],o=n[2],{newShape:u,keptDims:l}=i.D5U.squeezeShape(n),c=u;if(c.length<n.length){const n=["row","col","depth"];return`\n        ${Qe(it(e,c),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${ot(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${o}, 1)));\n        ${rt(e)}\n      }\n    `;const p=e.shapeInfo.texShape,h=p[0],d=p[1],f=e.shapeInfo.flatOffset;if(d===s&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${o}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(d===o&&null==f)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const m=nt(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${o} + depth + ${m};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${o} + depth + ${m};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],o=n[2]*s,u=n[1]*o,{newShape:l,keptDims:c}=i.D5U.squeezeShape(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${Qe(it(e,l),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${ot(n,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${u}, ${o}, ${s}, 1)));\n        ${rt(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],f=h[1],m=`int stride2 = ${r}Shape[3];`,g=`int stride1 = ${r}Shape[2] * stride2;`,y=`int stride0 = ${r}Shape[1] * stride1;`;if(f===u&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${m}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${o}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(f===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const b=nt(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${m}\n      ${g}\n      ${y}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${f}, index + ${b});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,o=t[2]*s,u=t[1]*o,{newShape:l,keptDims:c}=i.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Qe(it(e,l))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${ot(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${o}, ${s}, ${a})) +\n          depth3;\n        ${rt(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],f=h[1];if(f===u&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==p)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${o} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${nt(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=i.D5U.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Qe(it(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${ot(t,s)});\n      }\n    `}const o=t[5],u=t[4]*o,l=t[3]*u,c=t[2]*l,p=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${c}, ${l}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${rt(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===p&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${c} + depth * ${l} +\n          depth2 * ${u} + depth3 * ${o} + depth4 + ${nt(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function Ye(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${fe().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=fe();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,o=s[0],u=s[1],l=fe();if(null!=s&&i.D5U.arraysEqual(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${u}.0, ${o}.0);\n\n        return ${l.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `;const c=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${l.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${Ye(it(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${ot(s,r)});\n        }\n      `}const o=fe();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=fe();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],p=Math.ceil(s[i-1]/2);let h=p*Math.ceil(s[i-2]/2),d="int b, int row, int col",f=`b * ${h} + (row / 2) * ${p} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const Je="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ze="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",et="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",tt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function nt(e){return`offset${e}`}function rt(e){const t=e.name,n=i.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function at(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function st(e,t,n){const{newShape:r}=i.D5U.squeezeShape(t),a=t.length,s=e&&3===a&&1===t[0],o=s?t.slice(1):r,u=!e&&a>1&&!i.D5U.arraysEqual(t,n)&&r.length<a||s;return{useSqueezeShape:u,uniformShape:u?o:t}}function it(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function ot(e,t){return t.map((t=>e[t])).join(", ")}function ut(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!i.D5U.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,u=a.isUniform?null:a.texData.texShape;if(!i.D5U.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)}))}function lt(e){return(0,i.OBj)().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var ct=n(224),pt=n(2779),ht=n(8607),dt=n(4769),ft=n(8926),mt=n(7679),gt=n(1211),yt=n(969),bt=n(6574),xt=n(1820),wt=n(4468),vt=n(6272),kt=n(6259),It=n(8405),St=n(635),Nt=n(1325),Tt=n(5223),Ct=n(5126),$t=n(1717),At=n(612),Et=n(1917),_t=n(854),Dt=n(8584),Rt=n(9560),Ft=n(9230),Ot=n(7742),Mt=n(2578),zt=n(2123),Bt=n(3849),Lt=n(3989),Wt=n(212),Ut=n(2210),Pt=n(6841),Vt=n(8639),Ht=n(6626),Gt=n(1649),jt=n(7723),qt=n(9556),Xt=n(7107),Kt=n(5638);const{addImpl:Qt,bincountImpl:Yt,bincountReduceImpl:Jt,ceilImpl:Zt,concatImpl:en,equalImpl:tn,expImpl:nn,expm1Impl:rn,floorImpl:an,gatherNdImpl:sn,gatherV2Impl:on,greaterImpl:un,greaterEqualImpl:ln,lessImpl:cn,lessEqualImpl:pn,linSpaceImpl:hn,logImpl:dn,maxImpl:fn,maximumImpl:mn,minimumImpl:gn,multiplyImpl:yn,negImpl:bn,notEqualImpl:xn,prodImpl:wn,rangeImpl:vn,rsqrtImpl:kn,simpleAbsImpl:In,sliceImpl:Sn,sparseFillEmptyRowsImpl:Nn,sparseReshapeImpl:Tn,sparseSegmentReductionImpl:Cn,stridedSliceImpl:$n,stringNGramsImpl:An,stringSplitImpl:En,stringToHashBucketFastImpl:_n,subImpl:Dn,tileImpl:Rn,topKImpl:Fn,transposeImpl:On,uniqueImpl:Mn}=s;function zn(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Bn(e,t){return 1===t?[e]:zn(e,t)}class Ln{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Bn("rc",t),r=at(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Wn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${me(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${ye(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Un{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Vn(t,n),a=Hn(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Pn(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===d.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===d.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===d.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===d.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Vn(n,r),s=Hn(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const o=Pn(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),u=(0,i.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const l=this.usedTextures[s],c=l.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Pn(e,t,n,r,a){const s=function(e,t){switch(e){case d.PACKED_2X2_FLOAT32:return Oe(t);case d.PACKED_2X2_FLOAT16:return ze(t);case d.UNPACKED_FLOAT32:return Ae(t);case d.UNPACKED_FLOAT16:return _e(t);case d.PACKED_4X1_UNSIGNED_BYTE:return Re(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=g(e[0],e[1]);i=t*n}else{const[t,n]=f(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function Vn(e,t){if(e===h.UPLOAD)return d.PACKED_2X2_FLOAT32;if(e===h.RENDER||null==e)return function(e){return(0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?d.PACKED_2X2_FLOAT32:d.UNPACKED_FLOAT32:e?d.PACKED_2X2_FLOAT16:d.UNPACKED_FLOAT16}(t);if(e===h.DOWNLOAD||e===h.PIXELS)return d.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Hn(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Gn{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const jn="return abs(x);",qn="return x;";class Xn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Kn{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Bn("rc",t),r=at(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Qn=i.GDt.whereImpl,Yn={},Jn=(0,i.OBj)().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class Zn extends i.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,i.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=c((0,i.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,i.OBj)().getNumber("WEBGL_VERSION"))in Yn||(Yn[t]={}),Yn[t]),this.gpgpu=new qe(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Un(this.gpgpu),this.numMBBeforeWarning=null==(0,i.OBj)().global.screen?1024:(0,i.OBj)().global.screen.height*(0,i.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new i.JLz(this,(0,i.SRH)())}nextDataId(){return Zn.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,i.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,i.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:h.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if((0,i.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:h.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:o,isPacked:u}=t;if(null!=s){let t;t=u?new Xn(o,qn):new Gn(o,qn);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const l=null!=this.activeTimers;let c,p;if(l&&(c=i.D5U.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);p=i.Wap.mergeRealAndImagArrays(e,t)}else p=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=i.D5U.now()-c),this.convertAndCacheOnCPU(e,p)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:o,isPacked:u}=t;if(null!=a){let t;t=u?new Xn(r,qn):new Gn(r,qn);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,i.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,c,p=null;if("complex64"!==s&&(0,i.OBj)().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture,...m(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=i.Wap.mergeRealAndImagArrays(t,n)}else if(null==p)c=this.getValuesFromTexture(e);else{const e=i.D5U.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){const e=this.gpgpu.gl;b(e,(()=>e.deleteBuffer(p)))}const h=this.convertAndCacheOnCPU(e,c),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,i.SRH)().removeDataId(e,this),this.pendingDeletes--),h}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>i.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,i.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!x(n)){if((0,i.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=i.D5U.sizeFromShape(t);if((0,i.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...m(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=(0,i.OBj)().getBool("WEBGL_PACK")&&!0===r,o=s?K(t):t,u=s?new ke(o):new ve(o),l=this.runWebGLProgram(u,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=i.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=i.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=i.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:i.D5U.now(),endMs:null}}endTimer(e){return(0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=i.D5U.now(),e)}async getQueryTime(e){if((0,i.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=Jn){return(0,i.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&i.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){i.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Qn(e.shape,t)}packedUnaryOp(e,t,n){const r=new Xn(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,i.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=In(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jn,e.dtype);const t=new Gn(e.shape,jn),n=this.compileAndRun(t,[e]);return(0,i.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&i.D5U.isString(n[0])){const a=n.map((e=>i.D5U.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,i.SRH)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Kn(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ln(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[q(e.shape),...X(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[q(t),...X(t)],s=new Wn(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=K(r);let i;return i=n?new we(s):new xe(s),{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(s.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===p.DENSE){const t=m(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===i.D5U.sizeFromShape(s.shape))return o.values=i.D5U.getTypedArrayFromDType(s.dtype,0),s;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&i.D5U.sizeFromShape(t.shape)<=(0,i.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!J(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:o,uniformShape:u}=st(e.packedInputs,t.shape,s);let l="",c="",p="";if(1===u.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==u.length||e.packedInputs){if(u.length>2&&!e.packedInputs){const e=i.D5U.computeStrides(u);p=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${u[0]>1}_${u[1]>1}`;const h=t.shape.length,d=2===h&&i.D5U.arraysEqual(t.shape,s),f=1===i.D5U.sizeFromShape(t.shape),m=i.Wap.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&i.D5U.arraysEqual(s,n.texData.texShape),y=e.packedInputs||h>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${g}_${o}_${u.length}_${f}_${m}_${d}_${l}_${c}_${p}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${(0,i.OBj)().getNumber("WEBGL_VERSION")}`,s}(e,l,c),d=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const a=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),s=a.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Ke(a,o,t),l=e.createProgram(u);let c=null;const p=e.getUniformLocation(l,"NAN",!1);1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const h=!1,d={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];d[r]=e.getUniformLocation(l,r,h),d[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,h),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,h),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,h))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",h),b=e.getUniformLocation(l,"outShapeStrides",h),y=e.getUniformLocation(l,"outTexShape",h));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,h)})),{program:t,source:u,webGLProgram:l,uniformLocations:d,customUniformLocations:x,inShapeInfos:s,outShapeInfo:o,infLoc:c,nanLoc:p,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),f=null!=this.activeTimers;let g;f&&(g=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(ut(t.inShapeInfos,n),ut([t.outShapeInfo],[r]));const s=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,o[0],o[1]):e.setOutputMatrixTexture(s,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,i.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`],u=t.inShapesLocations[`${a}Shape`],l=t.inTexShapesLocations[`${a}TexShape`];if(u){const{uniformShape:r}=st(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(u,new Int32Array(r));break;case 2:e.gl.uniform2iv(u,new Int32Array(r));break;case 3:e.gl.uniform3iv(u,new Int32Array(r));break;case 4:e.gl.uniform4iv(u,new Int32Array(r))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(i.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)}));const u=t.outShapeLocation;if(u)switch(r.shape.length){case 1:e.gl.uniform1iv(u,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(u,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(u,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(u,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=i.D5U.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach(((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}(this.gpgpu,d,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const y=(0,i.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(y>0){const e=i.D5U.now();e-this.lastGlFlushTime>y&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,i.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,i.lub)((()=>{if(!(0,i.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,i.OBj)().getBool("DEBUG");(0,i.OBj)().set("DEBUG",!1);const t=this.abs((0,i.iD$)(1e-8)).dataSync()[0];if((0,i.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:o,isPacked:u}=t;if(null!=s)return;const l=null!=this.activeTimers;let c;l&&(c=i.D5U.now());let p=t.texShape;if(null==p&&(p=Q(n,u),t.texShape=p),null!=a){const e=K(n);let s,o=p[1],d=p[0];const f=a instanceof Uint8Array;u?([o,d]=g(p[0],p[1]),s=new Se(e,[d,o],f)):s=new Ie(e,[d,o],f);const m=this.makeTensorInfo([d,o],r);this.texData.get(m.dataId).usage=f?h.PIXELS:h.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,d,a);const y=!0,b=this.runWebGLProgram(s,[m],r,null,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=i.D5U.now()-c)}else{const e=this.acquireTexture(p,o,r,u);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*i.D5U.bytesPerElement(t)}}Zn.nextDataId=0;const er="3.8.0";function tr(){(0,i.OBj)().set("WEBGL_FORCE_F16_TEXTURES",!0)}i.C2$.isBrowser()&&(0,i.jqO)("webgl",(()=>new Zn),2);const nr={forceHalfFloat:tr};class rr{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=lt(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class ar{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;this.enableShapeUniforms=lt(a);let s="";if(r)if(0===a||1===i.D5U.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${at(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Bn("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function sr(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const ir={kernelName:i.iJz,backendName:"webgl",kernelFunc:sr};function or(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=sr({inputs:{x:r},backend:n}),u=sr({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const ur={kernelName:i.Zz9,backendName:"webgl",kernelFunc:or},lr="return (a < 0.) ? b * a : a;",cr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",pr={kernelName:i.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,o=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(s,"float32")),u=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(cr,a.shape,o.shape):new rr(lr,a.shape,o.shape),l=n.runWebGLProgram(u,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),l}},hr="return (a < 0.) ? b * a : a;",dr="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",fr={kernelName:i.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(dr,r.shape,a.shape):new rr(hr,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function mr({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:o}=a,u=s,l=r||o.dtype;if(u.shouldExecuteOnCPU([o])&&null!=n){const e=u.texData.get(o.dataId),t=n(e.values,l);return u.makeTensorInfo(o.shape,l,t)}let c;return c=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Xn(o.shape,t):new Gn(o.shape,e),u.runWebGLProgram(c,[o],l)}}function gr({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:o,backend:u})=>{const{a:l,b:c}=o,p=u;if(r&&"complex64"===l.dtype){const t=p.texData.get(l.dataId),n=p.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new rr(e,l.shape,c.shape);return p.runWebGLProgram(o,[a,s],(0,i.x8V)(n.dtype,r.dtype))})),s=or({inputs:{real:r,imag:a},backend:p});return p.disposeIntermediateTensorInfo(r),p.disposeIntermediateTensorInfo(a),s}const h=s||(0,i.x8V)(l.dtype,c.dtype);if(("string"===l.dtype||"string"===c.dtype||p.shouldExecuteOnCPU([l,c]))&&null!=a){const e=p.texData.get(l.dataId).values,t=p.texData.get(c.dataId).values,n="string"===l.dtype?i.Wap.fromUint8ToStringArray(e):e,r="string"===l.dtype?i.Wap.fromUint8ToStringArray(t):t,[s,o]=a(l.shape,c.shape,n,r,h),u=p.makeTensorInfo(o,h);return p.texData.get(u.dataId).values=s,u}let d;return d=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new ar(t,l.shape,c.shape,n):new rr(e,l.shape,c.shape),p.runWebGLProgram(d,[l,c],h)}}function yr(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?dr:hr;if("leakyrelu"===e)return t?cr:lr;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class br{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const l=r?e[1]:e[2],c=Math.ceil(l/2),p=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${p});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class xr{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=i.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const wr="return a * b;";function vr(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=i.Wap.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new xr("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new xr("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=or({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=yn(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let o;return o=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar(wr,r.shape,a.shape):new rr(wr,r.shape,a.shape),n.runWebGLProgram(o,[r,a],s)}const kr={kernelName:i.wYn,backendName:"webgl",kernelFunc:vr};function Ir(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,o=n,u=i.D5U.sizeFromShape(a.shape),l=i.D5U.inferFromImplicitShape(s,u),c=i.D5U.sizeFromShape(l);i.D5U.assert(u===c,(()=>`The new shape (${l}) has ${c} elements and the old shape (${a.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const p=o.texData.get(a.dataId);return!p.isPacked||J(a.shape,l)||null!==p.texture&&J(p.shape,l)?(o.incRef(a.dataId),{dataId:a.dataId,shape:l,dtype:a.dtype}):function(e,t,n){const r=[q(e.shape),...X(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[q(t),...X(t)],i=new Wn(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,l,o)}const Sr={kernelName:i.HZH,backendName:"webgl",kernelFunc:Ir};class Nr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const o=4*Math.floor(n/4),u=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${i.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Tr{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let p=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",p="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",p="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${p}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${p}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${p}\n        }\n        setOutput(${u});\n      }\n    `}}function Cr(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=i.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,p;c="mean"===n?0===i?new Nr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new Nr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new Tr({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),p=s,s=r.runWebGLProgram(c,[s],t),p.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(p)}return s}class $r{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=at(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class Ar{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=at(this.rank),a=zn("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Er(e,t,n){const r=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ar(e.shape,t):new $r(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function _r(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r;return function(e,t,n,r){const a=t,s=e.shape.length,o=i.D5U.parseAxisParam(a,e.shape);let u=o;const l=i.Wap.getAxesPermutation(u,s),c=null!=l;let p=e;c&&(p=Er(e,l,r),u=i.Wap.getInnerMostAxes(u.length,s)),i.Wap.assertAxesAreInnerMostDims("sum",u,s);const[h,d]=i.Wap.computeOutAndReduceShapes(p.shape,u);let f=h;n&&(f=i.Wap.expandShapeToKeepDim(h,o));const m=i.D5U.sizeFromShape(d),g=Ir({inputs:{x:p},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/m,m]},backend:r}),y=Cr(g,(0,i.z4k)(e.dtype),"sum",r),b=Ir({inputs:{x:y},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(y),c&&r.disposeIntermediateTensorInfo(p),b}(a,s,o,n)}const Dr={kernelName:i.GBy,backendName:"webgl",kernelFunc:_r};function Rr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=On(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=Er(a,s,i);return l}const Fr={kernelName:i.G3Y,backendName:"webgl",kernelFunc:Rr};function Or({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:o=null,leakyreluAlpha:u=0,activation:l=null}){const c=e.shape.length,p=t.shape.length,h=n?e.shape[c-2]:e.shape[c-1],d=r?t.shape[p-1]:t.shape[p-2],f=n?e.shape[c-1]:e.shape[c-2],m=r?t.shape[p-2]:t.shape[p-1],g=e.shape.slice(0,-2),y=t.shape.slice(0,-2),b=i.D5U.sizeFromShape(g),x=i.D5U.sizeFromShape(y),w=b===x||1===b||1===x;i.D5U.assert(c>=2&&p>=2&&w,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${y}).`));const v=(b>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);i.D5U.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[b,h,f]:[b,f,h],I=r?[x,m,d]:[x,d,m],S=Ir({inputs:{x:e},backend:a,attrs:{shape:k}}),N=Ir({inputs:{x:t},backend:a,attrs:{shape:I}}),T=[S,N],C=Math.max(b,x),$=n?S.shape[1]:S.shape[2],A=null!=s,E=null!=o,_="leakyrelu"===l,D=null!=l?yr(l,!0):null;let R;if((1===f||1===m)&&$>1e3&&!1===(A||E||_||null!=D)){let e=S,t=N;n&&(e=Rr({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),T.push(e)),r&&(t=Rr({inputs:{x:N},backend:a,attrs:{perm:[0,2,1]}}),T.push(t));const s=1===m;let i=e;1!==m&&(i=Ir({inputs:{x:e},backend:a,attrs:{shape:[C,$,1]}}),T.push(i));const o=1===m?2:1;let u=t;s&&(u=Ir({inputs:{x:t},backend:a,attrs:{shape:[C,1,$]}}),T.push(u));const l=vr({inputs:{a:i,b:u},backend:a});R=_r({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),T.push(l)}else{const l=(0,i.x8V)(e.dtype,t.dtype),c=new br(k,I,[C,f,m],n,r,A,D,E,_),p=[S,N];if(null!=s&&p.push(s),E&&p.push(o),_){const e=a.makeTensorInfo([],"float32",i.D5U.createScalarValue(u,"float32"));p.push(e),T.push(e)}R=a.runWebGLProgram(c,p,l)}const F=Ir({inputs:{x:R},backend:a,attrs:{shape:v}});T.push(R);for(const e of T)a.disposeIntermediateTensorInfo(e);return F}const Mr={kernelName:i.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;return Or({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:p,activation:c})}},zr="return abs(x);",Br={kernelName:i.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=In(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xn(r.shape,zr):new Gn(r.shape,zr),n.runWebGLProgram(a,[r],r.dtype)}},Lr=mr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Wr={kernelName:i.VGw,backendName:"webgl",kernelFunc:Lr},Ur=mr({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Pr={kernelName:i.SpW,backendName:"webgl",kernelFunc:Ur},Vr="return a + b;",Hr=gr({opSnippet:Vr,packedOpSnippet:Vr,supportsComplex:!0,cpuKernelImpl:Qt}),Gr={kernelName:i.mm_,backendName:"webgl",kernelFunc:Hr};class jr{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class qr{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Xr={kernelName:i.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return sr({inputs:{x:a[0]},backend:r});if(a.length>(0,i.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>(0,i.x8V)(e,t))),o=a.map((e=>e.shape)),u=(0,i.OBj)().getBool("WEBGL_PACK")?new qr(a[0].shape,o):new jr(a[0].shape,o);return r.runWebGLProgram(u,a,s)}},Kr={kernelName:i.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.D5U.parseAxisParam(s,a.shape);let c=l;const p=i.Wap.getAxesPermutation(c,u);let h=a;null!=p&&(h=Rr({inputs:{x:a},backend:n,attrs:{perm:p}}),c=i.Wap.getInnerMostAxes(c.length,u)),i.Wap.assertAxesAreInnerMostDims("all",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(h.shape,c),m=Ir({inputs:{x:h},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"all",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},Qr={kernelName:i.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.D5U.parseAxisParam(s,a.shape);let c=l;const p=i.Wap.getAxesPermutation(c,u);let h=a;null!=p&&(h=Rr({inputs:{x:a},backend:n,attrs:{perm:p}}),c=i.Wap.getInnerMostAxes(c.length,u)),i.Wap.assertAxesAreInnerMostDims("any",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(h.shape,c),m=Ir({inputs:{x:h},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"any",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}};class Yr{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Jr{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,i.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,u=o.length,l=at(u),c=Bn("coords",u);let p,h;if(1===s){h=u+1;const e=at(h);p=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[u-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[u-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[u-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[u-2]};`}else h=u,p=`\n        ${l} sourceLocR = coords;\n        ++${c[u-1]};\n        ${l} sourceLocG = coords;\n        ++${c[u-2]};\n        ${l} sourceLocA = coords;\n        --${c[u-1]};\n        ${l} sourceLocB = coords;\n        --${c[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),f="."+d[h-1],m=d.map((e=>"int "+e)),g=Bn("sourceLocR",h-1).concat("inIdx.r"),y=Bn("sourceLocG",h-1).concat("inIdx.g"),b=Bn("sourceLocB",h-1).concat("inIdx.b"),x=Bn("sourceLocA",h-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${c[u-1]} < ${o[u-1]-1};\n        bool hasNextRow = ${c[u-2]} < ${o[u-2]-1};\n        ${p}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Zr(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const o=i.Wap.computeOptimalWindowSize(s),u={windowSize:o,inSize:s,batchSize:a,outSize:Math.ceil(s/o)},l=new Yr(u,n,null==r),c=[t];null!=r&&c.push(r);const p=e.runWebGLProgram(l,c,"int32");if(1===p.shape[1])return p;const h=Zr(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function ea(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],o=i.Wap.computeOptimalWindowSize(s),u=new Jr(a,o,n,null==r),l=null==r?[t]:[t,r],c=e.runWebGLProgram(u,l,"int32");if(c.shape.length===t.shape.length){const r=ea(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function ta(e,t,n,r){const a=[n];if(i.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,i.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,o]=i.Wap.computeOutAndReduceShapes(t.shape,a),u=i.D5U.sizeFromShape(o),l=Ir({inputs:{x:t},backend:e,attrs:{shape:[-1,u]}});n.push(l);const c=Zr(e,l,r);n.push(c);const p=Ir({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return ea(e,t,r)}const na={kernelName:i.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.D5U.parseAxisParam(s,a.shape);const u=i.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Rr({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],l.shape.length);const p=ta(n,l,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},ra={kernelName:i.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let o=i.D5U.parseAxisParam(s,a.shape);const u=i.Wap.getAxesPermutation(o,a.shape.length);let l=a;const c=[];null!=u&&(l=Rr({inputs:{x:a},backend:n,attrs:{perm:u}}),c.push(l),o=i.Wap.getInnerMostAxes(o.length,l.shape.length)),i.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],l.shape.length);const p=ta(n,l,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},aa=mr({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),sa={kernelName:i.M2y,backendName:"webgl",kernelFunc:aa},ia=mr({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),oa={kernelName:i.qw7,backendName:"webgl",kernelFunc:ia},ua=mr({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),la={kernelName:i.jMg,backendName:"webgl",kernelFunc:ua},ca=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),pa={kernelName:i.QCc,backendName:"webgl",kernelFunc:ca},ha=mr({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),da={kernelName:i.Oyi,backendName:"webgl",kernelFunc:ha};class fa{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,p=e.effectiveFilterWidth,h=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${p} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class ma{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,p=e.dilationWidth,h=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${p}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${p};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${p}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${p}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${p}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const ga={kernelName:i.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;he(a,"avgPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.Wap.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.D5U.arraysEqual(c.inShape,c.outShape))return sr({inputs:{x:a},backend:n});const p=new fa(c,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}},ya={kernelName:i._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dimRoundingMode:l,dataFormat:c}=r,p=i.Wap.computePool3DInfo(a.shape,s,o,[1,1,1],u,l,c),h=new ma(p,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}};class ba{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,p=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${p});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class xa{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=p-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${p};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const wa={kernelName:i.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=i.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,p),d=new xa(h);return n.runWebGLProgram(d,[a],o.dtype)}},va={kernelName:i.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s;he([a,s],"avgPoolGrad");const{filterSize:u,strides:l,pad:c}=r,p=i.Wap.computePool2DInfo(o.shape,u,l,1,c),h=new ba(p);return n.runWebGLProgram(h,[a],o.dtype)}},ka={kernelName:i.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Or({a,b:s,transposeA:i,transposeB:o,backend:n})}};class Ia{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="1.0";null!=a&&(i.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class Sa{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],i.Wap.assertAndGetBroadcastShape(e,t),i.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(i.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=a&&(i.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Na={kernelName:i.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:o,scale:u}=e;i.D5U.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.D5U.assert(null==u||a.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const c=[r,a,s];let p=null;null!=o&&(p=o.shape,c.push(o));let h=null;null!=u&&(h=u.shape,c.push(u));const d=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Sa(r.shape,a.shape,s.shape,p,h,l):new Ia(r.shape,a.shape,s.shape,p,h,l);return t.runWebGLProgram(d,c,c[0].dtype)}};class Ta{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=at(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return Ca.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${Ca[t]} = start[${t}] + coords.${Ca[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const Ca=["x","y","z","w","u","v"];class $a{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=at(this.rank),n=Bn("coords",this.rank),r=Bn("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function Aa(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:o}=r,[u,l]=i.kuN.parseSliceParams(a,s,o);if(i.kuN.assertParamsValid(a,u,l),0===i.D5U.sizeFromShape(l))return n.makeTensorInfo(l,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Sn(e.values,u,l,a.shape,a.dtype);return n.makeTensorInfo(l,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),p=i.kuN.isSliceContinous(a.shape,u,l);if(c||!p){const e=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $a(l):new Ta(l),t=[u];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),o=r.texData.get(s.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let u=i.kuN.computeFlatOffset(t,i.D5U.computeStrides(e.shape));a.slice&&(u+=a.slice.flatOffset),o.slice={flatOffset:u,origDataId:a.slice&&a.slice.origDataId||e.dataId};const l=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,l+1),s}(a,u,l,n)}const Ea={kernelName:i.p2w,backendName:"webgl",kernelFunc:Aa},_a={kernelName:i.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:o}=r;i.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=i.Wap.getReshaped(a.shape,s,u),c=i.Wap.getPermuted(l.length,s.length),p=i.Wap.getReshapedPermuted(a.shape,s,u),h=i.Wap.getSliceBeginCoords(o,s.length),d=i.Wap.getSliceSize(p,o,s.length),f=[],m=Ir({inputs:{x:a},backend:n,attrs:{shape:l}}),g=Rr({inputs:{x:m},backend:n,attrs:{perm:c}}),y=Ir({inputs:{x:g},backend:n,attrs:{shape:p}}),b=Aa({inputs:{x:y},backend:n,attrs:{begin:h,size:d}});return f.push(m),f.push(g),f.push(y),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Da={kernelName:i.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=Yt(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},Ra=gr({opSnippet:"return float(a != b);",cpuKernelImpl:xn,dtype:"bool"}),Fa={kernelName:i.yQU,backendName:"webgl",kernelFunc:Ra};function Oa(e){const{inputs:t,backend:n}=e,{input:r}=t;return sr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const Ma={kernelName:i.xJR,backendName:"webgl",kernelFunc:Oa},za={kernelName:i.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===s.dtype)return sr({inputs:{x:s},backend:r});const t=i.lls(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=or({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=Oa({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!i.D5U.hasEncodingLoss(s.dtype,o)){const e=sr({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Gn(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",i.D5U.getTypedArrayFromDType("bool",1)),t=Ra({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${o}`)}},Ba="return ceil(x);",La=mr({opSnippet:Ba,packedOpSnippet:Ba,cpuKernelImpl:Zt}),Wa={kernelName:i.gJX,backendName:"webgl",kernelFunc:La};class Ua{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class Pa{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const Va={kernelName:i.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:o}=r;let u;u=(0,i.OBj)().getBool("WEBGL_PACK_CLIP")?new Pa(a.shape):new Ua(a.shape);const l=[[s],[o]];return n.runWebGLProgram(u,[a],a.dtype,l)}};class Ha{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Ga(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const ja={kernelName:i.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new Ha(r.shape),i=[Ga(r,a.complexTensorInfos.real),Ga(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class qa{constructor(e){this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Xa{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=i.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=at(r),s=Bn("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const u=new Array(e.length-1);u[0]=e[0][t];for(let n=1;n<u.length;n++)u[n]=u[n-1]+e[n][t];const l=o[t],c=o.slice(-2),p=o.join();let h=`if (${l} < ${u[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${c.join()}));\n        }`;for(let e=1;e<u.length;e++){const t=u[e-1];h+=`\n        if (${l} < ${u[e]}  && ${l} >= ${u[e-1]}) {\n          return getChannel(\n            getT${e}(${Ka(o,l,t)}),\n            vec2(${Ka(c,l,t)}));\n        }`}const d=u.length,f=u[u.length-1];h+=`\n        return getChannel(\n          getT${d}(${Ka(o,l,f)}),\n          vec2(${Ka(c,l,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function Ka(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function Qa(e){const{inputs:t,backend:n}=e,{input:r}=t;return sr({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Ya={kernelName:i.J_u,backendName:"webgl",kernelFunc:Qa};function Ja(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Oa({inputs:{input:e},backend:n}))),a=e.map((e=>Qa({inputs:{input:e},backend:n}))),s=Ja(r,t,n),i=Ja(a,t,n),o=or({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=i.D5U.sizeFromShape(e.shape.slice(t));return Ir({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),s=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=i.Wap.computeOutShape(a.map((e=>e.shape)),1),u=1===a[0].shape[0],l=en(s,o,r,u),c=i.Wap.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(c,r,l);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}if(e.length>(0,i.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=Ja(e.slice(0,r),t,n),s=Ja(e.slice(r),t,n),i=Ja([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if((0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new Xa(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:o}=function(e,t,n){const r=i.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>Ir({inputs:{x:e},attrs:{shape:[-1,i.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),u=new qa(s.map((e=>e.shape))),l=n.runWebGLProgram(u,s,r);s.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=Ir({inputs:{x:l},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(l),c}function Za(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=i.D5U.parseAxisParam(a,t[0].shape)[0],o=i.Wap.computeOutShape(t.map((e=>e.shape)),s);if(0===i.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const u=t.filter((e=>i.D5U.sizeFromShape(e.shape)>0));if(1===u.length)return sr({inputs:{x:u[0]},backend:n});const l=u.map((e=>e.shape));return i.Wap.assertParamsConsistent(l,s),Ja(u,s,n)}const es={kernelName:i.Eh3,backendName:"webgl",kernelFunc:Za};class ts{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class ns{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,p=e.filterHeight,h=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class rs{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:l,dilationHeight:c,dataFormat:p}=n,{left:h,top:d}=o,f=a*r,m=fe(),g="channelsLast"===p,y=g?0:1,b=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${l} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[b]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function as({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape,c=r.texData.get(e.dataId),p=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],y=(1===h||1===d)&&p>1e3,b=l[2]%2!=0&&!!c.isPacked;if(!y&&(0,i.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&b){const p=f?l[0]*l[1]*(l[2]+1):l[0]*l[2]*(l[3]+1),h={dataId:e.dataId,shape:[1,p,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,i.D5U.assert(J(c.shape,h.shape),(()=>`packed reshape ${c.shape} to ${h.shape} isn't free`));const y=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(y);const b=Or({a:h,b:y,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o}),x=r.texData.get(b.dataId);i.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,x.shape=n.outShape,m=sr({inputs:{x:b},backend:r}),m.shape=n.outShape,g.push(b)}else{const i=Ir({inputs:{x:e},backend:r,attrs:{shape:[1,f?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),p=Or({a:i,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:u,preluActivationWeights:s,leakyreluAlpha:o});m=Ir({inputs:{x:p},backend:r,attrs:{shape:n.outShape}}),g.push(i),g.push(c),g.push(p)}for(const e of g)r.disposeIntermediateTensorInfo(e);return m}function ss({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:o=0,activation:u=null}){const{filterWidth:l,filterHeight:c,inChannels:p,outWidth:h,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=l*c*p,y=d*h,b=[g,y],x=[],w=Ir({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=Ir({inputs:{x:t},backend:r,attrs:{shape:[1,g,i.D5U.sizeFromShape(t.shape)/g]}});x.push(w),x.push(v);const k=new rs(b,w.shape,n),I=r.runWebGLProgram(k,[w],"float32"),S=Ir({inputs:{x:I},backend:r,attrs:{shape:[1,b[0],b[1]]}});x.push(I),x.push(S);const N=null!=a,T=null!=s,C="leakyrelu"===u,$=u?yr(u,!0):null,A=new br(S.shape,v.shape,[1,y,n.outChannels],!0,!1,N,$,T,C),E=[S,v];if(a&&E.push(a),T&&E.push(s),C){const e=r.makeTensorInfo([],"float32",i.D5U.createScalarValue(o,"float32"));E.push(e),x.push(e)}const _=r.runWebGLProgram(A,E,"float32"),D=Ir({inputs:{x:_},backend:r,attrs:{shape:m?[1,d,h,n.outChannels]:[1,n.outChannels,d,h]}});x.push(_);for(const e of x)r.disposeIntermediateTensorInfo(e);return D}const is={kernelName:i.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dataFormat:l,dilations:c,dimRoundingMode:p}=r,h=i.Wap.convertConv2DDataFormat(l),d=i.Wap.computeConv2DInfo(a.shape,s.shape,o,c,u,p,!1,h);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=ss({x:a,filter:s,convInfo:d,backend:n});else{const e=new ts(d);f=n.runWebGLProgram(e,[a,s],"float32")}else f=as({x:a,filter:s,convInfo:d,backend:n});const m=Ir({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class os{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class us{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ls{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class cs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ps={kernelName:i.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:p}=r,h=i.Wap.convertConv2DDataFormat(l),d=i.Wap.computeConv2DInfo(a.shape,p,o,1,u,c,!1,h),f=new os(d);return n.runWebGLProgram(f,[a,s],"float32")}},hs={kernelName:i.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:o,strides:u,pad:l,dataFormat:c,dimRoundingMode:p}=r,h=i.Wap.convertConv2DDataFormat(c),d=i.Wap.computeConv2DInfo(o,s.shape,u,1,l,p,!1,h),f=new us(d);return n.runWebGLProgram(f,[a,s],"float32")}},ds={kernelName:i.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.Wap.computeConv3DInfo(a.shape,s.shape,o,l,u),p=new ns(c);return n.runWebGLProgram(p,[a,s],"float32")}},fs={kernelName:i.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,pad:u,filterShape:l}=r,c=i.Wap.computeConv3DInfo(a.shape,l,o,1,u),p=new ls(c);return n.runWebGLProgram(p,[a,s],"float32")}},ms={kernelName:i.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:o,strides:u,inputShape:l}=r,c=i.Wap.computeConv3DInfo(l,s.shape,u,1,o),p=new cs(c);return n.runWebGLProgram(p,[a,s],"float32")}},gs=mr({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ys={kernelName:i.mc4,backendName:"webgl",kernelFunc:gs},bs=mr({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),xs={kernelName:i.TR1,backendName:"webgl",kernelFunc:bs};class ws{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,p]=n;this.outputShape=[l,c,p,u];const h="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=p>1?[""+(o-1)/(p-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const vs={kernelName:i.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new ws(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class ks{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${Is(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${at(r)} coords = getOutputCoords();\n        int end = ${Ss(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${Ss(r,"coords")} = idx;\n          val += getX(${Is(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function Is(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function Ss(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Ns={kernelName:i.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:o,reverse:u}=r,l=a.shape.length,c=i.Wap.getAxesPermutation([s],l);let p=a;null!=c&&(p=Rr({inputs:{x:a},backend:n,attrs:{perm:c}}));const h=i.Wap.getInnerMostAxes(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const d=p.shape[h];let f=sr({inputs:{x:p},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new ks(p.shape,!1,u),r=[[e]],a=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(a)}if(o){const e=new ks(p.shape,o,u),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Rr({inputs:{x:f},backend:n,attrs:{perm:i.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(p),e}return f}},Ts={kernelName:i.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=Yt(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Jt(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class Cs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const $s={kernelName:i.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:o}=r;i.D5U.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const u=a.shape[0],l="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],p="NHWC"===o?a.shape[3]:a.shape[1],h=l*s,d=c*s,f=p/(s*s),m=new Cs("NHWC"===o?[u,h,d,f]:[u,f,h,d],s,o);return n.runWebGLProgram(m,[a],a.dtype)}};class As{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,l=e.strideHeight,c=e.strideWidth,p=e.dilationHeight,h=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",y="";n&&(g=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,y="result = activation(result);");const b=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${l}, ${c});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${p};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${y}\n        setOutput(result);\n      }\n    `}}class Es{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.outChannels/e.inChannels,o=e.inHeight,u=e.inWidth,l=e.padInfo.top,c=e.padInfo.left,p=e.strideHeight,h=e.strideWidth,d=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,y=g;let b="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)b+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;for(let e=0;e<m;e++){for(let e=0;e<g;e++)b+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;b+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let t=0;t<(y+1)/2;t++){const n=2*t,r=n*f;if(b+=`\n          xC = xCCorner + ${r};\n          `,1===h){if(n<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n              `,b+=1===f&&r>0?`\n                xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${u}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                  }\n                  `):b+=`\n                if (xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xC${n} = xTexelC${n};\n                `,r+1<g)){const e=c%2==0?i.D5U.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(b+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                    xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${u}) {\n                      xTexelC${n+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${n+1}Ready = 1;\n                  }\n                  `,f>1&&(b+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                      xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${n}Ready = 1;\n                    }\n                    `),b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                  `):b+=1===e?`\n                    xC${n+1} = xTexelC${n};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                      xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${u}) {\n                        xTexelC${n+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${n+1}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${n+1};\n                    `}}else r<g&&(c%2==1?(b+=`\n                xCOffset = xC + 1 - ${h};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${u} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${u}) {\n                    xTexelC${n+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n              `,r+1<g&&(b+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${h};\n                  if(xCOffset >= 0 && xCOffset < ${u}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${u} && xTexelC${n}Ready == 0) {\n                  xTexelC${n} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${u}) {\n                    xTexelC${n}.zw = vec2(0.0);\n                  }\n                  xTexelC${n}Ready = 1;\n                }\n\n                xCOffset = xC + ${h};\n                if(xCOffset >= 0 && xCOffset < ${u} && xTexelC${n+1}Ready == 0) {\n                  xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${u}) {\n                    xTexelC${n+1}.zw = vec2(0.);\n                  }\n                  xTexelC${n+1}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${n}.xy, xTexelC${n+1}.xy);\n              `,r+1<g&&(b+=`\n                  xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                `)));n<g&&(b+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<g&&(b+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}b+="\n        }\n      "}let x="",w="";n&&(x=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${p}, ${h});\n      const ivec2 pads = ivec2(${l}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${b}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}const _s={kernelName:i.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l,dimRoundingMode:c}=r;let p=l;null==p&&(p=[1,1]),i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${p}'`));const h=i.Wap.computeConv2DInfo(a.shape,s.shape,o,p,u,c,!0);let d;return d=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new Es(h):new As(h),n.runWebGLProgram(d,[a,s],"float32")}};class Ds{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Fs={kernelName:i.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,filterShape:p}=r,h=i.Wap.computeConv2DInfo(a.shape,p,o,u,l,c,!0),d=new Ds(h);return n.runWebGLProgram(d,[a,s],"float32")}},Os={kernelName:i.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:o,dilations:u,pad:l,dimRoundingMode:c,inputShape:p}=r,h=i.Wap.computeConv2DInfo(p,s.shape,o,u,l,c,!0),d=new Rs(h);return n.runWebGLProgram(d,[a,s],"float32")}};class Ms{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const zs={kernelName:i.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=i.D5U.sizeFromShape(r.shape),o=Ir({inputs:{x:r},backend:n,attrs:{shape:[s]}}),u=new Ms(s),l=n.runWebGLProgram(u,[o],o.dtype),c=Ir({inputs:{x:l},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),c}};class Bs{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:p}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${p});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Ls={kernelName:i.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:o,pad:u,dilations:l}=r,c=i.Wap.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",l);let p;const h=new Bs(c);p=n.runWebGLProgram(h,[a,s],"float32");const d=Ir({inputs:{x:p},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(p),d}},Ws={kernelName:i.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:o,summedDims:u,idDims:l}=i.Wap.decodeEinsumEquation(a,s.length);i.Wap.checkEinsumDimSizes(o.length,l,s);const{path:c,steps:p}=i.Wap.getEinsumComputePath(u,l),h=p.length;let d=null,f=o.length;const m=[];for(let e=0;e<h;++e){for(const t of p[e]){const{permutationIndices:e,expandDims:r}=i.Wap.getEinsumPermutation(f,l[t]);let a;i.Wap.isIdentityPermutation(e)?a=s[t]:(a=Rr({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);i.D5U.arraysEqual(a.shape,o)||(a=Ir({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=vr({inputs:{a,b:d},backend:n}),m.push(d))}e<h-1&&(c[e]>=0&&(d=_r({inputs:{x:d},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Us=mr({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ps={kernelName:i.SX0,backendName:"webgl",kernelFunc:Us},Vs={kernelName:i.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=(0,i.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ar("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new rr("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Hs=gr({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:tn}),Gs={kernelName:i.hdR,backendName:"webgl",kernelFunc:Hs},js=mr({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${i.Wap.ERF_P};\n  float a1 = ${i.Wap.ERF_A1};\n  float a2 = ${i.Wap.ERF_A2};\n  float a3 = ${i.Wap.ERF_A3};\n  float a4 = ${i.Wap.ERF_A4};\n  float a5 = ${i.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),qs={kernelName:i.Omj,backendName:"webgl",kernelFunc:js},Xs="return exp(x);",Ks=mr({opSnippet:Xs,packedOpSnippet:Xs,cpuKernelImpl:nn}),Qs={kernelName:i.NEP,backendName:"webgl",kernelFunc:Ks};function Ys(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,o=s.shape.length,u=s.shape.slice();let l=a;return a<0&&(i.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),l=o+a+1),u.splice(l,0,1),Ir({inputs:{x:s},backend:r,attrs:{shape:u}})}const Js={kernelName:i.YFo,backendName:"webgl",kernelFunc:Ys},Zs="return exp(x) - 1.0;",ei=mr({opSnippet:Zs,packedOpSnippet:Zs,cpuKernelImpl:rn}),ti={kernelName:i.Y0y,backendName:"webgl",kernelFunc:ei};class ni{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ri(e,t,n){const r=n.texData.get(e.dataId),a=i.D5U.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],o=Ir({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),u=o.shape,l=new ni("real",u,t),c=new ni("imag",u,t),p=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(l,p,"float32"),d=n.runWebGLProgram(c,p,"float32"),f=or({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);const m=Ir({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const ai={kernelName:i.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ri(r,!1,n)}};class si{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function ii(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||i.D5U.inferDtype(a),"string"===s){const e=i.D5U.getArrayFromDType(s,i.D5U.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new si(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const oi={kernelName:i.deh,backendName:"webgl",kernelFunc:ii};class ui{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const li={kernelName:i.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new ui(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},ci="return floor(x);",pi=mr({opSnippet:ci,packedOpSnippet:ci,cpuKernelImpl:an}),hi={kernelName:i.OR,backendName:"webgl",kernelFunc:pi},di=gr({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),fi={kernelName:i.jeX,backendName:"webgl",kernelFunc:di};class mi{constructor(e){this.variableNames=["A"];const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class gi{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=fe(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const yi={kernelName:i.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,u="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[l,c]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[c,l],d=[c,l,s];(u||o)&&(null==bi&&(bi=document.createElement("canvas").getContext("2d")),bi.canvas.width=l,bi.canvas.height=c,bi.drawImage(a,0,0,l,c),a=bi.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=h.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,i.OBj)().getBool("WEBGL_PACK")?new gi(d):new mi(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let bi;const xi={kernelName:i._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dataFormat:p,dilations:h,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=r,g=i.Wap.convertConv2DDataFormat(p),y=i.Wap.computeConv2DInfo(a.shape,s.shape,l,h,c,d,!1,g);let b;const x=[];if(1!==y.filterHeight||1!==y.filterWidth||1!==y.dilationHeight||1!==y.dilationWidth||1!==y.strideHeight||1!==y.strideWidth||"SAME"!==y.padInfo.type&&"VALID"!==y.padInfo.type)if((0,i.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])b=ss({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});else{const e=null!=o,t=null!=u,r="leakyrelu"===f,l=f?yr(f,!1):null,c=new ts(y,e,l,t,r),p=[a,s];if(o&&p.push(o),u&&p.push(u),r){const e=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(m,"float32"));p.push(e),x.push(e)}b=n.runWebGLProgram(c,p,"float32")}else b=as({x:a,filter:s,convInfo:y,backend:n,bias:o,activation:f,preluActivationWeights:u,leakyreluAlpha:m});const w=Ir({inputs:{x:b},backend:n,attrs:{shape:y.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},wi={kernelName:i.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:o,preluActivationWeights:u}=t,{strides:l,pad:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r,m=[];let g=p;null==g&&(g=[1,1]),i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const y=i.Wap.computeConv2DInfo(a.shape,s.shape,l,g,c,h,!0),b=(0,i.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&y.strideWidth<=2&&y.outChannels/y.inChannels==1,x=d?yr(d,b):null,w=[a,s],v=null!=o,k=null!=u,I="leakyrelu"===d;if(v&&w.push(o),k&&w.push(u),I){const e=n.makeTensorInfo([],"float32",i.D5U.createScalarValue(f,"float32"));w.push(e),m.push(e)}let S;S=b?new Es(y,v,x,k,I):new As(y,v,x,k,I);const N=n.runWebGLProgram(S,w,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),N}};class vi{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=at(t.length),a=at(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const ki={kernelName:i.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,o=s[s.length-1],u=i.D5U.sizeFromShape(r.shape),[l,c,p,h]=i.Wap.prepareAndValidate(r,a),d=Ir({inputs:{x:a},backend:n,attrs:{shape:[c,o]}}),f=Ir({inputs:{x:r},backend:n,attrs:{shape:[i.D5U.sizeFromShape(r.shape)/p,p]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=sn(e,t,r.dtype,c,o,p,h,r.shape,u);return n.makeTensorInfo(l,r.dtype,s.values)}const m=new vi(o,h,[c,p]),g=n.runWebGLProgram(m,[f,d],f.dtype),y=Ir({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}};class Ii{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=at(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function Si(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:o,batchDims:u}=r,l=i.D5U.parseAxisParam(o,a.shape)[0],c=i.Wap.segment_util.collectGatherOpShapeInfo(a,s,l,u),p=i.D5U.sizeFromShape(s.shape),h=[],d=Ir({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=Ir({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,p/c.batchSize]}});h.push(d),h.push(f);const m=[c.batchSize,c.outerSize,p/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),r=on(t,e,m);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const g=new Ii(d.shape,m),y=n.runWebGLProgram(g,[d,f],d.dtype);h.push(y);const b=Ir({inputs:{x:y},backend:n,attrs:{shape:c.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const Ni={kernelName:i.qi_,backendName:"webgl",kernelFunc:Si},Ti=gr({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:un,dtype:"bool"}),Ci={kernelName:i.iZT,backendName:"webgl",kernelFunc:Ti},$i=gr({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:ln}),Ai={kernelName:i.Acj,backendName:"webgl",kernelFunc:$i},Ei={kernelName:i.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ri(r,!0,n)}},_i=mr({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Di={kernelName:i.avt,backendName:"webgl",kernelFunc:_i},Ri=mr({opSnippet:"return float(isinf(x));",dtype:"bool"}),Fi={kernelName:i.iWB,backendName:"webgl",kernelFunc:Ri},Oi=mr({opSnippet:"return float(isnan(x));",dtype:"bool"}),Mi={kernelName:i.r7n,backendName:"webgl",kernelFunc:Oi},zi=gr({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:cn,dtype:"bool"}),Bi={kernelName:i.vtC,backendName:"webgl",kernelFunc:zi},Li=gr({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:pn,dtype:"bool"}),Wi={kernelName:i.CAk,backendName:"webgl",kernelFunc:Li},Ui={kernelName:i.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=hn(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Pi=mr({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:dn}),Vi={kernelName:i.ZbH,backendName:"webgl",kernelFunc:Pi},Hi=mr({opSnippet:"return log(1.0 + x);"}),Gi={kernelName:i.kU,backendName:"webgl",kernelFunc:Hi},ji=gr({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),qi={kernelName:i.PYm,backendName:"webgl",kernelFunc:ji},Xi=mr({opSnippet:"return float(!(x >= 1.0));"}),Ki={kernelName:i.VfG,backendName:"webgl",kernelFunc:Xi},Qi=gr({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Yi={kernelName:i.MZg,backendName:"webgl",kernelFunc:Qi};class Ji{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Zi{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const eo={kernelName:i.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:o,alpha:u,beta:l}=r,c=(0,i.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Zi(a.shape,s,o,u,l):new Ji(a.shape,s,o,u,l);return n.runWebGLProgram(c,[a],a.dtype)}};class to{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const no={kernelName:i.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,p=new to(a.shape,o,u,l,c);return n.runWebGLProgram(p,[a,s,i],a.dtype)}};function ro(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:o}=r,u=a.shape.length,l=i.D5U.parseAxisParam(s,a.shape);let c=l;const p=i.Wap.getAxesPermutation(c,u),h=null!=p,d=n.shouldExecuteOnCPU([a]);let f=a;if(h){if(d){const e=n.texData.get(f.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=a.shape[p[e]];const r=On(e,a.shape,a.dtype,p,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=r}else f=Er(a,p,n);c=i.Wap.getInnerMostAxes(c.length,u)}i.Wap.assertAxesAreInnerMostDims("max",c,u);const[m,g]=i.Wap.computeOutAndReduceShapes(f.shape,c);let y,b=m;if(o&&(b=i.Wap.expandShapeToKeepDim(m,l)),d){const e=n.texData.get(f.dataId).values,t=fn(e,i.D5U.sizeFromShape(g),b,a.dtype);y=n.makeTensorInfo(b,a.dtype),n.texData.get(y.dataId).values=t}else y=function(e,t,n,r){const a=i.D5U.sizeFromShape(t),s=Ir({inputs:{x:e},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/a,a]},backend:r}),o=Cr(s,e.dtype,"max",r),u=Ir({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(f,g,b,n);return h&&n.disposeIntermediateTensorInfo(f),y}const ao={kernelName:i.YoZ,backendName:"webgl",kernelFunc:ro},so=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:mn}),io={kernelName:i.BMI,backendName:"webgl",kernelFunc:so},oo={kernelName:i.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;he(a,"maxPool");const{filterSize:s,strides:o,pad:u,dimRoundingMode:l}=r;i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=i.Wap.computePool2DInfo(a.shape,s,o,1,u,l);if(1===c.filterWidth&&1===c.filterHeight&&i.D5U.arraysEqual(c.inShape,c.outShape))return sr({inputs:{x:a},backend:n});const p=new fa(c,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}},uo={kernelName:i.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,p=i.Wap.computePool3DInfo(a.shape,s,o,[1,1,1],u,c,l),h=new ma(p,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}};class lo{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class co{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,p=u-1-e.padInfo.top,h=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${p}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const po={kernelName:i.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,o=s,{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=i.Wap.computePool3DInfo(o.shape,u,l,[1,1,1],c,p),d=new ma(h,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new co(h),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},ho={kernelName:i.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:o}=t,u=s;he([s,o],"maxPoolGrad");const{filterSize:l,strides:c,pad:p,dimRoundingMode:h}=r,d=i.Wap.computePool2DInfo(u.shape,l,c,1,p,h),f=new fa(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new lo(d),y=n.runWebGLProgram(g,[a,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},fo={kernelName:i.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:o,includeBatchInIndex:u}=t,l=n;i.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];i.D5U.assert(i.Wap.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const p=i.Wap.computePool2DInfo(r.shape,a,s,c,o),[h,d]=function(e,t,n,r){let a=new fa(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new fa(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,u,p,l);return[h,d]}},mo={kernelName:i.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,o=n,u=r.shape.length,l=i.D5U.parseAxisParam(s,r.shape);let c=l;const p=i.Wap.getAxesPermutation(c,u),h=null!=p,d=o.shouldExecuteOnCPU([r]),f=[];let m=r;if(h){if(d){const e=o.texData.get(m.dataId).values,t=new Array(u);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];const n=On(e,r.shape,r.dtype,p,t);m=o.makeTensorInfo(t,r.dtype),o.texData.get(m.dataId).values=n}else m=Er(r,p,o);f.push(m),c=i.Wap.getInnerMostAxes(c.length,u)}i.Wap.assertAxesAreInnerMostDims("sum",c,u);const[g,y]=i.Wap.computeOutAndReduceShapes(m.shape,c);let b=g;a&&(b=i.Wap.expandShapeToKeepDim(g,l));const x=function(e,t,n,r){const a=i.D5U.sizeFromShape(t),s=Ir({inputs:{x:e},attrs:{shape:[i.D5U.sizeFromShape(e.shape)/a,a]},backend:r}),o=Cr(s,"float32","mean",r),u=Ir({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(o),u}(m,y,b,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},go={kernelName:i.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=i.D5U.parseAxisParam(s,a.shape);let c=l;const p=i.Wap.getAxesPermutation(c,u);let h=a;null!=p&&(h=Rr({inputs:{x:a},backend:n,attrs:{perm:p}}),c=i.Wap.getInnerMostAxes(c.length,a.shape.length)),i.Wap.assertAxesAreInnerMostDims("min",c,u);const[d,f]=i.Wap.computeOutAndReduceShapes(h.shape,c),m=Ir({inputs:{x:h},backend:n,attrs:{shape:[-1,i.D5U.sizeFromShape(f)]}}),g=Cr(m,m.dtype,"min",n);let y;return y=Ir(o?{inputs:{x:g},backend:n,attrs:{shape:i.Wap.expandShapeToKeepDim(d,l)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),y}},yo=gr({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:gn}),bo={kernelName:i.q8u,backendName:"webgl",kernelFunc:yo};class xo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class wo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Bn("rc",r),u=Bn("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${p};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${p};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${p}) +\n                gte * ((end - 1) * 2 - source + ${p});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const vo={kernelName:i.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,o=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new wo(r.shape,a,s):new xo(r.shape,a,s);return t.runWebGLProgram(o,[r],r.dtype)}},ko=gr({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Io={kernelName:i.Vbg,backendName:"webgl",kernelFunc:ko};class So{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const No=gr({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),To={kernelName:i.oHH,backendName:"webgl",kernelFunc:No},Co="return a - b;",$o=gr({opSnippet:Co,packedOpSnippet:Co,supportsComplex:!0,cpuKernelImpl:Dn}),Ao={kernelName:i.Tr8,backendName:"webgl",kernelFunc:$o};function Eo(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,o=i.D5U.parseAxisParam([s],a.shape),u=ro({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),l=i.Wap.expandShapeToKeepDim(u.shape,o),c=Ir({inputs:{x:u},backend:n,attrs:{shape:l}}),p=$o({inputs:{a,b:c},backend:n}),h=Ks({inputs:{x:p},backend:n}),d=_r({inputs:{x:h},backend:n,attrs:{axis:o,keepDims:!1}}),f=Ir({inputs:{x:d},backend:n,attrs:{shape:l}}),m=No({inputs:{a:h,b:f},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const _o={kernelName:i.Gcp,backendName:"webgl",kernelFunc:Eo},Do={kernelName:i.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:Eo({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],p=new So(l,c,s),h=[[i]],d=n.runWebGLProgram(p,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),d}},Ro="return -x;",Fo={kernelName:i.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=bn(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=(0,i.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xn(r.shape,Ro):new Gn(r.shape,Ro),n.runWebGLProgram(a,[r],r.dtype)}},Oo=i.GDt.nonMaxSuppressionV3Impl,Mo={kernelName:i.uv1,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l}=r,c=n.readSync(a.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=Oo(c,p,o,u,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},zo=i.GDt.nonMaxSuppressionV4Impl,Bo={kernelName:i.cye,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,padToMaxOutputSize:c}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:f}=zo(p,h,o,u,l,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Lo=i.GDt.nonMaxSuppressionV5Impl,Wo={kernelName:i.W0H,backendName:"webgl",kernelFunc:function(e){i.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:o,iouThreshold:u,scoreThreshold:l,softNmsSigma:c}=r,p=n.readSync(a.dataId),h=n.readSync(s.dataId),d=o,f=u,m=l,g=c,{selectedIndices:y,selectedScores:b}=Lo(p,h,d,f,m,g);return[n.makeTensorInfo([y.length],"int32",new Int32Array(y)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}};class Uo{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Po={kernelName:i.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:o,offValue:u}=r,l=i.D5U.sizeFromShape(a.shape),c=new Uo(l,s,o,u),p=Ir({inputs:{x:a},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(c,[p],a.dtype);n.disposeIntermediateTensorInfo(p);const d=Ir({inputs:{x:h},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(h),d}};function Vo(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Oa({inputs:{input:r},backend:n}),t=Vo({inputs:{x:e},backend:n}),a=Qa({inputs:{input:r},backend:n}),s=Vo({inputs:{x:a},backend:n}),i=or({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return ii({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Ho={kernelName:i.RuY,backendName:"webgl",kernelFunc:Vo},Go={kernelName:i.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=Oa({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=Qa({inputs:{input:a},backend:r}),i=Vo({inputs:{x:s},backend:r}),o=or({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return ii({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},jo={kernelName:i.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Ys({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,o=t[0].dtype;t.forEach((e=>{i.D5U.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),i.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const u=[],l=Za({inputs:t.map((e=>{const t=Ys({inputs:{input:e},backend:n,attrs:{dim:a}});return u.push(t),t})),backend:n,attrs:{axis:a}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class qo{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xo{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=at(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Bn("rc",r),u=Bn("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,p=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${p[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const Ko=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:o}=r,u=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xo(a.shape,s,o):new qo(a.shape,s,o),l=[[o]];return n.runWebGLProgram(u,[a],a.dtype,l)},Qo={kernelName:i.lyA,backendName:"webgl",kernelFunc:Ko},Yo=gr({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Jo={kernelName:i.pe_,backendName:"webgl",kernelFunc:Yo},Zo={kernelName:i.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:o}=r,u=a.shape.length,l=[],c=i.D5U.parseAxisParam(s,a.shape);let p=c;const h=i.Wap.getAxesPermutation(p,u);let d,f=a;if(null!=h&&(f=Rr({inputs:{x:a},backend:n,attrs:{perm:h}}),p=i.Wap.getInnerMostAxes(p.length,u),l.push(f)),i.Wap.assertAxesAreInnerMostDims("prod",p,u),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:a}=wn(f.shape,f.dtype,e,p);d=n.makeTensorInfo(r,a,t)}else{const[e,t]=i.Wap.computeOutAndReduceShapes(f.shape,p),r=i.D5U.sizeFromShape(t),s=Ir({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=Cr(s,(0,i.z4k)(a.dtype),"prod",n);d=Ir({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(s),l.push(o)}if(o){l.push(d);const e=i.Wap.expandShapeToKeepDim(d.shape,c);d=Ir({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},eu=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=vn(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},tu={kernelName:i.e6w,backendName:"webgl",kernelFunc:eu},nu=mr({opSnippet:"return 1.0 / x;"}),ru={kernelName:i.$HU,backendName:"webgl",kernelFunc:nu},au=mr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),su={kernelName:i.qkr,backendName:"webgl",kernelFunc:au},iu=mr({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ou={kernelName:i.SbG,backendName:"webgl",kernelFunc:iu};class uu{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class lu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let p;p=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const cu={kernelName:i._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,p=(0,i.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new lu(a.shape,l,c,s,o):new uu(a.shape,l,c,s,o);return n.runWebGLProgram(p,[a],"float32")}};class pu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const hu={kernelName:i.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new pu(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class du{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class fu{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],p=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${p})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const mu={kernelName:i.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:o,size:u}=r,[l,c]=u,p=(0,i.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new fu(a.shape,l,c,s,o):new du(a.shape,l,c,s,o);return n.runWebGLProgram(p,[a],a.dtype)}};class gu{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],p=1/l,h=1/c,d=2*Math.ceil(p)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${p});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const yu={kernelName:i.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new gu(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class bu{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=at(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class xu{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Bn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=at(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const wu={kernelName:i.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,o=a.shape.length,u=i.D5U.parseAxisParam(s,a.shape);if(0===o)return sr({inputs:{x:a},backend:n});const l=(0,i.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xu(a.shape,u):new bu(a.shape,u);return n.runWebGLProgram(l,[a],a.dtype)}};class vu{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ku={kernelName:i.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:o}=t,u=n,l=new vu(r.shape,s),[c,p]=i.Wap.getImageCenter(o,r.shape[1],r.shape[2]),h=[[c,p,Math.sin(a),Math.cos(a)]];return u.runWebGLProgram(l,[r],r.dtype,h)}},Iu=mr({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),Su={kernelName:i.e07,backendName:"webgl",kernelFunc:Iu},Nu=mr({opSnippet:"return inversesqrt(x);",cpuKernelImpl:kn}),Tu={kernelName:i.bV0,backendName:"webgl",kernelFunc:Nu};class Cu{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=at(a.length),u=at(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let p="";1===r?p="i":2===r&&(p="i, coords[1]");const h=`getUpdates(${p})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const $u={kernelName:i.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=i.Wap.calculateShapes(s,a,o),d=[h/c,c];if(0===h)return n.makeTensorInfo(o,a.dtype);const f=Ir({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=Ir({inputs:{x:s},backend:n,attrs:{shape:[l,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),y=new Cu(l,u,f.shape.length,m.shape.length,p,d),b=n.runWebGLProgram(y,[m,f,g],m.dtype),x=Ir({inputs:{x:b},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}};class Au{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=at(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const Eu={kernelName:i.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,o=new Au(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,s],(0,i.x8V)(a.dtype,s.dtype))}},_u=mr({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${i.Wap.SELU_SCALEALPHA};\n  float scale = ${i.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),Du={kernelName:i.oFR,backendName:"webgl",kernelFunc:_u},Ru=mr({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Fu={kernelName:i.a5O,backendName:"webgl",kernelFunc:Ru},Ou=mr({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Mu={kernelName:i.i5y,backendName:"webgl",kernelFunc:Ou},zu=mr({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Bu={kernelName:i.RQH,backendName:"webgl",kernelFunc:zu},Lu=mr({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Wu={kernelName:i.wYB,backendName:"webgl",kernelFunc:Lu},Uu=mr({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Pu={kernelName:i.MRv,backendName:"webgl",kernelFunc:Uu},Vu={kernelName:i.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:o}=r;i.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const u=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...o);for(let e=1+s.length;e<a.shape.length;++e)l.push([0,0]);const c=[],p=Ko({inputs:{x:a},backend:n,attrs:{paddings:l,constantValue:0}}),h=i.Wap.getReshaped(p.shape,s,u,!1),d=i.Wap.getPermuted(h.length,s.length,!1),f=i.Wap.getReshapedPermuted(p.shape,s,u,!1),m=Ir({inputs:{x:p},backend:n,attrs:{shape:h}}),g=Rr({inputs:{x:m},backend:n,attrs:{perm:d}}),y=Ir({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(p),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Hu={kernelName:i.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[p,h,d,f,m]=Nn(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,p),n.makeTensorInfo([h[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},Gu={kernelName:i.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,p]=Tn(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}},ju={kernelName:i.w3H,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Cn(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},qu={kernelName:i.ZjV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=Cn(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},Xu={kernelName:i.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:o}=t,{outputShape:u}=r,{sliceRank:l,numUpdates:c,strides:p,outputSize:h}=i.Wap.calculateShapes(s,a,u),d=new Cu(c,l,a.shape.length,s.shape.length,p,[h,1],!1),f=n.runWebGLProgram(d,[s,a,o],s.dtype),m=Ir({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(f),m}},Ku={kernelName:i.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:o}=r,u=i.D5U.parseAxisParam(o,a.shape)[0],l=i.Wap.prepareSplitSize(a,s,u),c=a.shape.length,p=new Array(c).fill(0),h=a.shape.slice();return l.map((e=>{const t=[...h];t[u]=e;const r=Aa({inputs:{x:a},backend:n,attrs:{begin:p,size:t}});return p[u]+=e,r}))}},Qu=mr({opSnippet:"return sqrt(x);"}),Yu={kernelName:i.FKq,backendName:"webgl",kernelFunc:Qu},Ju=mr({opSnippet:"return x * x;"}),Zu={kernelName:i.bK0,backendName:"webgl",kernelFunc:Ju},el="return (a - b) * (a - b);",tl=gr({opSnippet:el,packedOpSnippet:el}),nl={kernelName:i._tC,backendName:"webgl",kernelFunc:tl},rl={kernelName:i.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Gn(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class al{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=at(n.length),s=at(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const sl={kernelName:i.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:o,strides:u,beginMask:l,endMask:c,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=r,{nonStrided:f,$begin:m,$strides:g,size:y,newShape:b,outShape:x}=i.kuN.sliceInfo(a.shape,s,o,u,l,c,p,h,d),w=Ir({inputs:{x:a},backend:n,attrs:{shape:b}});let v;if(f){const e=Aa({inputs:{x:w},backend:n,attrs:{begin:m,size:y}});v=Ir({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))v=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,t=(0,i.f3b)(w.shape,w.dtype,e),r=$n(x,t,g,m);v=n.makeTensorInfo(x,w.dtype,r.values)}else{const e=new al(m,g,x);v=n.runWebGLProgram(e,[w],w.dtype)}const k=Ir({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},il={kernelName:i._JP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,h=n.readSync(c.dataId),d=n.readSync(p.dataId),[f,m]=An(h,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}},ol={kernelName:i.s1s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,p]=En(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}},ul={kernelName:i.XkS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=_n(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},ll=mr({opSnippet:"return tan(x);"}),cl={kernelName:i.sEM,backendName:"webgl",kernelFunc:ll},pl=mr({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),hl={kernelName:i.MIZ,backendName:"webgl",kernelFunc:pl};class dl{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=at(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function fl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>i.D5U.decodeString(e))):e,r=(0,i.f3b)(a.shape,a.dtype,t),o=Rn(r,s);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new dl(a.shape,s);return n.runWebGLProgram(o,[a],a.dtype)}const ml={kernelName:i.n9L,backendName:"webgl",kernelFunc:fl};class gl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class yl{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function bl(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function xl(e){let t=1;for(;t<e;)t*=2;return t}const wl={kernelName:i.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:o}=r,u=(0,i.OBj)().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=(0,i.OBj)().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),c=a.shape,p=c[c.length-1];if(n.shouldExecuteOnCPU([a])||p<u||s>l){const e=n.readSync(a.dataId),[t,r]=Fn(e,c,a.dtype,s,o);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return c[c.length-1]=0,[n.makeTensorInfo(c,a.dtype,[]),n.makeTensorInfo(c,"int32",[])];if(1===p)return[a,ii({attrs:{shape:c,dtype:"int32",value:0},backend:n})];const h=n.texData.get(a.dataId),d=null!==h&&h.isPacked,f=d?n.unpackTensor(a):a,m=i.D5U.sizeFromShape(c)/p,g=Ir({inputs:{x:f},attrs:{shape:[m,p]},backend:n});d&&bl(n,f);const y=xl(s),b=xl(p);let x=null;const w=()=>null===x?[g,g]:[g,x],v=(e,t,r)=>{const a=w(),s=new gl(r),i=[[p],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,a,"int32",i),bl(n,o)};for(let e=1;e<y;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)v(t,n,[m,b])}for(let e=b;e>y;e/=2){const t=w(),r=new yl([m,e/2]),a=[[p],[null===x?1:0],[y]],s=x;x=n.runWebGLProgram(r,t,"int32",a),bl(n,s);const i=y/2,o=2*i;for(let e=i;e>=1;e/=2)v(o,e,x.shape)}let k=x;x=Aa({inputs:{x},backend:n,attrs:{begin:0,size:[m,s]}}),bl(n,k);let I=Si({inputs:{x:g,indices:x},backend:n,attrs:{axis:1,batchDims:1}});bl(n,g);const S=c.slice(0,-1);S.push(s),k=x,x=Ir({inputs:{x},attrs:{shape:S},backend:n}),bl(n,k);const N=I;return I=Ir({inputs:{x:I},attrs:{shape:S},backend:n}),bl(n,N),[I,x]}};class vl{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const kl={kernelName:i.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,p,h,d]=a.shape,[f,m]=null!=l?l:[p,h],g=new vl(p,h,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[a,s],"float32")}},Il={kernelName:i.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;he(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=Mn(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},Sl={kernelName:i.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const p=[],h=new Array(o).fill(0),d=i.shape.slice();d[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=Aa({inputs:{x:i},backend:n,attrs:{begin:h,size:d}}),r=Ir({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,p.push(t)}return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class Nl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const Tl=[eo,no,Mr,Br,Wr,Pr,Gr,Xr,Kr,Qr,na,ra,sa,oa,pa,la,da,ya,ga,wa,va,ka,Na,_a,Da,za,Wa,Va,ja,ur,es,ps,hs,is,fs,ms,ds,ys,xs,vs,Ns,Ts,$s,Fs,Os,_s,zs,Ls,Ws,Ps,Vs,Gs,qs,Qs,Js,ti,ai,oi,li,hi,fi,yi,xi,wi,ki,Ni,Ci,Ai,ir,Ei,Ya,Di,Fi,Mi,pr,Bi,Wi,Ui,Gi,Vi,qi,Ki,Yi,ao,uo,oo,po,ho,fo,io,mo,go,bo,vo,Io,Do,kr,Fo,Mo,Bo,Wo,Fa,Po,Go,jo,Qo,Jo,fr,Zo,tu,Ma,To,ru,ou,su,Sr,cu,hu,mu,yu,wu,ku,Su,Tu,$u,Eu,Du,Fu,Mu,Bu,Wu,Ea,_o,Pu,Vu,Hu,Gu,ju,qu,Xu,Ku,Yu,Zu,nl,rl,sl,il,ol,ul,Ao,Dr,cl,hl,ml,wl,kl,Fr,Il,Sl,{kernelName:i.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:o}=r,u=a.shape.length,l=[];let c=0;const p=i.Wap.getAxesPermutation([c],u);let h=a;null!=p&&(h=Rr({inputs:{x:a},backend:n,attrs:{perm:p}}),l.push(h),c=i.Wap.getInnerMostAxes(1,u)[0]);const d=i.Wap.segment_util.computeOutShape(h.shape,c,o),f=i.D5U.sizeFromShape([h.shape[c]]),m=Ir({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}});l.push(m);const g=(0,i.z4k)(a.dtype),y=(e,t,r,a,s)=>{const o=e.shape[0],u=e.shape[1],c=i.Wap.segment_util.segOpComputeOptimalWindowSize(u,s),p=new Nl({windowSize:c,inSize:u,batchSize:o,numSegments:s},t),h=n.compileAndRun(p,[e,r],a);if(l.push(h),h.shape[1]===s)return h;const d=eu({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),f=fl({inputs:{x:d},backend:n,attrs:{reps:[u/c]}});return l.push(d),l.push(f),y(h,t,f,a,s)},b=Ir({inputs:{x:y(m,"unsortedSegmentSum",s,g,o)},backend:n,attrs:{shape:d}});let x=b;if(null!=p){l.push(b);const e=i.Wap.getUndoAxesPermutation(p);x=Rr({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Ho];for(const e of Tl)(0,i.wCN)(e)},8713:(e,t,n)=>{"use strict";n.d(t,{JL:()=>r,Zu:()=>a});class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3337:(e,t,n)=>{"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,h=!1){const d=[];for(let e=0;e<t.length;e++)t[e]>s&&d.push({score:t[e],boxIndex:e,suppressBeginIndex:0});d.sort(p);const f=i>0?-.5/i:0,m=[],g=[];for(;m.length<n&&d.length>0;){const t=d.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=l(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*c(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),g.push(t.score)):t.score>s&&r(d,t,p))}const y=m.length,b=n-y;u&&b>0&&(m.push(...new Array(b).fill(0)),g.push(...new Array(b).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=g),h&&(x.validOutputs=y),x}function l(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),d=(o-s)*(u-i),f=(p-l)*(h-c);if(d<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,p),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function c(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function p(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,{GP:()=>s,qP:()=>i,pA:()=>o})},8333:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(2657);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=(0,r.f)(e,"int32"),s=(0,r.f)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}},7097:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>b});var r=n(8713),a=n(2885),s=n(5938),i=n(9121),o=n(6151),u=n(9122),l=n(569);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if((0,a.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{p(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function p(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?l.oj(`${r}ms`,9):r.error,o=l.oj(e,25),u=t.rank,c=t.size,p=l.oj(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${p}\t%c${c}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(4077),f=n(747);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class y{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return y.nextTensorId++}nextVariableId(){return y.nextVariableId++}clone(e){const t=x.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return x.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);l.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=c.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:p,attrs:h}=e,d=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,p,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(c,p,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=(0,o.uk)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(l.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&l.HD(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),i=new d.es(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=(0,l.Ub)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new d.es(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*l.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof d._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*l.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=(0,o.uk)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=l.wT(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(l.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));l.hu(a instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=(0,l.p8)((0,l.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!l.cO(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),w);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return l.hu(l.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;l.hu(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),l.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),l.hu(l.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];l.hu(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),l.hu(s.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,u.now)(),n=await this.backend.time(e);return n.wallMs=(0,u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function b(){const e=(0,s.D)();if(null==e._tfengine){const t=new a.qA(e);e._tfengine=new y(t)}return(0,a.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}y.nextTensorId=0,y.nextVariableId=0;const x=b();function w(e,t){const n={a:e,b:t};return x.runKernel(i.mm,n)}},2885:(e,t,n)=>{"use strict";n.d(t,{qA:()=>a,OB:()=>i,Vi:()=>o,iG:()=>u});var r=n(569);class a{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,r.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function s(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return o}let o=null;function u(e){o=e}},5938:(e,t,n)=>{"use strict";let r;function a(){if(null==r){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}r=e}return r}function s(e,t){const n=function(){const e=a();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,{D:()=>a,R:()=>s})},4368:(e,t,n)=>{"use strict";n.d(t,{G4:()=>o,R:()=>u,cF:()=>l,MX:()=>c,N8:()=>p,SR:()=>h,sq:()=>d,N5:()=>f,lu:()=>m,B9:()=>g,Cn:()=>y,XV:()=>b,CQ:()=>x,Cd:()=>w,N_:()=>v,cj:()=>k,x3:()=>I,ze:()=>S,jq:()=>N,y3:()=>T,VY:()=>C});var r=n(7097),a=n(2885),s=n(4077),i=n(747);function o(){(0,a.OB)().set("PROD",!0)}function u(){(0,a.OB)().set("DEBUG",!0)}function l(){(0,a.OB)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function c(e){(0,a.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function p(){r.BV.disposeVariables()}function h(){return r.BV}function d(){return r.BV.memory()}function f(e){return r.BV.profile(e)}function m(e,t){return r.BV.tidy(e,t)}function g(e){(0,i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function y(e){return r.BV.keep(e)}function b(e){return r.BV.time(e)}function x(e){return r.BV.setBackend(e)}function w(){return r.BV.ready()}function v(){return r.BV.backendName}function k(e){r.BV.removeBackend(e)}function I(e){return r.BV.findBackend(e)}function S(e){return r.BV.findBackendFactory(e)}function N(e,t,n=1){return r.BV.registerBackend(e,t,n)}function T(){return r.BV.backend}function C(e,t){(0,a.OB)().setPlatform(e,t)}(0,s.FZ)(c)},633:(e,t,n)=>{"use strict";n.d(t,{cb:()=>h,pn:()=>p,h7:()=>l,fN:()=>c,UQ:()=>o,ti:()=>u});var r=n(7097),a=n(4077),s=n(3740),i=n(569);function o(e){return i.hu(i.mf(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=(0,s._1)(t,"x","tf.grad","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grad"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(a)),[a],o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),d(n),n[0]}))}}function u(e){return i.hu(i.mf(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=(0,s.sI)(t,"args","tf.grads","string_or_numeric"),o=null!=n?(0,s._1)(n,"dy","tf.grads"):null;return r.BV.tidy((()=>{const{value:t,grads:n}=r.BV.gradients((()=>e(...a)),a,o);return null!=o&&i.k5(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(n),n}))}}function l(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.hu(t instanceof a.es,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.BV.gradients((()=>e(t)),[t],n);return d(s),{grad:s[0],value:o}}}function c(e){return i.hu(i.mf(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.hu(Array.isArray(t)&&t.every((e=>e instanceof a.es)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.hu(null==n||n instanceof a.es,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.BV.gradients((()=>e(...t)),t,n);return null!=n&&i.k5(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),d(s.grads),s}}function p(e,t){i.hu(i.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),i.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof a._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.BV.registeredVariables)t.push(r.BV.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:l}=r.BV.gradients(e,t,null,!0);i.hu(l.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.hu(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=l[t]&&(c[e.name]=l[t])})),null!=s&&s.forEach((e=>c[e.name]=null)),{value:u,grads:c}}function h(e){return r.BV.customGrad(e)}function d(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},8433:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>He.SY,VGw:()=>He.VG,SpW:()=>He.Sp,zJI:()=>$t,HeW:()=>Et,a4z:()=>Rt,DBS:()=>Mt,mm_:()=>He.mm,Xze:()=>He.Xz,oT6:()=>He.oT,IKK:()=>He.IK,sJF:()=>He.sJ,aJk:()=>He.aJ,M2y:()=>He.M2,qw7:()=>He.qw,jMg:()=>He.jM,QCc:()=>He.QC,Oyi:()=>He.Oy,JhU:()=>He.Jh,_k9:()=>He._k,IMb:()=>He.IM,ROF:()=>He.RO,XLW:()=>He.XL,zws:()=>He.zw,zvY:()=>He.zv,Ly9:()=>He.Ly,RFZ:()=>He.RF,gJX:()=>He.gJ,xnO:()=>He.xn,Zz9:()=>He.Zz,yj2:()=>He.yj,Eh3:()=>He.Eh,mhS:()=>He.mh,wUP:()=>He.wU,wm:()=>He.wm,x12:()=>He.x1,o2y:()=>He.o2,ik2:()=>He.ik,mc4:()=>He.mc,TR1:()=>He.TR,VcC:()=>He.Vc,iHb:()=>He.iH,JLz:()=>Wn.JL,QRR:()=>He.QR,T0n:()=>He.T0,cie:()=>He.ci,sL$:()=>He.sL,y7R:()=>He.y7,$w:()=>He.$w,p4S:()=>He.p4,Vn9:()=>He.Vn,ekb:()=>He.ek,ViN:()=>g.Vi,$g6:()=>He.$g,SX0:()=>He.SX,HEU:()=>He.HE,qAh:()=>g.qA,hdR:()=>He.hd,Omj:()=>He.Om,NEP:()=>He.NE,YFo:()=>He.YF,Y0y:()=>He.Y0,vwp:()=>He.vw,deh:()=>He.de,Uyb:()=>He.Uy,OR:()=>He.OR,jeX:()=>He.je,eBW:()=>He.eB,sHE:()=>He.sH,_V0:()=>He._V,luS:()=>He.lu,q1x:()=>He.q1,qi_:()=>He.qi,iZT:()=>He.iZ,Acj:()=>He.Ac,Qg5:()=>He.Qg,iJz:()=>He.iJ,J_u:()=>He.J_,avt:()=>He.av,iWB:()=>He.iW,r7n:()=>He.r7,Zuw:()=>Wn.Zu,eZ0:()=>He.eZ,Hhh:()=>He.Hh,J$2:()=>He.J$,vtC:()=>He.vt,CAk:()=>He.CA,e7N:()=>He.e7,ZbH:()=>He.Zb,kU:()=>He.kU,qCd:()=>He.qC,PYm:()=>He.PY,VfG:()=>He.Vf,MZg:()=>He.MZ,YoZ:()=>He.Yo,mTV:()=>He.mT,OAf:()=>He.OA,OU7:()=>He.OU,OV7:()=>He.OV,vFR:()=>He.vF,BMI:()=>He.BM,q2K:()=>He.q2,c17:()=>He.c1,q8u:()=>He.q8,jQs:()=>He.jQ,Vbg:()=>He.Vb,rIn:()=>Bt,NZg:()=>He.NZ,wYn:()=>He.wY,kuV:()=>He.ku,uv1:()=>He.uv,cye:()=>He.cy,W0H:()=>He.W0,yQU:()=>He.yQ,zvA:()=>Ut.zvA,we_:()=>He.we,qWM:()=>He.qW,gaJ:()=>Ct,QiL:()=>He.Qi,lyA:()=>He.ly,Kgp:()=>He.Kg,pe_:()=>He.pe,o0g:()=>He.o0,DlI:()=>He.Dl,gVI:()=>Lt,e6w:()=>He.e6,yw1:()=>Wt.yw,xJR:()=>He.xJ,oHH:()=>He.oH,$HU:()=>He.$H,IH3:()=>Pt.I,qkr:()=>He.qk,SbG:()=>He.Sb,HZH:()=>He.HZ,_Yw:()=>He._Y,zbQ:()=>He.zb,dpD:()=>He.dp,Hmb:()=>He.Hm,mKl:()=>He.mK,b9H:()=>He.b9,e07:()=>He.e0,bV0:()=>He.bV,DYp:()=>zt,xQA:()=>He.xQ,PhF:()=>He.Ph,oFR:()=>He.oF,a5O:()=>He.a5,i5y:()=>He.i5,RQH:()=>He.RQ,wYB:()=>He.w3,p2w:()=>He.p2,Gcp:()=>He.Gc,MRv:()=>He.MR,TQc:()=>He.TQ,O3z:()=>He.O3,nhH:()=>He.nh,w3H:()=>He.YW,ZjV:()=>He.Zj,D2d:()=>He.D2,L8s:()=>He.L8,FKq:()=>He.FK,bK0:()=>He.bK,_tC:()=>He._t,h8e:()=>He.h8,jQk:()=>He.m2,_JP:()=>He._J,s1s:()=>He.s1,XkS:()=>He.Xk,Tr8:()=>He.Tr,GBy:()=>He.GB,sEM:()=>He.sE,MIZ:()=>He.MI,esB:()=>xe.es,YDk:()=>xe.YD,n9L:()=>He.n9,cWu:()=>He.cW,wx7:()=>He.wx,G3Y:()=>He.G3,kpP:()=>He.kp,ToN:()=>He.To,Qvg:()=>He.Qv,_wD:()=>xe._w,RuY:()=>He.Ru,usg:()=>He.us,WnP:()=>Ut.WnP,Khb:()=>Ut.Khb,__u:()=>Ut.__u,IHx:()=>Ut.IHx,QBD:()=>Ut.QBD,$6P:()=>Ut.$6P,YjB:()=>Ut.YjB,NqF:()=>Ut.NqF,vHJ:()=>Ut.vHJ,ZRM:()=>Ut.ZRM,VfV:()=>Ut.VfV,z4N:()=>Ut.z4N,fvJ:()=>Ut.fvJ,C80:()=>Ut.C80,wS1:()=>Ut.wS1,uR5:()=>Ut.uR5,y3$:()=>bt.y3,Wap:()=>p,zEQ:()=>Ut.zEQ,tgs:()=>Ut.tgs,Dxk:()=>Ut.Dxk,JY5:()=>Ut.JY5,p3b:()=>Ut.p3b,E4h:()=>Ut.E4h,yE8:()=>Ut.yE8,anm:()=>Ut.anm,UFq:()=>Ut.UFq,Xhn:()=>i,f3b:()=>Ut.f3b,pju:()=>Ut.pju,mDi:()=>Ut.mDi,iUl:()=>Ut.iUl,d9v:()=>Ut.d9v,PYB:()=>Ut.PYB,zoF:()=>Ut.zoF,gME:()=>Ut.gME,Izb:()=>Ut.Izb,MNy:()=>Ut.MNy,ZaL:()=>Ut.ZaL,PAt:()=>Ut.PAt,Tek:()=>Ut.Tek,bc:()=>Ut.bc,pdZ:()=>Ut.pdZ,$QV:()=>Ut.$QV,T3b:()=>Ge.T3,mCk:()=>Ut.mCk,f9Y:()=>Ut.f9Y,mew:()=>Ut.mew,zbp:()=>Ut.zbp,cbc:()=>Nt.cb,ppE:()=>Ut.ppE,MXe:()=>bt.MX,nTT:()=>Ut.nTT,B10:()=>Ut.B10,C2$:()=>r,Ka3:()=>Ut.Ka3,WmZ:()=>Ut.WmZ,cFr:()=>bt.cF,B90:()=>bt.B9,N8o:()=>bt.N8,hiC:()=>Ut.hiC,NTj:()=>Ut.NTj,AKD:()=>Ut.AKD,rvX:()=>Ut.rvX,WYO:()=>Ut.WYO,pyx:()=>Ut.pyx,Ra$:()=>bt.R,G48:()=>bt.G4,GRh:()=>Ut.GRh,SRH:()=>bt.SR,OBj:()=>g.OB,DgJ:()=>Ut.DgJ,qNN:()=>Ut.qNN,Qqt:()=>Ut.Qqt,dt4:()=>Ut.dt4,t$B:()=>Ut.t$B,iyy:()=>Ut.iyy,kp_:()=>Ut.kp_,hlL:()=>Ut.hlL,x3e:()=>bt.x3,zel:()=>bt.ze,GWj:()=>Ut.GWj,qPi:()=>Ut.qPi,imm:()=>Ut.imm,Iqj:()=>Ut.Iqj,dbB:()=>Ut.dbB,DaI:()=>o,N_N:()=>bt.N_,ukX:()=>Ge.uk,pIF:()=>Ge.pI,trD:()=>Ge.tr,UQy:()=>Nt.UQ,tiA:()=>Nt.ti,pjt:()=>Ut.pjt,brS:()=>Ut.brS,Sxn:()=>Ut.Sxn,asL:()=>Ut.asL,BHj:()=>Ut.BHj,V3u:()=>Ut.V3u,io:()=>a,wx0:()=>Ut.wx0,xVT:()=>Ut.xVT,UWc:()=>Ut.UWc,i2d:()=>Ut.i2d,CnY:()=>bt.Cn,GDt:()=>h,hi7:()=>Ut.hi7,d9m:()=>Ut.d9m,zN1:()=>Ut.zN1,$r2:()=>Ut.$r2,SX3:()=>Ut.SX3,G9k:()=>Ut.G9k,cM7:()=>Ut.cM7,Krr:()=>Ut.Krr,e_t:()=>Ut.e_t,CmS:()=>Ut.CmS,l_t:()=>Ut.l_t,HvI:()=>Ut.HvI,hJK:()=>Ut.hJK,K5V:()=>Ut.K5V,egP:()=>Ut.egP,MB5:()=>Ut.MB5,OI3:()=>Ut.OI3,mAU:()=>s,Fp7:()=>Ut.Fp7,_sB:()=>Ut._sB,YQQ:()=>Ut.YQQ,Ip$:()=>Ut.Ip$,gWQ:()=>Ut.gWQ,J69:()=>Ut.J69,sq6:()=>bt.sq,ry_:()=>Ut.ry_,VV$:()=>Ut.VV$,LTh:()=>Ut.LTh,VdP:()=>Ut.VdP,wQq:()=>Ut.wQq,Gi7:()=>Ut.Gi7,p_:()=>Ut.p_,dC7:()=>Ut.dC7,rq4:()=>Ut.rq4,SJ_:()=>Ut.SJ_,W76:()=>Ut.W76,glt:()=>jt,KOy:()=>Ut.KOy,Quu:()=>Ut.Quu,lfX:()=>Ut.lfX,iUs:()=>Ut.iUs,JpU:()=>Ut.JpU,op:()=>Ut.op,N2O:()=>Ut.N2O,vku:()=>Ut.vku,pNR:()=>Ut.pNR,koy:()=>Ut.koy,t1L:()=>Ut.t1L,lGY:()=>Ut.lGY,d_R:()=>Ut.d_R,sQ3:()=>Ut.sQ3,AL3:()=>Ut.AL3,S0v:()=>Ut.S0v,WVs:()=>Ut.WVs,N5s:()=>bt.N5,TN_:()=>Ut.TN_,wzB:()=>Ut.wzB,nGf:()=>Ut.nGf,LGj:()=>Ut.LGj,w6H:()=>Ut.w6H,Cd_:()=>bt.Cd,kwC:()=>Ut.kwC,M25:()=>Ut.M25,jqO:()=>bt.jq,LiG:()=>Ge.Li,wCN:()=>Ge.wC,UYe:()=>Ut.UYe,btT:()=>Ut.btT,cjG:()=>bt.cj,XLQ:()=>Ut.XLQ,GYS:()=>Ut.GYS,SDf:()=>Ut.SDf,diP:()=>Ut.diP,sx7:()=>Ut.sx7,mG2:()=>Ut.mG2,QEs:()=>Ut.QEs,NMM:()=>Ut.NMM,bp0:()=>Ut.bp0,iD$:()=>Ut.iD$,snQ:()=>Ut.snQ,yV1:()=>Ze,U8D:()=>Ut.U8D,U_I:()=>Ut.U_I,m7h:()=>u,CQI:()=>bt.CQ,VYu:()=>bt.VY,ODp:()=>Ut.ODp,XD2:()=>Ut.XD2,Xxe:()=>Ut.Xxe,tdS:()=>Ut.tdS,O$l:()=>Ut.O$l,R_K:()=>Ut.R_K,tPi:()=>Ut.tPi,jZU:()=>Ut.jZU,SmN:()=>Ut.SmN,CnO:()=>Ut.CnO,p0P:()=>Ut.p0P,kuN:()=>et,XAC:()=>Ut.XAC,Wvh:()=>Ut.Wvh,fBT:()=>Ut.fBT,rVs:()=>Ut.rVs,ers:()=>Ut.ers,uN7:()=>Ut.uN7,Vl2:()=>Ut.Vl2,_b3:()=>Ut._b3,h62:()=>Ut.h62,$i:()=>Ut.$i,L9e:()=>Ut.L9e,knu:()=>Ut.knu,Nbs:()=>Ut.Nbs,NXj:()=>Ut.NXj,Z_8:()=>Ut.Z_8,luU:()=>Ut.luU,Smz:()=>Ut.Smz,z4k:()=>Wt.z4,ORZ:()=>Ut.ORZ,AEp:()=>Ut.AEp,XeE:()=>Ut.XeE,RRF:()=>Ut.RRF,odF:()=>Ut.odF,wOQ:()=>Ut.wOQ,yXz:()=>Ut.yXz,Bfx:()=>Ut.Bfx,xZs:()=>Ut.xZs,piX:()=>at,p3L:()=>l,lub:()=>bt.lu,Gg6:()=>Ut.Gg6,XVJ:()=>bt.XV,hg7:()=>Ut.hg7,p_j:()=>Ht,p4s:()=>Ut.p4s,Xu6:()=>Ut.Xu6,Two:()=>Ut.Two,bt3:()=>Ge.bt,nEe:()=>Ge.nE,pUJ:()=>Ut.pUJ,HHK:()=>Ut.HHK,x8V:()=>Wt.x8,D5U:()=>st,h76:()=>Nt.h7,fNQ:()=>Nt.fN,VD$:()=>Ut.VD$,pnJ:()=>Nt.pn,jTM:()=>yt,arb:()=>Ut.arb,itS:()=>Ut.itS,lls:()=>Ut.lls,P84:()=>Ut.P84});var r={};n.r(r),n.d(r,{isBrowser:()=>m,isMobile:()=>f});var a={};n.r(a),n.d(a,{browserFiles:()=>Se,browserHTTPRequest:()=>Re,concatenateArrayBuffers:()=>C,copyModel:()=>pe,decodeWeights:()=>I,encodeWeights:()=>k,fromMemory:()=>Me,getLoadHandlers:()=>z,getModelArtifactsForJSON:()=>E,getModelArtifactsInfoForJSON:()=>_,getSaveHandlers:()=>M,http:()=>De,isHTTPScheme:()=>Ee,listModels:()=>le,loadWeights:()=>Ce,moveModel:()=>he,registerLoadRouter:()=>O,registerSaveRouter:()=>F,removeModel:()=>ce,weightsLoaderFactory:()=>$e,withSaveHandler:()=>ze});var s={};n.r(s),n.d(s,{confusionMatrix:()=>Ve});var i={};n.r(i),n.d(i,{fromPixels:()=>Ye,fromPixelsAsync:()=>Ke,toPixels:()=>Qe});var o={};n.r(o),n.d(o,{prepareAndValidate:()=>Je});var u={};n.r(u),n.d(u,{Serializable:()=>tt,SerializationMap:()=>nt,registerClass:()=>rt});var l={};n.r(l),n.d(l,{TEST_EPSILON_FLOAT16:()=>it,encodeStrings:()=>gt,expectArrayBuffersEqual:()=>mt,expectArraysClose:()=>ot,expectArraysEqual:()=>pt,expectNumbersClose:()=>ht,expectPromiseToFail:()=>ct,expectValuesInRange:()=>ft,testEpsilon:()=>ut});var c={};n.r(c),n.d(c,{collectGatherOpShapeInfo:()=>On,computeOutShape:()=>Fn,segOpComputeOptimalWindowSize:()=>Rn});var p={};n.r(p),n.d(p,{ERF_A1:()=>cn,ERF_A2:()=>pn,ERF_A3:()=>hn,ERF_A4:()=>dn,ERF_A5:()=>fn,ERF_P:()=>ln,PARALLELIZE_THRESHOLD:()=>Zt,SELU_SCALE:()=>un.$,SELU_SCALEALPHA:()=>un.y,applyActivation:()=>Jt.QH,assertAndGetBroadcastShape:()=>Xt.$N,assertAxesAreInnerMostDims:()=>qt.lB,assertParamsConsistent:()=>Kt,assignToTypedArray:()=>kn,axesAreInnerMostDims:()=>qt.YB,calculateShapes:()=>Ze.calculateShapes,checkEinsumDimSizes:()=>$n,combineLocations:()=>qt.Vh,complexWithEvenIndex:()=>xn,complexWithOddIndex:()=>wn,computeConv2DInfo:()=>Yt.Ix,computeConv3DInfo:()=>Yt.jw,computeDefaultPad:()=>Yt.aO,computeDilation2DInfo:()=>Yt.Rf,computeOptimalWindowSize:()=>en,computeOutAndReduceShapes:()=>qt.kz,computeOutShape:()=>Qt,computePool2DInfo:()=>Yt.Xw,computePool3DInfo:()=>Yt.pl,convertConv2DDataFormat:()=>Yt.sl,decodeEinsumEquation:()=>Tn,eitherStridesOrDilationsAreOne:()=>Yt.jT,expandShapeToKeepDim:()=>qt.rv,exponent:()=>Sn,exponents:()=>In,fromStringArrayToUint8:()=>zn,fromUint8ToStringArray:()=>Mn,getAxesPermutation:()=>qt.Q3,getBroadcastDims:()=>Xt.XF,getComplexWithIndex:()=>vn,getEinsumComputePath:()=>An,getEinsumPermutation:()=>Cn,getFusedBiasGradient:()=>Jt.pf,getFusedDyActivation:()=>Jt.Fr,getImageCenter:()=>tn,getInnerMostAxes:()=>qt.sY,getPermuted:()=>rn,getReductionAxes:()=>Xt.RR,getReshaped:()=>nn,getReshapedPermuted:()=>an,getSliceBeginCoords:()=>sn,getSliceSize:()=>on,getUndoAxesPermutation:()=>qt.LJ,isIdentityPermutation:()=>En,log:()=>gn,mergeRealAndImagArrays:()=>yn,prepareAndValidate:()=>Je,prepareSplitSize:()=>Dn,segment_util:()=>c,shouldFuse:()=>Jt.uy,slice_util:()=>et,splitRealAndImagArrays:()=>bn,tupleValuesAreOne:()=>Yt.I0,upcastType:()=>Wt.x8,validateInput:()=>Ze.validateInput,validateUpdateShape:()=>Ze.validateUpdateShape,warn:()=>mn});var h={};n.r(h),n.d(h,{nonMaxSuppressionV3Impl:()=>Bn.GP,nonMaxSuppressionV4Impl:()=>Bn.qP,nonMaxSuppressionV5Impl:()=>Bn.pA,whereImpl:()=>Ln.Z});var d=n(7097);function f(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function m(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var g=n(2885);const y=(0,g.OB)();y.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),y.registerFlag("IS_BROWSER",(()=>m())),y.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),y.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),y.registerFlag("PROD",(()=>!1)),y.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>y.getBool("DEBUG"))),y.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),y.registerFlag("IS_TEST",(()=>!1)),y.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),y.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var b=n(1661),x=n(701),w=n(569);const v={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function k(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:S(await Promise.all(r)),specs:n}}function I(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=(0,w.NA)(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=v[n.dtype],c=e.slice(a,a+u*o),p="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=D()),l=r(p)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(p.length);for(let e=0;e<p.length;e++){const t=p[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=(0,w.NA)(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+4))[0];a+=4;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=v[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=(0,x.X)(e,o,"float32"),i=(0,x.X)(r,o,"float32");n[t]=(0,b.P)(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=(0,x.X)(l,o,i))}return n}function S(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const N="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function T(e){return N?Buffer.byteLength(e):new Blob([e]).size}function C(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function $(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function A(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function E(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function _(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:T(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:T(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function D(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class R{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==R.instance&&(R.instance=new R),R.instance}static registerSaveRouter(e){R.getInstance().saveRouters.push(e)}static registerLoadRouter(e){R.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return R.getHandlers(e,"save")}static getLoadHandlers(e,t){return R.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?R.getInstance().loadRouters:R.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const F=e=>R.registerSaveRouter(e),O=e=>R.registerLoadRouter(e),M=e=>R.getSaveHandlers(e),z=(e,t)=>R.getLoadHandlers(e,t),B="tensorflowjs",L="models_store",W="model_info_store";function U(){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function P(e){const t=e.result;t.createObjectStore(L,{keyPath:"modelPath"}),t.createObjectStore(W,{keyPath:"modelPath"})}class V{constructor(e){if(this.indexedDB=U(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(B,1);r.onupgradeneeded=()=>P(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(L,"readonly"),r=t.objectStore(L).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=_(t),s=a.transaction(W,"readwrite");let i=s.objectStore(W);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(L,"readwrite");const o=u.objectStore(L).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(W);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}V.URL_SCHEME="indexeddb://";const H=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(V.URL_SCHEME)?(t=e.slice(V.URL_SCHEME.length),new V(t)):null;var t};R.registerSaveRouter(H),R.registerLoadRouter(H);class G{constructor(){this.indexedDB=U()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(B,1);n.onupgradeneeded=()=>P(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(W,"readonly"),s=a.objectStore(W).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(V.URL_SCHEME)?t.slice(V.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(B,1);r.onupgradeneeded=()=>P(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(W,"readwrite"),i=s.objectStore(W),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(L,"readwrite");const r=u.objectStore(L).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}const j="/",q="tensorflowjs_models",X="info",K="model_topology",Q="weight_specs",Y="weight_data",J="model_metadata";function Z(e){return{info:[q,e,X].join(j),topology:[q,e,K].join(j),weightSpecs:[q,e,Q].join(j),weightData:[q,e,Y].join(j),modelMetadata:[q,e,J].join(j)}}function ee(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function te(e){const t=e.split(j);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(j)}class ne{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Z(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=_(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(N)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw ee(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(N){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}ne.URL_SCHEME="localstorage://";const re=e=>{return(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ne.URL_SCHEME)?(t=e.slice(ne.URL_SCHEME.length),new ne(t)):null;var t};R.registerSaveRouter(re),R.registerLoadRouter(re);class ae{constructor(){(0,w.hu)((0,g.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,w.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=q+j,n=j+X;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[te(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=Z(e=(t=e).startsWith(ne.URL_SCHEME)?t.slice(ne.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return ee(n),r}}const se="://";class ie{constructor(){this.managers={}}static getInstance(){return null==ie.instance&&(ie.instance=new ie),ie.instance}static registerManager(e,t){(0,w.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(se)&&(e=e.slice(0,e.indexOf(se))),(0,w.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ie.getInstance();(0,w.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function oe(e){if(-1===e.indexOf(se))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ie.getSchemes().join(",")}`);return{scheme:e.split(se)[0],path:e.split(se)[1]}}async function ue(e,t,n=!1){(0,w.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=R.getLoadHandlers(e);(0,w.hu)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,w.hu)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=R.getSaveHandlers(t);(0,w.hu)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,w.hu)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=oe(e).scheme,u=oe(e).path,l=o===oe(e).scheme,c=await a.load();n&&l&&await ie.getManager(o).removeModel(u);const p=await i.save(c);return n&&!l&&await ie.getManager(o).removeModel(u),p.modelArtifactsInfo}async function le(){const e=ie.getSchemes(),t={};for(const n of e){const e=await ie.getManager(n).listModels();for(const r in e)t[n+se+r]=e[r]}return t}async function ce(e){const t=oe(e);return ie.getManager(t.scheme).removeModel(t.path)}async function pe(e,t){return ue(e,t,!1)}async function he(e,t){return ue(e,t,!0)}class de{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,g.OB)().get("IS_BROWSER")){(0,g.OB)().setPlatform("browser",new de);try{ie.registerManager(ne.URL_SCHEME,new ae)}catch(e){}try{ie.registerManager(V.URL_SCHEME,new G)}catch(e){}}let fe;(0,g.OB)().get("IS_NODE")&&(0,g.OB)().setPlatform("node",new class{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,g.OB)().global.fetch?(0,g.OB)().global.fetch(e,t):(null==fe&&(fe=n(5410)),fe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var me=n(2657),ge=n(2271),ye=n(8723),be=n(9798),xe=n(4077);(0,d.wv)();const we={buffer:me.f,cast:ge.p,clone:ye.d,print:be.S};function ve(e){return new Promise((e=>setTimeout(e))).then(e)}(0,xe.Vp)(we);class ke{constructor(e){if(!(0,g.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ke.URL_SCHEME)&&(e=e.slice(ke.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=A(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await ve((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ve((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:_(e)}}}}ke.URL_SCHEME="downloads://";class Ie{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=E(r,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(a).then((e=>[t,C(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>$(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=$(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Se(e){return new Ie(e)}function Ne(e,t,n,r){!function(e){(0,w.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,w.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,w.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,w.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}async function Te(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,g.OB)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await Ne(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await Ne(a,t.onProgress,.5,1)}async function Ce(e,t="",n,r){return $e((e=>Te(e,{requestInit:r})))(e,t,n)}function $e(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=v[u]*w.NA(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),p={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=I(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)p[e]=t[e]})),h+=n})),p}}R.registerSaveRouter((e=>(0,g.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ke.URL_SCHEME)?function(e="model"){return new ke(e)}(e.slice(ke.URL_SCHEME.length)):null));class Ae{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,w.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,g.OB)().platform.fetch,(0,w.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,w.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=A(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:_(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return E(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,C(await Te(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ee(e){return null!=e.match(Ae.URL_SCHEME_REGEX)}Ae.URL_SCHEME_REGEX=/^https?:\/\//;const _e=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ee(e))):Ee(e),n)return De(e,t)}return null};function De(e,t){return new Ae(e,t)}function Re(e,t){return De(e,t)}R.registerSaveRouter(_e),R.registerLoadRouter(_e);class Fe{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Oe{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Me(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Fe(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fe({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fe({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function ze(e){return new Oe(e)}var Be=n(3740),Le=n(8687),We=n(6708),Ue=n(2668),Pe=n(9065);const Ve=(0,Ue.op)({confusionMatrix_:function(e,t,n){const r=(0,Be._1)(e,"labels","confusionMatrix"),a=(0,Be._1)(t,"predictions","confusionMatrix");w.hu(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),w.hu(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),w.hu(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),w.hu(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),w.hu(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=(0,We.l)((0,ge.p)(r,"int32"),n),i=(0,We.l)((0,ge.p)(a,"int32"),n),o=(0,Pe.p)(s),u=(0,Le.O)(o,i);return(0,ge.p)(u,"int32")}});var He=n(9121),Ge=n(6151),je=n(9906);let qe;function Xe(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,Ge.pI)(He.eB,d.BV.backendName)){const n={pixels:e},r={numChannels:t};return d.BV.runKernel(He.eB,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,p;if(i?c=e.getContext("2d").getImageData(0,0,u,l).data:r||n?c=e.data:(s||a||o)&&(null==qe&&(qe=document.createElement("canvas").getContext("2d")),qe.canvas.width=u,qe.canvas.height=l,qe.drawImage(e,0,0,u,l),c=qe.getImageData(0,0,u,l).data),4===t)p=new Int32Array(c);else{const e=u*l;p=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)p[n*t+e]=c[4*n+e]}const h=[l,u,t];return(0,je.w)(p,h,"int32")}async function Ke(e,t=3){let n=null;if((0,g.OB)().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Xe(n,t)}async function Qe(e,t){let n=(0,Be._1)(e,"img","toPixels");if(!(e instanceof xe.es)){const e=n;n=(0,ge.p)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Ye=(0,Ue.op)({fromPixels_:Xe});function Je(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===(0,w.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...(0,w.e3)(e.shape).map((e=>e/l)),1].slice(0,s);return[u,i,l,c]}var Ze=n(3028),et=n(7650);class tt{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class nt{constructor(){this.classNameMap={}}static getMap(){return null==nt.instance&&(nt.instance=new nt),nt.instance}static register(e){nt.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function rt(e){(0,w.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,w.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,w.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),nt.register(e)}var at=n(747),st=n(9122);const it=.1;function ot(e,t,n){return null==n&&(n=ut()),lt(e,t,((e,t)=>dt(e,t,n)))}function ut(){return 32===d.BV.backend.floatPrecision()?.001:it}function lt(e,t,n){let r=!0;if(((0,w.fU)(e)||(0,w.fU)(t))&&(r=!1),(0,w.fU)(e)&&(0,w.fU)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=(0,Be.C)(e),r=(0,Be.C)(t);if(!(0,w.cO)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=(0,w.fU)(e)?e:(0,w.xH)(e),s=(0,w.fU)(t)?t:(0,w.xH)(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function ct(e,t){e().then((()=>t.fail()),(()=>t()))}function pt(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return(0,w.HD)(e)||(0,w.HD)(e[0])||(0,w.HD)(t)||(0,w.HD)(t[0])?lt(e,n,((e,t)=>e==t)):lt(e,t,((e,t)=>dt(e,t,0)))}function ht(e,t,n){if(null==n&&(n=ut()),!dt(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function dt(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function ft(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function mt(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function gt(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?gt(n):e[t]=(0,st.encodeString)(n)}return e}const yt="3.8.0";var bt=n(4368),xt=n(6407),wt=n(1274),vt=n(4841),kt=n(3261),It=n(248),St=n(6577),Nt=n(633),Tt=n(9494);class Ct extends tt{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return(0,bt.B9)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,Nt.pn)(e,t)}dispose(){null!=this.iterations_&&(0,bt.B9)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Tt.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Ct,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class $t extends Ct{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(!1)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,vt.d)(s,this.rho),(0,vt.d)((0,It.h)(a),1-this.rho)),t=(0,vt.d)((0,wt.h)((0,kt._)((0,xt.I)(i,this.epsilon)),(0,kt._)((0,xt.I)(s,this.epsilon))),a),n=(0,xt.I)((0,vt.d)(i,this.rho),(0,vt.d)((0,It.h)(t),1-this.rho));s.assign(e),i.assign(n);const o=(0,xt.I)((0,vt.d)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&((0,bt.B9)(this.accumulatedGrads.map((e=>e.variable))),(0,bt.B9)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}$t.className="Adadelta",rt($t);var At=n(4006);class Et extends Ct{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:(0,bt.lu)((()=>(0,At.h)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)(s,(0,It.h)(a));s.assign(e);const t=(0,xt.I)((0,vt.d)((0,wt.h)(a,(0,kt._)((0,xt.I)(e,d.BV.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&(0,bt.B9)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Et.className="Adagrad",rt(Et);var _t=n(3453),Dt=n(827);class Rt extends Ct{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],(0,bt.lu)((()=>{this.accBeta1=(0,Tt.i)(t).variable(),this.accBeta2=(0,Tt.i)(n).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Dt.l)(1,this.accBeta1),r=(0,Dt.l)(1,this.accBeta2);t.forEach(((t,a)=>{const s=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,bt.lu)((()=>(0,St.P)(s).variable(!1)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:(0,bt.lu)((()=>(0,St.P)(s).variable(!1)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,l=(0,xt.I)((0,vt.d)(o,this.beta1),(0,vt.d)(i,1-this.beta1)),c=(0,xt.I)((0,vt.d)(u,this.beta2),(0,vt.d)((0,It.h)(i),1-this.beta2)),p=(0,wt.h)(l,n),h=(0,wt.h)(c,r);o.assign(l),u.assign(c);const f=(0,xt.I)((0,vt.d)((0,wt.h)(p,(0,xt.I)((0,kt._)(h),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign((0,vt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,vt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&(0,bt.B9)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),(0,bt.lu)((()=>{this.accBeta1.assign((0,_t.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,_t.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Rt.className="Adam",rt(Rt);var Ft=n(6235),Ot=n(632);class Mt extends Ct{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],(0,bt.lu)((()=>{this.iteration=(0,Tt.i)(0).variable(),this.accBeta1=(0,Tt.i)(t).variable()})),null==r&&(this.epsilon=d.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);(0,bt.lu)((()=>{const n=(0,Dt.l)(1,this.accBeta1),r=(0,wt.h)(-this.learningRate,(0,xt.I)((0,vt.d)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=d.BV.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:(0,St.P)(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:(0,St.P)(s).variable(!1)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,l=(0,xt.I)((0,vt.d)(o,this.beta1),(0,vt.d)(i,1-this.beta1)),c=(0,vt.d)(u,this.beta2),p=(0,Ft.W)(i),h=(0,Ot.g)(c,p);o.assign(l),u.assign(h);const f=(0,xt.I)((0,vt.d)((0,wt.h)(r,n),(0,wt.h)(l,(0,xt.I)(h,this.epsilon))),s);s.assign(f)})),this.iteration.assign((0,xt.I)(this.iteration,1)),this.accBeta1.assign((0,vt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&(0,bt.B9)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&(0,bt.B9)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Mt.className="Adamax",rt(Mt);class zt extends Ct{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=d.BV.registeredVariables[t];(0,bt.lu)((()=>{const e=(0,xt.I)((0,vt.d)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=(0,bt.Cn)((0,Tt.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}zt.className="SGD",rt(zt);class Bt extends zt{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Tt.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&(0,bt.lu)((()=>{let e;const t=(0,xt.I)((0,vt.d)(this.m,a),s);e=this.useNesterov?(0,xt.I)((0,vt.d)(this.c,(0,xt.I)(s,(0,vt.d)(t,this.m))),r):(0,xt.I)((0,vt.d)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&(0,bt.B9)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Bt.className="Momentum",rt(Bt);class Lt extends Ct{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=d.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.BV.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:(0,bt.lu)((()=>(0,St.P)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;(0,bt.lu)((()=>{const e=(0,xt.I)((0,vt.d)(i,this.decay),(0,vt.d)((0,It.h)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=(0,xt.I)((0,vt.d)(t,this.decay),(0,vt.d)(s,1-this.decay)),u=(0,wt.h)((0,vt.d)(s,this.learningRate),(0,kt._)((0,Dt.l)(e,(0,xt.I)((0,It.h)(a),this.epsilon)))),l=(0,xt.I)((0,vt.d)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=(0,Dt.l)(r,l);r.assign(c)}else{const e=(0,xt.I)((0,vt.d)(i,this.decay),(0,vt.d)((0,It.h)(s),1-this.decay)),t=(0,xt.I)((0,vt.d)(o,this.momentum),(0,wt.h)((0,vt.d)(s,this.learningRate),(0,kt._)((0,xt.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,Dt.l)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&(0,bt.B9)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&(0,bt.B9)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&(0,bt.B9)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Lt.className="RMSProp",rt(Lt);var Wt=n(1221),Ut=n(4600),Pt=n(9876);class Vt{static sgd(e){return new zt(e)}static momentum(e,t,n=!1){return new Bt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Lt(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Rt(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new $t(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Mt(e,t,n,r,a)}static adagrad(e,t=.1){return new Et(e,t)}}const Ht={sgd:Vt.sgd,momentum:Vt.momentum,adadelta:Vt.adadelta,adagrad:Vt.adagrad,rmsprop:Vt.rmsprop,adamax:Vt.adamax,adam:Vt.adam},Gt="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function jt(){return new Promise((e=>Gt((()=>e()))))}var qt=n(3591),Xt=n(2200);function Kt(e,t){const n=e[0].length;e.forEach(((e,t)=>{w.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),w.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)w.hu(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function Qt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Yt=n(2582),Jt=n(9323);const Zt=30;function en(e){return e<=Zt?e:(0,w.jP)(e,Math.floor(Math.sqrt(e)))}function tn(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function nn(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function rn(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function an(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function sn(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function on(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var un=n(3179);const ln=.3275911,cn=.254829592,pn=-.284496736,hn=1.421413741,dn=-1.453152027,fn=1.061405429;function mn(...e){(0,g.OB)().getBool("IS_TEST")||console.warn(...e)}function gn(...e){(0,g.OB)().getBool("IS_TEST")||console.log(...e)}function yn(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function bn(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function xn(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function wn(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function vn(e,t){return{real:e[2*t],imag:e[2*t+1]}}function kn(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function In(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Sn(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Nn=/->/g;function Tn(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Nn,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,a]=e.split("->");(0,w.hu)(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const s=r.split(","),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function Cn(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function $n(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:(0,w.hu)(r[t[e][n]]===a[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`))}}function An(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=_n(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function En(e){return e.every(((e,t)=>e===t))}function _n(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Dn(e,t,n=0){let r=[];if("number"==typeof t)(0,w.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,w.hu)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}(0,w.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Rn(e,t){let n,r=!1;for(e<=Zt?(n=e,r=!0):n=(0,w.jP)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=(0,w.jP)(e,n+1);return n}function Fn(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function On(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Mn(e){try{return e.map((e=>(0,st.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function zn(e){return e.map((e=>(0,st.encodeString)(e)))}var Bn=n(3337),Ln=n(8333),Wn=n(8713)},9121:(e,t,n)=>{"use strict";n.d(t,{SY:()=>r,VG:()=>a,Sp:()=>s,mm:()=>i,Xz:()=>o,oT:()=>u,IK:()=>l,sJ:()=>c,aJ:()=>p,M2:()=>h,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>y,RO:()=>b,_k:()=>x,IM:()=>w,XL:()=>v,zw:()=>k,zv:()=>I,Ly:()=>S,RF:()=>N,gJ:()=>T,xn:()=>C,Zz:()=>$,yj:()=>A,Eh:()=>E,mh:()=>_,wU:()=>D,wm:()=>R,x1:()=>F,o2:()=>O,ik:()=>M,mc:()=>z,TR:()=>B,iH:()=>L,Vc:()=>W,QR:()=>U,T0:()=>P,ci:()=>V,sL:()=>H,y7:()=>G,$w:()=>j,p4:()=>q,ek:()=>X,Vn:()=>K,oH:()=>Q,$g:()=>Y,SX:()=>J,HE:()=>Z,Om:()=>ee,hd:()=>te,NE:()=>ne,YF:()=>re,Y0:()=>ae,vw:()=>se,de:()=>ie,Uy:()=>oe,OR:()=>ue,je:()=>le,sH:()=>ce,qi:()=>pe,q1:()=>he,iZ:()=>de,Ac:()=>fe,iJ:()=>me,Qg:()=>ge,J_:()=>ye,av:()=>be,iW:()=>xe,r7:()=>we,J$:()=>ve,vt:()=>ke,CA:()=>Ie,e7:()=>Se,Zb:()=>Ne,kU:()=>Te,PY:()=>Ce,Vf:()=>$e,MZ:()=>Ae,qC:()=>Ee,eZ:()=>_e,Hh:()=>De,Yo:()=>Re,BM:()=>Fe,mT:()=>Oe,OV:()=>Me,OA:()=>ze,OU:()=>Be,vF:()=>Le,q2:()=>We,c1:()=>Ue,q8:()=>Pe,jQ:()=>Ve,Vb:()=>He,NZ:()=>Ge,wY:()=>je,ku:()=>qe,yQ:()=>Xe,uv:()=>Ke,cy:()=>Qe,W0:()=>Ye,qW:()=>Je,we:()=>Ze,Qi:()=>et,ly:()=>tt,Kg:()=>nt,pe:()=>rt,o0:()=>at,Dl:()=>st,e6:()=>it,xJ:()=>ot,$H:()=>ut,qk:()=>lt,HZ:()=>ct,dp:()=>pt,Hm:()=>ht,_Y:()=>dt,zb:()=>ft,Sb:()=>mt,mK:()=>gt,e0:()=>yt,bV:()=>bt,xQ:()=>xt,Ph:()=>wt,oF:()=>vt,p2:()=>kt,RQ:()=>It,w3:()=>St,i5:()=>Nt,a5:()=>Tt,MR:()=>Ct,FK:()=>$t,GB:()=>At,TQ:()=>Et,L8:()=>_t,Gc:()=>Dt,O3:()=>Rt,nh:()=>Ft,YW:()=>Ot,Zj:()=>Mt,D2:()=>zt,_t:()=>Bt,bK:()=>Lt,m2:()=>Wt,_J:()=>Ut,s1:()=>Pt,Xk:()=>Vt,Tr:()=>Ht,sE:()=>Gt,MI:()=>jt,n9:()=>qt,cW:()=>Xt,wx:()=>Kt,G3:()=>Qt,kp:()=>Yt,To:()=>Jt,Qv:()=>Zt,Ru:()=>en,h8:()=>tn,eB:()=>nn,b9:()=>rn,us:()=>an,_V:()=>sn,lu:()=>on});const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",l="Any",c="ArgMax",p="ArgMin",h="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",b="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",I="Bincount",S="BroadcastTo",N="Cast",T="Ceil",C="ClipByValue",$="Complex",A="ComplexAbs",E="Concat",_="Conv2D",D="Conv2DBackpropFilter",R="Conv2DBackpropInput",F="Conv3D",O="Conv3DBackpropFilterV2",M="Conv3DBackpropInputV2",z="Cos",B="Cosh",L="Cumsum",W="CropAndResize",U="DenseBincount",P="DepthToSpace",V="DepthwiseConv2dNative",H="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",j="Diag",q="Dilation2D",X="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",Q="RealDiv",Y="Einsum",J="Elu",Z="EluGrad",ee="Erf",te="Equal",ne="Exp",re="ExpandDims",ae="Expm1",se="FFT",ie="Fill",oe="FlipLeftRight",ue="Floor",le="FloorDiv",ce="FusedBatchNorm",pe="GatherV2",he="GatherNd",de="Greater",fe="GreaterEqual",me="Identity",ge="IFFT",ye="Imag",be="IsFinite",xe="IsInf",we="IsNan",ve="LeakyRelu",ke="Less",Ie="LessEqual",Se="LinSpace",Ne="Log",Te="Log1p",Ce="LogicalAnd",$e="LogicalNot",Ae="LogicalOr",Ee="LogSoftmax",_e="LRN",De="LRNGrad",Re="Max",Fe="Maximum",Oe="MaxPool",Me="MaxPoolGrad",ze="MaxPool3D",Be="MaxPool3DGrad",Le="MaxPoolWithArgmax",We="Mean",Ue="Min",Pe="Minimum",Ve="MirrorPad",He="Mod",Ge="Multinomial",je="Multiply",qe="Neg",Xe="NotEqual",Ke="NonMaxSuppressionV3",Qe="NonMaxSuppressionV4",Ye="NonMaxSuppressionV5",Je="OnesLike",Ze="OneHot",et="Pack",tt="PadV2",nt="Pool",rt="Pow",at="Prelu",st="Prod",it="Range",ot="Real",ut="Reciprocal",lt="Relu",ct="Reshape",pt="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",dt="ResizeBilinear",ft="ResizeBilinearGrad",mt="Relu6",gt="Reverse",yt="Round",bt="Rsqrt",xt="ScatterNd",wt="Select",vt="Selu",kt="Slice",It="Sin",St="Sinh",Nt="Sign",Tt="Sigmoid",Ct="Softplus",$t="Sqrt",At="Sum",Et="SpaceToBatchND",_t="SplitV",Dt="Softmax",Rt="SparseFillEmptyRows",Ft="SparseReshape",Ot="SparseSegmentMean",Mt="SparseSegmentSum",zt="SparseToDense",Bt="SquaredDifference",Lt="Square",Wt="StridedSlice",Ut="StringNGrams",Pt="StringSplit",Vt="StringToHashBucketFast",Ht="Sub",Gt="Tan",jt="Tanh",qt="Tile",Xt="TopK",Kt="Transform",Qt="Transpose",Yt="Unique",Jt="Unpack",Zt="UnsortedSegmentSum",en="ZerosLike",tn="Step",nn="FromPixels",rn="RotateWithOffset",an="_FusedMatMul",sn="FusedConv2D",on="FusedDepthwiseConv2D"},6151:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,uk:()=>u,tr:()=>l,wC:()=>c,Li:()=>p,nE:()=>h,bt:()=>d,T3:()=>f});var r=n(2885),a=n(5938);const s=(0,a.R)("kernelRegistry",(()=>new Map)),i=(0,a.R)("gradRegistry",(()=>new Map));function o(e,t){const n=m(e,t);return s.get(n)}function u(e){return i.get(e)}function l(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function c(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function p(e){const{kernelName:t}=e;i.has(t)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function d(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){l(e).forEach((e=>{c(Object.assign({},e,{backendName:t}))}))}function m(e,t){return`${t}_${e}`}},6235:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({abs_:function(e){const t=(0,s._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.BV.runKernel(a.yj,e)}{const e={x:t};return r.BV.runKernel(a.SY,e)}}})},7839:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acos_:function(e){const t={x:(0,s._1)(e,"x","acos")};return r.BV.runKernel(a.VG,t)}})},1470:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({acosh_:function(e){const t={x:(0,s._1)(e,"x","acosh")};return r.BV.runKernel(a.Sp,t)}})},6407:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.mm,u)}})},3135:(e,t,n)=>{"use strict";n.d(t,{Q:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({addN_:function(e){i.hu(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.hu(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.cO(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.BV.runKernel(a.Xz,o)}})},781:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({all_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.oT,i,o)}})},2998:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({any_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.BV.runKernel(a.IK,i,o)}})},47:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMax_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMax")},i={axis:t};return r.BV.runKernel(a.sJ,n,i)}})},7394:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({argMin_:function(e,t=0){const n={x:(0,s._1)(e,"x","argMin")},i={axis:t};return r.BV.runKernel(a.aJ,n,i)}})},2421:(e,t,n)=>{"use strict";n.d(t,{Z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asin_:function(e){const t={x:(0,s._1)(e,"x","asin")};return r.BV.runKernel(a.M2,t)}})},1891:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({asinh_:function(e){const t={x:(0,s._1)(e,"x","asinh")};return r.BV.runKernel(a.qw,t)}})},7037:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atan_:function(e){const t={x:(0,s._1)(e,"x","atan")};return r.BV.runKernel(a.jM,t)}})},9812:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({atan2_:function(e,t){let n=(0,i._1)(e,"a","atan2"),o=(0,i._1)(t,"b","atan2");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.QC,u)}})},369:(e,t,n)=>{"use strict";n.d(t,{C:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({atanh_:function(e){const t={x:(0,s._1)(e,"x","atanh")};return r.BV.runKernel(a.Oy,t)}})},5176:(e,t,n)=>{"use strict";n.d(t,{w:()=>p});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2582),l=n(2668),c=n(4968);const p=(0,l.op)({avgPool_:function(e,t,n,l,p){const h=(0,s._1)(e,"x","avgPool","float32");i.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=h,f=!1;3===h.rank&&(f=!0,d=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=p&&i.hu(i.GN(l),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const m={x:d},g={filterSize:t,strides:n,pad:l,dimRoundingMode:p};let y=r.BV.runKernel(a.Jh,m,g);return y=(0,o.p)(y,h.dtype),f?(0,c.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1749:(e,t,n)=>{"use strict";n.d(t,{u:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271),u=n(2668),l=n(4968);const c=(0,u.op)({avgPool3d_:function(e,t,n,u,c,p="NDHWC"){const h=(0,s._1)(e,"x","avgPool3d","float32");let d=h,f=!1;4===h.rank&&(f=!0,d=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.hu(5===d.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${d.rank}.`)),i.hu("NDHWC"===p,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${p}`)),null!=c&&i.hu(i.GN(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:c,dataFormat:p};let y=r.BV.runKernel(a._k,m,g);return y=(0,o.p)(y,d.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},3591:(e,t,n)=>{"use strict";n.d(t,{YB:()=>a,Vh:()=>s,kz:()=>i,rv:()=>o,lB:()=>u,Q3:()=>l,LJ:()=>c,sY:()=>p});var r=n(569);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.hu(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function l(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function p(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},8441:(e,t,n)=>{"use strict";n.d(t,{E:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({batchToSpaceND_:function(e,t,n){const o=(0,s._1)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.hu(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.hu(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const l={x:o},c={blockShape:t,crops:n};return r.BV.runKernel(a.zw,l,c)}})},7505:(e,t,n)=>{"use strict";n.d(t,{t:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(4968);const u=(0,n(2668).op)({batchNorm_:function(e,t,n,u,l,c){null==c&&(c=.001);const p=(0,s._1)(e,"x","batchNorm"),h=(0,s._1)(t,"mean","batchNorm"),d=(0,s._1)(n,"variance","batchNorm");let f,m;null!=l&&(f=(0,s._1)(l,"scale","batchNorm")),null!=u&&(m=(0,s._1)(u,"offset","batchNorm")),i.hu(h.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(p),scale:f,offset:m,mean:h,variance:d},y={varianceEpsilon:c},b=r.BV.runKernel(a.sH,g,y);return(0,o.X)(b,p.shape)}})},3865:(e,t,n)=>{"use strict";n.d(t,{y:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({bincount_:function(e,t,n){const o=(0,s._1)(e,"x","bincount"),u=(0,s._1)(t,"weights","bincount");i.hu("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const l={x:o,weights:u},c={size:n};return r.BV.runKernel(a.zv,l,c)}})},8247:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(8723),o=n(2668),u=n(4968);const l=(0,o.op)({broadcastTo_:function(e,t){let n=(0,s._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,u.X)(n,e)}const l=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(l[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const p={x:n},h={reps:c};return r.BV.runKernel(a.n9,p,h)}})},2200:(e,t,n)=>{"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}n.d(t,{XF:()=>r,RR:()=>a,$N:()=>s})},2657:(e,t,n)=>{"use strict";n.d(t,{f:()=>s});var r=n(4077),a=n(569);function s(e,t="float32",n){return t=t||"float32",a.Mu(e),new r.YD(e,t,n)}},2271:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({cast_:function(e,t){const n=(0,s._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.BV.runKernel(a.RF,o,u)}})},6825:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({ceil_:function(e){const t={x:(0,s._1)(e,"x","ceil")};return r.BV.runKernel(a.gJ,t)}})},2279:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({clipByValue_:function(e,t,n){const o=(0,s._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},l={clipValueMin:t,clipValueMax:n};return r.BV.runKernel(a.xn,u,l)}})},8723:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({clone_:function(e){const t={x:(0,s._1)(e,"x","clone","string_or_numeric")};return r.BV.runKernel(a.iJ,t)}})},1661:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({complex_:function(e,t){const n=(0,s._1)(e,"real","complex"),o=(0,s._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.BV.runKernel(a.Zz,u)}})},6884:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(8723);const u=(0,n(2668).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,s.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const u=n,l={axis:t};return r.BV.runKernel(a.Eh,u,l)}})},1355:(e,t,n)=>{"use strict";n.d(t,{P:()=>l});var r=n(3740),a=n(569),s=n(4794),i=n(2582),o=n(2668),u=n(4968);const l=(0,o.op)({conv1d_:function(e,t,n,o,l="NWC",c=1,p){const h=(0,r._1)(e,"x","conv1d"),d=(0,r._1)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=(0,u.X)(h,[1,h.shape[0],h.shape[1]])),a.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),null!=p&&a.hu(a.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${o}.`)),a.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),a.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),a.hu("NWC"===l,(()=>`Error in conv1d: got dataFormat of ${l} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),b=[1,n],x=[1,c],w=(0,s.T)(y,g,b,o,"NHWC",x,p);return m?(0,u.X)(w,[w.shape[2],w.shape[3]]):(0,u.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},4794:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv2d_:function(e,t,n,u,c="NHWC",p=[1,1],h){const d=(0,s._1)(e,"x","conv2d"),f=(0,s._1)(t,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=h&&i.hu(i.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`));const y="NHWC"===c?m.shape[3]:m.shape[1];i.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,p),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`));const b={x:m,filter:f},x={strides:n,pad:u,dataFormat:c,dilations:p,dimRoundingMode:h},w=r.BV.runKernel(a.mh,b,x);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6013:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,u,l="NHWC",c){let p=e;3===e.rank&&(p=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.hu(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),s.hu(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),s.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const d="NHWC"===l?p.shape[3]:p.shape[1],f="NHWC"===l?h.shape[3]:h.shape[1];s.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),s.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&s.hu(s.GN(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const m={x:p,dy:h},g={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,filterShape:n};return r.BV.runKernel(a.wU,m,g)}})},9832:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,u,l="NHWC",c){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let p=e,h=t,d=!1;3===t.rank&&(d=!0,h=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),p=[1,e[0],e[1],e[2]]),s.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),s.hu(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===l?p[3]:p[1],m="NHWC"===l?h.shape[3]:h.shape[1];s.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&s.hu(s.GN(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const g={dy:h,filter:n},y={strides:i,pad:u,dataFormat:l,dimRoundingMode:c,inputShape:p},b=r.BV.runKernel(a.wm,g,y);return d?(0,o.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},1405:(e,t,n)=>{"use strict";n.d(t,{b:()=>s});var r=n(3740),a=n(9832);const s=(0,n(2668).op)({conv2dTranspose_:function(e,t,n,s,i,o){const u=(0,r._1)(e,"x","conv2dTranspose"),l=(0,r._1)(t,"filter","conv2dTranspose");return(0,a._)(n,u,l,s,i,"NHWC",o)}})},473:(e,t,n)=>{"use strict";n.d(t,{p:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({conv3d_:function(e,t,n,u,c="NDHWC",p=[1,1,1]){const h=(0,s._1)(e,"x","conv3d"),d=(0,s._1)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=(0,l.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.hu(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.hu(5===d.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${d.rank}.`)),i.hu(f.shape[4]===d.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${d.shape[3]}.`)),i.hu((0,o.jT)(n,p),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${p}'`)),i.hu("NDHWC"===c,(()=>`Error in conv3d: got dataFormat of ${c} but only NDHWC is currently supported.`));const g={x:f,filter:d},y={strides:n,pad:u,dataFormat:c,dilations:p},b=r.BV.runKernel(a.x1,g,y);return m?(0,l.X)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},7594:(e,t,n)=>{"use strict";n.d(t,{_:()=>u});var r=n(7097),a=n(9121),s=n(569),i=n(2668),o=n(4968);const u=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,u){s.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let l=e,c=t,p=!1;4===t.rank&&(p=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),l=[1,e[0],e[1],e[2],e[3]]);const h=l[4],d=c.shape[4];s.hu(5===l.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${l.length}.`)),s.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),s.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.hu(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:u,strides:i,inputShape:l},g=r.BV.runKernel(a.ik,f,m);return p?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},2582:(e,t,n)=>{"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,c]=l(t);let p;if("channelsLast"===o)p=[u,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);p=[u,c,e[1],e[1]]}return i(e,p,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,l,p]=c(t);let h,d;if("NDHWC"===i)d="channelsLast",h=[u,l,p,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",h=[u,l,p,e[1],e[1]]}return o(e,h,n,r,a,!1,d,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,d,f]=e}const[g,y,,b]=t,[x,w]=l(n),[v,k]=l(r),I=p(g,v),S=p(y,k),{padInfo:N,outHeight:T,outWidth:C}=function(e,t,n,r,a,s,i,o,l){let c,p,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[1];return[h((e[0]-t+2*r)/n+1,a),h((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);p=a[0],d=a[1]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(p-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),l=e-u,h=Math.floor(o/2);c={top:u,bottom:l,left:h,right:o-h,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===l?e[1][0]:e[2][0],f="channelsLast"===l?e[1][1]:e[2][1],m="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];c={top:u,bottom:f,left:m,right:g,type:0===u&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},p=h((t-s+u+f)/r+1,o),d=h((n-i+m+g)/a+1,o)}}return{padInfo:c,outHeight:p,outWidth:d}}(a,d,f,x,w,I,S,s,o),$=i?b*m:b;let A;return"channelsFirst"===o?A=[c,$,T,C]:"channelsLast"===o&&(A=[c,T,C,$]),{batchSize:c,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:T,outWidth:C,outChannels:$,padInfo:N,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:y,effectiveFilterHeight:I,effectiveFilterWidth:S,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[l,d,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,d,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,g,d,f,m]=e}const[y,b,x,,w]=t,[v,k,I]=c(n),[S,N,T]=c(r),C=p(y,S),$=p(b,N),A=p(x,T),{padInfo:E,outDepth:_,outHeight:D,outWidth:R}=function(e,t,n,r,a,s,i,o,l,c,p){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[1],o=e[2];return[h((e[0]-t+2*a)/r+1,s),h((i-t+2*a)/r+1,s),h((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,p);f=s[0],m=s[1],g=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),g=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+l-n,p=(g-1)*i+c-r,h=Math.floor(e/2),y=e-h,b=Math.floor(u/2),x=u-b,w=Math.floor(p/2);d={top:b,bottom:x,left:w,right:p-w,front:h,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-l+1)/s),g=Math.ceil((r-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(a,d,f,m,v,k,I,C,$,A,o),F=s?w*g:w;let O;return"channelsFirst"===i?O=[l,F,_,D,R]:"channelsLast"===i&&(O=[l,_,D,R,F]),{batchSize:l,dataFormat:i,inDepth:d,inHeight:f,inWidth:m,inChannels:g,outDepth:_,outHeight:D,outWidth:R,outChannels:F,padInfo:E,strideDepth:v,strideHeight:k,strideWidth:I,filterDepth:y,filterHeight:b,filterWidth:x,effectiveFilterDepth:C,effectiveFilterHeight:$,effectiveFilterWidth:A,dilationDepth:S,dilationHeight:N,dilationWidth:T,inShape:e,outShape:O,filterShape:t}}function u(e,t,n,r=1){const a=p(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function l(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function p(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function d(e){const[t,n,r]=l(e);return 1===t&&1===n&&1===r}function f(e,t){return d(e)||d(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>r,Xw:()=>a,pl:()=>s,Ix:()=>i,jw:()=>o,aO:()=>u,I0:()=>d,jT:()=>f,sl:()=>m})},173:(e,t,n)=>{"use strict";n.d(t,{m:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cos_:function(e){const t={x:(0,s._1)(e,"x","cos")};return r.BV.runKernel(a.mc,t)}})},2699:(e,t,n)=>{"use strict";n.d(t,{f:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cosh_:function(e){const t={x:(0,s._1)(e,"x","cosh")};return r.BV.runKernel(a.TR,t)}})},7405:(e,t,n)=>{"use strict";n.d(t,{z:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:(0,s._1)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.BV.runKernel(a.iH,o,u)}})},5746:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({denseBincount_:function(e,t,n,o=!1){const u=(0,s._1)(e,"x","denseBincount"),l=(0,s._1)(t,"weights","denseBincount");i.hu("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.hu(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.hu(l.size===u.size||0===l.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${l.shape}.`));const c={x:u,weights:l},p={size:n,binaryOutput:o};return r.BV.runKernel(a.QR,c,p)}})},9112:(e,t,n)=>{"use strict";n.d(t,{n:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({depthToSpace_:function(e,t,n="NHWC"){const o=(0,s._1)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],l="NHWC"===n?o.shape[2]:o.shape[3],c="NHWC"===n?o.shape[3]:o.shape[1];i.hu(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.hu(l*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${l} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.hu(c%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${c} for depthToSpace with input shape ${o.shape}`));const p={x:o},h={blockSize:t,dataFormat:n};return r.BV.runKernel(a.T0,p,h)}})},4718:(e,t,n)=>{"use strict";n.d(t,{B:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,l="NHWC",c=[1,1],p){const h=(0,s._1)(e,"x","depthwiseConv2d"),d=(0,s._1)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),i.hu(f.shape[3]===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null!=p&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${o}.`));const g={x:f,filter:d},y={strides:n,pad:o,dataFormat:l,dilations:c,dimRoundingMode:p},b=r.BV.runKernel(a.ci,g,y);return m?(0,u.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},8098:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var r=n(7097),a=n(9121),s=n(2668),i=n(4968);const o=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],l){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:c,dy:p},d={strides:s,pad:o,dimRoundingMode:l,dilations:u,filterShape:n};return r.BV.runKernel(a.sL,h,d)}})},4375:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var r=n(7097),a=n(9121),s=n(2668),i=n(4968);const o=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],l){let c=t,p=!1;3===t.rank&&(p=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:c,filter:n},d={strides:s,pad:o,dimRoundingMode:l,dilations:u,inputShape:e},f=r.BV.runKernel(a.y7,h,d);return p?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},557:(e,t,n)=>{"use strict";n.d(t,{W:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({dilation2d_:function(e,t,n,o,l=[1,1],c="NHWC"){const p=(0,s._1)(e,"x","dilation2d"),h=(0,s._1)(t,"filter","dilation2d");i.hu(3===p.rank||4===p.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${p.rank}.`)),i.hu(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.hu("NHWC"===c,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${c}`));let d=p,f=!1;3===p.rank&&(d=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),f=!0);const m={x:d,filter:h},g={strides:n,pad:o,dilations:l},y=r.BV.runKernel(a.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:(e,t,n)=>{"use strict";n.d(t,{h:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(9165);const u=(0,n(2668).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),u=(0,i._1)(t,"b","div");if([n,u]=(0,s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,o.q)(n,u);const l={a:n,b:u};return r.BV.runKernel(a.oH,l,{})}})},9322:(e,t,n)=>{"use strict";n.d(t,{N:()=>c});var r=n(747),a=n(3740),s=n(1274),i=n(6477),o=n(2668),u=n(5912),l=n(6577);const c=(0,o.op)({divNoNan_:function(e,t){let n=(0,a._1)(e,"a","div"),o=(0,a._1)(t,"b","div");[n,o]=(0,r.makeTypesMatch)(n,o);const c=(0,s.h)(n,o),p=(0,l.P)(c),h=(0,i.D)(o,p);return(0,u.a)(h,p,c)}})},548:(e,t,n)=>{"use strict";n.d(t,{A:()=>u});var r=n(3740),a=n(569),s=n(8687),i=n(2668),o=n(4968);const u=(0,i.op)({dot_:function(e,t){const n=(0,r._1)(e,"t1","dot"),i=(0,r._1)(t,"t2","dot");a.hu(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],l=1===i.rank?i.size:i.shape[0];if(a.hu(u===l,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${l}.`)),1===n.rank&&1===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[-1,1]),r=(0,s.O)(e,t);return(0,o.X)(r,[])}if(1===n.rank&&2===i.rank){const e=(0,o.X)(n,[1,-1]),t=(0,o.X)(i,[i.shape[0],i.shape[1]]),r=(0,s.O)(e,t);return(0,o.X)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=(0,o.X)(i,[-1,1]),t=(0,s.O)(n,e);return(0,o.X)(t,[t.size])}{const e=(0,o.X)(i,[i.shape[0],i.shape[1]]);return(0,s.O)(n,e)}}})},4653:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({einsum_:function(e,...t){const n=t.map(((e,t)=>(0,s._1)(e,`tensors${t}`,"einsum"))),i={equation:e};return r.BV.runKernel(a.$g,n,i)}})},3233:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({elu_:function(e){const t={x:(0,s._1)(e,"x","elu")};return r.BV.runKernel(a.SX,t)}})},6477:(e,t,n)=>{"use strict";n.d(t,{D:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal","string_or_numeric"),u=(0,i._1)(t,"b","equal","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.hd,l)}})},4650:(e,t,n)=>{"use strict";n.d(t,{q:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2271);const u=(0,n(2668).op)({erf_:function(e){let t=(0,s._1)(e,"x","erf");i.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,o.p)(t,"float32"));const n={x:t};return r.BV.runKernel(a.Om,n)}})},4842:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({exp_:function(e){const t={x:(0,s._1)(e,"x","exp")};return r.BV.runKernel(a.NE,t)}})},1300:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({expandDims_:function(e,t=0){const n=(0,s._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.BV.runKernel(a.YF,o,u)}})},3426:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({expm1_:function(e){const t={x:(0,s._1)(e,"x","expm1")};return r.BV.runKernel(a.Y0,t)}})},4006:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.BV.runKernel(a.de,{},s)}},6943:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({floor_:function(e){const t={x:(0,s._1)(e,"x","floor")};return r.BV.runKernel(a.OR,t)}})},9165:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.je,u)}})},4624:(e,t,n)=>{"use strict";n.r(t),n.d(t,{conv2d:()=>b,depthwiseConv2d:()=>k,matMul:()=>S});var r=n(7097),a=n(633),s=n(9121),i=n(747),o=n(3740),u=n(569),l=n(6407),c=n(2200),p=n(4794),h=n(6013),d=n(9832),f=n(2582),m=n(9323),g=n(2668),y=n(4968);const b=(0,g.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:g,dataFormat:b="NHWC",dilations:x=[1,1],dimRoundingMode:w,bias:v,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(k=k||"linear",!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,p.T)(e,t,n,g,b,x,w);return null!=v&&(r=(0,l.I)(r,v)),(0,m.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","conv2d"),T=(0,o._1)(t,"filter","conv2d");let C=N,$=!1;3===N.rank&&($=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${T.rank}.`)),null!=w&&u.hu(u.GN(g),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${w} but got pad ${g}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in conv2d: depth of input (${C.shape[3]}) must match input depth for filter ${T.shape[2]}.`)),u.hu(f.jT(n,x),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${x}'`)),u.hu("NHWC"===b,(()=>`Error in conv2d: got dataFormat of ${b} but only NHWC is currently supported.`));const A=f.Ix(C.shape,T.shape,n,x,g,w);let E,_;null!=v&&(E=(0,o._1)(v,"bias","fused conv2d"),[E]=(0,i.makeTypesMatch)(E,N),c.$N(A.outShape,E.shape)),null!=I&&(_=(0,o._1)(I,"prelu weights","fused conv2d"));const D=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k);u.hu(f.I0(x),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${x}'`));const l=[(0,d._)(a.shape,o,r,n,g),(0,h.p)(a,o,r.shape,n,g)];if(null!=i){const e=(0,m.pf)(i,o);l.push(e)}return l},R={x:C,filter:T,bias:E,preluActivationWeights:_},F={strides:n,pad:g,dataFormat:b,dilations:x,dimRoundingMode:w,activation:k,leakyreluAlpha:S};return null==v?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s._V,R,F);return n([t,e,a]),$&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:D}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s._V,R,F);return a([t,e,i,n]),$&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:D}}))(C,T,E)}});var x=n(4718),w=n(8098),v=n(4375);const k=(0,g.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:p,dataFormat:h="NHWC",dilations:d=[1,1],dimRoundingMode:g,bias:b,activation:k="linear",preluActivationWeights:I,leakyreluAlpha:S}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,k)){let r=(0,x.B)(e,t,n,p,h,d,g);return null!=b&&(r=(0,l.I)(r,b)),(0,m.QH)(r,k,I,S)}const N=(0,o._1)(e,"x","depthwiseConv2d"),T=(0,o._1)(t,"filter","depthwiseConv2d");let C=N,$=!1;3===N.rank&&($=!0,C=(0,y.X)(N,[1,N.shape[0],N.shape[1],N.shape[2]])),u.hu(4===C.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${C.rank}.`)),u.hu(4===T.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${T.rank}.`)),u.hu(C.shape[3]===T.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${C.shape[3]}) must match the inChannels dimension in filter ${T.shape[2]}.`)),null==d&&(d=[1,1]),u.hu(f.jT(n,d),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),null!=g&&u.hu(u.GN(p),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${g} but got pad ${p}.`));const A=f.Ix(C.shape,T.shape,n,d,p,g,!0);let E,_;null!=b&&(E=(0,o._1)(b,"bias","fused conv2d"),[E]=(0,i.makeTypesMatch)(E,N),c.$N(A.outShape,E.shape)),null!=I&&(_=(0,o._1)(I,"prelu weights","fused depthwiseConv2d"));const D=(e,t)=>{u.hu(f.I0(d),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${d}'`));const[r,a,s,i]=t,o=(0,m.Fr)(e,s,k),l=(0,v.v)(a.shape,o,r,n,p,d,g),c=(0,w.z)(a,o,r.shape,n,p,d,g);return null!=i?[l,c,(0,m.pf)(E,o)]:[l,c]},R={x:C,filter:T,bias:E,preluActivationWeights:_},F={strides:n,pad:p,dataFormat:h,dilations:d,dimRoundingMode:g,activation:k,leakyreluAlpha:S};return null==b?(0,a.cb)(((e,t,n)=>{let a=r.BV.runKernel(s.lu,R,F);return n([t,e,a]),$&&(a=(0,y.X)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:D}}))(C,T):(0,a.cb)(((e,t,n,a)=>{let i=r.BV.runKernel(s.lu,R,F);return a([t,e,i,n]),$&&(i=(0,y.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:D}}))(C,T,E)}});var I=n(8687);const S=(0,g.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:p=!1,bias:h,activation:d="linear",preluActivationWeights:f,leakyreluAlpha:g}){if(!1===(0,m.uy)(r.BV.state.gradientDepth,d)){let r=(0,I.O)(e,t,n,p);return null!=h&&(r=(0,l.I)(r,h)),(0,m.QH)(r,d,f,g)}let b=(0,o._1)(e,"a","fused matMul"),x=(0,o._1)(t,"b","fused matMul");[b,x]=(0,i.makeTypesMatch)(b,x);const w=n?b.shape[b.rank-2]:b.shape[b.rank-1],v=p?x.shape[x.rank-1]:x.shape[x.rank-2],k=n?b.shape[b.rank-1]:b.shape[b.rank-2],S=p?x.shape[x.rank-2]:x.shape[x.rank-1],N=b.shape.slice(0,-2),T=x.shape.slice(0,-2),C=u.NA(N),$=u.NA(T);u.hu(b.rank>=2&&x.rank>=2&&b.rank===x.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${b.rank} and ${x.rank}.`)),u.hu(u.cO(N,T),(()=>`Error in fused matMul: outer dimensions (${N}) and (${T}) of Tensors with shapes ${b.shape} and ${x.shape} must match.`)),u.hu(w===v,(()=>`Error in fused matMul: inner shapes (${w}) and (${v}) of Tensors with shapes ${b.shape} and ${x.shape} and transposeA=${n} and transposeB=${p} must match.`));const A=b.shape.slice(0,-2).concat([k,S]),E=n?(0,y.X)(b,[C,w,k]):(0,y.X)(b,[C,k,w]),_=p?(0,y.X)(x,[$,S,v]):(0,y.X)(x,[$,v,S]);let D,R;null!=h&&(D=(0,o._1)(h,"bias","fused matMul"),[D]=(0,i.makeTypesMatch)(D,b),c.$N(A,D.shape)),null!=f&&(R=(0,o._1)(f,"prelu weights","fused matMul"));const F=(e,t)=>{const[r,a,s,i]=t,o=(0,m.Fr)((0,y.X)(e,s.shape),s,d);let u,l;return n||p?!n&&p?(u=(0,I.O)(o,a,!1,!1),l=(0,I.O)(o,r,!0,!1)):n&&!p?(u=(0,I.O)(a,o,!1,!0),l=(0,I.O)(r,o,!1,!1)):(u=(0,I.O)(a,o,!0,!0),l=(0,I.O)(o,r,!0,!0)):(u=(0,I.O)(o,a,!1,!0),l=(0,I.O)(r,o,!0,!1)),null!=h?[u,l,(0,m.pf)(i,o)]:[u,l]},O={a:E,b:_,bias:D,preluActivationWeights:R},M={transposeA:n,transposeB:p,activation:d,leakyreluAlpha:g};return null==h?(0,a.cb)(((e,t,n)=>{const a=r.BV.runKernel(s.us,O,M);return n([e,t,a]),{value:(0,y.X)(a,A),gradFunc:F}}))(E,_):(0,a.cb)(((e,t,n,a)=>{const i=r.BV.runKernel(s.us,O,M);return a([e,t,i,n]),{value:(0,y.X)(i,A),gradFunc:F}}))(E,_,D)}})},9323:(e,t,n)=>{"use strict";n.d(t,{Fr:()=>f,pf:()=>m,QH:()=>g,uy:()=>y});var r=n(2200),a=n(3233),s=n(9133),i=n(4841),o=n(8151),u=n(7409),l=n(3582),c=n(4968),p=n(625),h=n(1901),d=n(5475);function f(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,i.d)(e,(0,h.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function m(e,t){let n=t;const a=r.RR(e.shape,t.shape);return a.length>0&&(n=(0,d.S)(n,a)),(0,c.X)(n,e.shape)}function g(e,t,n,r){if("linear"===t)return e;if("relu"===t)return(0,u.U)(e);if("elu"===t)return(0,a.p)(e);if("relu6"===t)return(0,l.b)(e);if("prelu"===t)return(0,o.A)(e,n);if("leakyrelu"===t)return(0,s.h)(e,r);if("sigmoid"===t)return(0,p.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const y=(e,t)=>!(e>0)||"linear"===t},4926:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,s._1)(e,"x","gather"),indices:(0,s._1)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.BV.runKernel(a.qi,o,u)}})},7494:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({gatherND_:function(e,t){const n=(0,s._1)(t,"indices","gatherND","int32"),i={params:(0,s._1)(e,"x","gatherND","string_or_numeric"),indices:n};return r.BV.runKernel(a.q1,i)}})},636:(e,t,n)=>{"use strict";n.d(t,{p:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater","string_or_numeric"),u=(0,i._1)(t,"b","greater","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.iZ,l)}})},7630:(e,t,n)=>{"use strict";n.d(t,{b:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual","string_or_numeric"),u=(0,i._1)(t,"b","greaterEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.Ac,l)}})},4386:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({imag_:function(e){const t={input:(0,s._1)(e,"input","imag")};return r.BV.runKernel(a.J_,t)}})},3305:(e,t,n)=>{"use strict";n.d(t,{I:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const l=(0,s._1)(e,"images","resizeBilinear");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=l,p=!1;3===l.rank&&(p=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a._Y,h,d);return p?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},5098:(e,t,n)=>{"use strict";n.d(t,{j:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const l=(0,s._1)(e,"images","resizeNearestNeighbor");i.hu(3===l.rank||4===l.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${l.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===l.dtype||"int32"===l.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=l,p=!1;3===l.rank&&(p=!0,c=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const[]=t,h={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=r.BV.runKernel(a.dp,h,d);return p?(0,u.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},3963:(e,t,n)=>{"use strict";n.d(t,{x:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isFinite_:function(e){const t={x:(0,s._1)(e,"x","isFinite")};return r.BV.runKernel(a.av,t)}})},4365:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isInf_:function(e){const t={x:(0,s._1)(e,"x","isInf")};return r.BV.runKernel(a.iW,t)}})},6230:(e,t,n)=>{"use strict";n.d(t,{i:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({isNaN_:function(e){const t={x:(0,s._1)(e,"x","isNaN")};return r.BV.runKernel(a.r7,t)}})},9133:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({leakyRelu_:function(e,t=.2){const n={x:(0,s._1)(e,"x","leakyRelu")},i={alpha:t};return r.BV.runKernel(a.J$,n,i)}})},6573:(e,t,n)=>{"use strict";n.d(t,{d:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({less_:function(e,t){let n=(0,i._1)(e,"a","less","string_or_numeric"),u=(0,i._1)(t,"b","less","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.vt,l)}})},624:(e,t,n)=>{"use strict";n.d(t,{z:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual","string_or_numeric"),u=(0,i._1)(t,"b","lessEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.CA,l)}})},4135:(e,t,n)=>{"use strict";n.d(t,{S:()=>s});var r=n(7097),a=n(9121);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.BV.runKernel(a.e7,{},s)}},9648:(e,t,n)=>{"use strict";n.d(t,{G:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({localResponseNormalization_:function(e,t=5,n=1,o=1,l=.5){const c=(0,s._1)(e,"x","localResponseNormalization");i.hu(4===c.rank||3===c.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${c.rank}.`)),i.hu(i.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let p=c,h=!1;3===c.rank&&(h=!0,p=(0,u.X)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const d={x:p},f={depthRadius:t,bias:n,alpha:o,beta:l},m=r.BV.runKernel(a.eZ,d,f);return h?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log_:function(e){const t={x:(0,s._1)(e,"x","log")};return r.BV.runKernel(a.Zb,t)}})},7474:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({log1p_:function(e){const t={x:(0,s._1)(e,"x","log1p")};return r.BV.runKernel(a.kU,t)}})},3888:(e,t,n)=>{"use strict";n.d(t,{e:()=>c});var r=n(633),a=n(3740),s=n(4841),i=n(7370),o=n(2668),u=n(625),l=n(3694);const c=(0,o.op)({logSigmoid_:function(e){const t=(0,a._1)(e,"x","logSigmoid");return(0,r.cb)((e=>({value:(0,i.W)((0,l.W)((0,i.W)(e))),gradFunc:t=>(0,s.d)(t,(0,u.X)((0,i.W)(e)))})))(t)}})},1510:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var r=n(633),a=n(3740),s=n(2271),i=n(4842),o=n(2597),u=n(3307),l=n(4841),c=n(2668),p=n(827),h=n(5475);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,r.cb)(((e,n)=>{const r=(0,u.F)(e,t,!0),a=(0,p.l)(e,r),c=(0,p.l)((0,s.p)(a,"float32"),(0,o.c)((0,h.S)((0,i.Q)(a),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[r]=n,a=(0,i.Q)(r);return(0,p.l)(e,(0,l.d)((0,h.S)(e,t,!0),a))}}}))(n)}})},1391:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var r=n(3740),a=n(569),s=n(6407),i=n(3591),o=n(4842),u=n(2597),l=n(3307),c=n(2668),p=n(4968),h=n(827),d=n(5475);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,r._1)(e,"x","logSumExp"),f=(0,a.EC)(t,c.shape),m=(0,l.F)(c,f,!0),g=(0,h.l)(c,m),y=(0,o.Q)(g),b=(0,d.S)(y,f),x=(0,u.c)(b),w=(0,s.I)((0,p.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,p.X)(w,e)}return w}})},2856:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalAnd_:function(e,t){const n=(0,s._1)(e,"a","logicalAnd","bool"),o=(0,s._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.PY,u)}})},8651:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({logicalNot_:function(e){const t={x:(0,s._1)(e,"x","logicalNot","bool")};return r.BV.runKernel(a.Vf,t)}})},5750:(e,t,n)=>{"use strict";n.d(t,{K:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2200);const o=(0,n(2668).op)({logicalOr_:function(e,t){const n=(0,s._1)(e,"a","logicalOr","bool"),o=(0,s._1)(t,"b","logicalOr","bool");(0,i.$N)(n.shape,o.shape);const u={a:n,b:o};return r.BV.runKernel(a.MZ,u)}})},596:(e,t,n)=>{"use strict";n.d(t,{e:()=>u});var r=n(3740),a=n(2200),s=n(2856),i=n(8651),o=n(5750);const u=(0,n(2668).op)({logicalXor_:function(e,t){const n=(0,r._1)(e,"a","logicalXor","bool"),u=(0,r._1)(t,"b","logicalXor","bool");return(0,a.$N)(n.shape,u.shape),(0,s.H)((0,o.K)(e,t),(0,i.h)((0,s.H)(e,t)))}})},9876:(e,t,n)=>{"use strict";var r;n.d(t,{I:()=>r}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},8687:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({matMul_:function(e,t,n=!1,o=!1){let u=(0,i._1)(e,"a","matMul"),l=(0,i._1)(t,"b","matMul");[u,l]=(0,s.makeTypesMatch)(u,l);const c={a:u,b:l},p={transposeA:n,transposeB:o};return r.BV.runKernel(a.XL,c,p)}})},3307:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({max_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.BV.runKernel(a.Yo,i,o)}})},1174:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2582),u=n(2668),l=n(4968);const c=(0,u.op)({maxPool_:function(e,t,n,u,c){const p=(0,s._1)(e,"x","maxPool");let h=p,d=!1;3===p.rank&&(d=!0,h=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${u}.`));const f={x:h},m={filterSize:t,strides:n,pad:u,dimRoundingMode:c},g=r.BV.runKernel(a.mT,f,m);return d?(0,l.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},5020:(e,t,n)=>{"use strict";n.d(t,{Y:()=>l});var r=n(7097),a=n(9121),s=n(3740),i=n(569),o=n(2668),u=n(4968);const l=(0,o.op)({maxPool3d_:function(e,t=[1,1,1],n,o,l,c="NDHWC"){const p=(0,s._1)(e,"x","maxPool3d");let h=p,d=!1;4===p.rank&&(d=!0,h=(0,u.X)(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),i.hu(5===h.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`)),i.hu("NDHWC"===c,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${c}`)),null!=l&&i.hu(i.GN(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${o}.`));const f={x:h},m={filterSize:t,strides:n,pad:o,dimRoundingMode:l,dataFormat:c},g=r.BV.runKernel(a.OA,f,m);return d?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},6877:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:(0,s._1)(e,"x","maxPoolWithArgmax")},l={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},c=r.BV.runKernel(a.vF,u,l);return{result:c[0],indexes:c[1]}}})},632:(e,t,n)=>{"use strict";n.d(t,{g:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),l=(0,i._1)(t,"b","maximum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.BM,c)}})},5130:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({mean_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","mean")},o={axis:t,keepDims:n};return r.BV.runKernel(a.q2,i,o)}})},5735:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({min_:function(e,t=null,n=!1){const i={x:(0,s._1)(e,"x","min")},o={axis:t,keepDims:n};return r.BV.runKernel(a.c1,i,o)}})},4513:(e,t,n)=>{"use strict";n.d(t,{L:()=>l});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200),u=n(2271);const l=(0,n(2668).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),l=(0,i._1)(t,"b","minimum");[n,l]=(0,s.makeTypesMatch)(n,l),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),l=(0,u.p)(l,"int32")),(0,o.$N)(n.shape,l.shape);const c={a:n,b:l};return r.BV.runKernel(a.q8,c)}})},1483:(e,t,n)=>{"use strict";n.d(t,{V:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({mirrorPad_:function(e,t,n){i.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=(0,s._1)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.hu(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.hu(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const l={paddings:t,mode:n},c={x:o};return r.BV.runKernel(a.jQ,c,l)}})},5228:(e,t,n)=>{"use strict";n.d(t,{w:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mod_:function(e,t){let n=(0,i._1)(e,"a","mod"),o=(0,i._1)(t,"b","mod");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Vb,u)}})},4841:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.wY,u)}})},686:(e,t,n)=>{"use strict";n.d(t,{S:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(4968);const u=(0,i.op)({multinomial_:function(e,t,n,i=!1){const u=(0,s._1)(e,"logits","multinomial"),l=u.size,c=u.rank;if(l<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${l}.`);if(c>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${c}`);n=n||Math.random();const p={logits:1===c?(0,o.X)(u,[1,-1]):u},h={numSamples:t,seed:n,normalized:i},d=r.BV.runKernel(a.NZ,p,h);return 1===c?(0,o.X)(d,[d.size]):d}})},7370:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({neg_:function(e){const t={x:(0,s._1)(e,"x","neg")};return r.BV.runKernel(a.ku,t)}})},3561:(e,t,n)=>{"use strict";n.d(t,{K:()=>y});var r=n(3740),a=n(569),s=n(6235),i=n(3591),o=n(3307),u=n(5735),l=n(2668),c=n(3453),p=n(4968),h=n(9494),d=n(3261),f=n(248),m=n(5475);function g(e,t,n=null){if(0===e.rank)return(0,s.W)(e);if(1!==e.rank&&null===n)return g((0,p.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,s.W)(e),n);if(t===1/0)return(0,o.F)((0,s.W)(e),n);if(t===-1/0)return(0,u.V)((0,s.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,s.W)(e),(0,h.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,s.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,s.W)(e),n[1]),n[0]);if(t===-1/0)return(0,u.V)((0,m.S)((0,s.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,l.op)({norm_:function(e,t="euclidean",n=null,s=!1){const o=g(e=(0,r._1)(e,"x","norm"),t,n);let u=o.shape;if(s){const t=(0,a.EC)(n,e.shape);u=i.rv(o.shape,t)}return(0,p.X)(o,u)}})},6500:(e,t,n)=>{"use strict";n.d(t,{Q:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual","string_or_numeric"),u=(0,i._1)(t,"b","notEqual","string_or_numeric");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a.yQ,l)}})},6708:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,s._1)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.BV.runKernel(a.we,o,u)}})},4917:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var r=n(7097),a=n(569),s=n(1661),i=n(9640);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,s.P)(t,n)}const n=(0,a.p8)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},7846:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({onesLike_:function(e){const t={x:(0,s._1)(e,"x","onesLike")};return r.BV.runKernel(a.qW,t)}})},2668:(e,t,n)=>{"use strict";n.d(t,{z:()=>s,op:()=>i});var r=n(7097),a=n(569);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.BV.startScope(n);try{const t=i(...e);return(0,a.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(t),t}catch(e){throw r.BV.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},4600:(e,t,n)=>{"use strict";n.d(t,{zvA:()=>I.z,WnP:()=>r.W,Khb:()=>a.K,__u:()=>s._,IHx:()=>i.I,QBD:()=>o.Q,$6P:()=>u.$,YjB:()=>l.Y,NqF:()=>c.N,vHJ:()=>p.v,ZRM:()=>h.Z,VfV:()=>d.V,z4N:()=>f.z,fvJ:()=>m.f,C80:()=>g.C,wS1:()=>y.w,uR5:()=>b.u,zEQ:()=>C,tgs:()=>A.t,Dxk:()=>_,JY5:()=>D,p3b:()=>R,E4h:()=>$.E,yE8:()=>F.y,anm:()=>Fn,UFq:()=>O.U,f3b:()=>M.f,pju:()=>z.p,mDi:()=>B.m,iUl:()=>L.i,d9v:()=>W.d,PYB:()=>U.P,zoF:()=>w.z,gME:()=>P,Izb:()=>V,MNy:()=>H,ZaL:()=>G,PAt:()=>j.P,Tek:()=>q.T,bc:()=>X.b,pdZ:()=>K.p,$QV:()=>Y,mCk:()=>J.m,f9Y:()=>Z.f,mew:()=>Hn,zbp:()=>ee.z,ppE:()=>te.p,nTT:()=>ne.n,B10:()=>re.B,Ka3:()=>ie,WmZ:()=>oe.W,hiC:()=>ue.h,NTj:()=>le.N,AKD:()=>ce.A,rvX:()=>Pn,WYO:()=>pe.W,pyx:()=>he.p,GRh:()=>Vn,DgJ:()=>de.D,qNN:()=>fe.q,Qqt:()=>me.Q,dt4:()=>ge.d,t$B:()=>ye.t,iyy:()=>we,kp_:()=>nn.k,hlL:()=>ve.h,GWj:()=>ke.G,qPi:()=>Ie.q,imm:()=>jn,Iqj:()=>Se.I,dbB:()=>Un.d,pjt:()=>Ne.p,brS:()=>Te.b,Sxn:()=>rn.S,asL:()=>Ce.a,BHj:()=>Fr,V3u:()=>Gn,wx0:()=>an.w,xVT:()=>$e.x,UWc:()=>Ae.U,i2d:()=>Ee.i,hi7:()=>_e.h,d9m:()=>De.d,zN1:()=>Re.z,$r2:()=>Or,SX3:()=>Fe.S,G9k:()=>Oe.G,cM7:()=>Me.c,Krr:()=>ze.K,e_t:()=>Be.e,CmS:()=>Le.C,l_t:()=>We.l,HvI:()=>Ue.H,hJK:()=>Pe.h,K5V:()=>Ve.K,egP:()=>He.e,MB5:()=>Mr,OI3:()=>v.O,Fp7:()=>Ge.F,_sB:()=>je._,YQQ:()=>qe.Y,Ip$:()=>Xe.I,gWQ:()=>Ke.g,J69:()=>Qe.J,ry_:()=>Ze,VV$:()=>et.V,LTh:()=>tt.L,VdP:()=>nt.V,wQq:()=>rt.w,Gi7:()=>ot,p_:()=>Bn,dC7:()=>k.d,rq4:()=>ut,SJ_:()=>lt.S,W76:()=>ct.W,KOy:()=>Mn.K,Quu:()=>pt.Q,lfX:()=>ht.l,iUs:()=>Ye.i,JpU:()=>dt.J,op:()=>I.op,N2O:()=>ft,vku:()=>mt.v,pNR:()=>gt,koy:()=>yt,t1L:()=>bt,lGY:()=>xt,d_R:()=>wt.d,sQ3:()=>vt.s,AL3:()=>kt.A,S0v:()=>It.S,WVs:()=>St.W,TN_:()=>Nt,wzB:()=>Ct,nGf:()=>$t,LGj:()=>At.L,w6H:()=>Et.w,kwC:()=>_t.k,M25:()=>Dt.M,UYe:()=>Rt.U,btT:()=>Ft.b,XLQ:()=>be.X,GYS:()=>Ot.G,SDf:()=>Mt,diP:()=>zt,sx7:()=>Bt,mG2:()=>Lt,QEs:()=>sn.Q,NMM:()=>Wt.N,bp0:()=>Ut.b,iD$:()=>Pt.i,snQ:()=>Ln.s,U8D:()=>Vt.U,U_I:()=>Ht.U,ODp:()=>Gt.O,XD2:()=>S.X,Xxe:()=>jt.X,tdS:()=>Rr,O$l:()=>qt.O,R_K:()=>Xt.R,tPi:()=>N.t,jZU:()=>Kt,SmN:()=>Qt,CnO:()=>Yt,p0P:()=>Jt,XAC:()=>Zt.X,Wvh:()=>en.W,fBT:()=>tn.f,rVs:()=>zr,ers:()=>Wn.e,uN7:()=>Dr,Vl2:()=>on.V,_b3:()=>un._,h62:()=>st.h,$i:()=>ln.$,L9e:()=>cn.L,knu:()=>pn.k,Nbs:()=>hn.N,NXj:()=>dn.N,Z_8:()=>Br,luU:()=>it.l,Smz:()=>fn.S,ORZ:()=>mn.O,AEp:()=>T.A,XeE:()=>gn.X,RRF:()=>yn.R,odF:()=>xn,wOQ:()=>wn.w,yXz:()=>vn,Bfx:()=>kn,xZs:()=>In,Gg6:()=>xe.G,hg7:()=>Sn.h,p4s:()=>On.p,Xu6:()=>Nn.X,Two:()=>Tn.T,pUJ:()=>Cn.p,HHK:()=>$n.H,VD$:()=>An,arb:()=>En.a,itS:()=>_n.i,lls:()=>Dn.l,P84:()=>Rn.P});var r=n(6235),a=n(7839),s=n(1470),i=n(6407),o=n(3135),u=n(781),l=n(2998),c=n(47),p=n(7394),h=n(2421),d=n(1891),f=n(7037),m=n(9812),g=n(369),y=n(5176),b=n(1749),x=n(3740),w=n(6884),v=n(8687),k=n(4841),I=n(2668),S=n(625),N=n(2676),T=n(1869);const C=(0,I.op)({basicLSTMCell_:function(e,t,n,r,a,s){const o=(0,x._1)(e,"forgetBias","basicLSTMCell"),u=(0,x._1)(t,"lstmKernel","basicLSTMCell"),l=(0,x._1)(n,"lstmBias","basicLSTMCell"),c=(0,x._1)(r,"data","basicLSTMCell"),p=(0,x._1)(a,"c","basicLSTMCell"),h=(0,x._1)(s,"h","basicLSTMCell"),d=(0,w.z)([c,h],1),f=(0,v.O)(d,u),m=(0,i.I)(f,l),g=m.shape[0],y=m.shape[1]/4,b=[g,y],I=(0,N.t)(m,[0,0],b),C=(0,N.t)(m,[0,y],b),$=(0,N.t)(m,[0,2*y],b),A=(0,N.t)(m,[0,3*y],b),E=(0,i.I)((0,k.d)((0,S.X)(I),(0,T.A)(C)),(0,k.d)(p,(0,S.X)((0,i.I)(o,$))));return[E,(0,k.d)((0,T.A)(E),(0,S.X)(A))]}});var $=n(8441),A=n(7505),E=n(569);const _=(0,I.op)({batchNorm2d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),E.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),E.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}}),D=(0,I.op)({batchNorm3d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),E.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),E.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}}),R=(0,I.op)({batchNorm4d_:function(e,t,n,r,a,s){const i=(0,x._1)(e,"x","batchNorm"),o=(0,x._1)(t,"mean","batchNorm"),u=(0,x._1)(n,"variance","batchNorm");let l,c;return null!=a&&(l=(0,x._1)(a,"scale","batchNorm")),null!=r&&(c=(0,x._1)(r,"offset","batchNorm")),E.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),E.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),E.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&E.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&E.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,A.t)(i,o,u,c,l,s)}});var F=n(3865),O=n(8247),M=n(2657),z=n(2271),B=n(6825),L=n(2279),W=n(8723),U=n(1661);const P=(0,I.op)({concat1d_:function(e){return(0,w.z)(e,0)}}),V=(0,I.op)({concat2d_:function(e,t){return(0,w.z)(e,t)}}),H=(0,I.op)({concat3d_:function(e,t){return(0,w.z)(e,t)}}),G=(0,I.op)({concat4d_:function(e,t){return(0,w.z)(e,t)}});var j=n(1355),q=n(4794),X=n(1405),K=n(473),Q=n(7594);const Y=(0,I.op)({conv3dTranspose_:function(e,t,n,r,a){const s=(0,x._1)(e,"x","conv3dTranspose"),i=(0,x._1)(t,"filter","conv3dTranspose");return(0,Q._)(n,s,i,r,a)}});var J=n(173),Z=n(2699),ee=n(7405),te=n(5746),ne=n(9112),re=n(4718),ae=n(7097),se=n(9121);const ie=(0,I.op)({diag_:function(e){const t={x:(0,x._1)(e,"x","diag")};return ae.BV.runKernel(se.$w,t)}});var oe=n(557),ue=n(1274),le=n(9322),ce=n(548),pe=n(4653),he=n(3233),de=n(6477),fe=n(4650),me=n(4842),ge=n(1300),ye=n(3426),be=n(4968),xe=n(7501);const we=(0,I.op)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=(0,M.f)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=(0,be.X)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,xe.G)((0,ge.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,xe.G)((0,ge.d)((0,ge.d)((0,ge.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ve=n(4006),ke=n(6943),Ie=n(9165),Se=n(4926),Ne=n(636),Te=n(7630),Ce=n(4386),$e=n(3963),Ae=n(4365),Ee=n(6230),_e=n(9133),De=n(6573),Re=n(624),Fe=n(4135),Oe=n(9648),Me=n(2597),ze=n(7474),Be=n(3888),Le=n(1510),We=n(1391),Ue=n(2856),Pe=n(8651),Ve=n(5750),He=n(596),Ge=n(3307),je=n(1174),qe=n(5020),Xe=n(6877),Ke=n(632),Qe=n(5130),Ye=n(4917),Je=n(4077);function Ze(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=(0,x._1)(e,"x","meshgrid",e instanceof Je.es?e.dtype:"float32");if(void 0===t)return[r];let a=(0,x._1)(t,"y","meshgrid",t instanceof Je.es?t.dtype:"float32");const s=(0,E.NA)(r.shape),i=(0,E.NA)(a.shape);return"xy"===n?(r=(0,be.X)(r,[1,-1]),a=(0,be.X)(a,[-1,1]),[(0,v.O)((0,Ye.i)([i,1],r.dtype),r),(0,v.O)(a,(0,Ye.i)([1,s],a.dtype))]):(r=(0,be.X)(r,[-1,1]),a=(0,be.X)(a,[1,-1]),[(0,v.O)(r,(0,Ye.i)([1,i],r.dtype)),(0,v.O)((0,Ye.i)([s,1],a.dtype),a)])}var et=n(5735),tt=n(4513),nt=n(1483),rt=n(5228),at=n(3591),st=n(248),it=n(827);const ot=(0,I.op)({moments_:function(e,t=null,n=!1){e=(0,x._1)(e,"x","moments");const r=(0,E.EC)(t,e.shape),a=(0,Qe.J)(e,r,n);let s=a.shape;n||(s=(0,at.rv)(a.shape,r));const i=(0,st.h)((0,it.l)((0,z.p)(e,"float32"),(0,be.X)(a,s)));return{mean:a,variance:(0,Qe.J)(i,r,n)}}}),ut=(0,I.op)({multiRNNCell_:function(e,t,n,r){const a=(0,x._1)(t,"data","multiRNNCell"),s=(0,x.sI)(n,"c","multiRNNCell"),i=(0,x.sI)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}});var lt=n(686),ct=n(7370),pt=n(6500),ht=n(6708),dt=n(7846);const ft=(0,I.op)({outerProduct_:function(e,t){const n=(0,x._1)(e,"v1","outerProduct"),r=(0,x._1)(t,"v2","outerProduct");E.hu(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=(0,be.X)(n,[-1,1]),s=(0,be.X)(r,[1,-1]);return(0,v.O)(a,s)}});var mt=n(9682);const gt=(0,I.op)({pad1d_:function(e,t,n=0){return(0,E.hu)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),(0,mt.v)(e,[t],n)}}),yt=(0,I.op)({pad2d_:function(e,t,n=0){return(0,E.hu)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),bt=(0,I.op)({pad3d_:function(e,t,n=0){return(0,E.hu)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}}),xt=(0,I.op)({pad4d_:function(e,t,n=0){return(0,E.hu)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),(0,mt.v)(e,t,n)}});var wt=n(5860),vt=n(3453),kt=n(8151),It=n(9798),St=n(9451);const Nt=(0,I.op)({rand_:function(e,t,n){const r=(0,E.NA)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return ae.BV.makeTensor(a,e,n)}});var Tt=n(6845);const Ct=(0,I.op)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.T9(t,n,r,a),i=(0,M.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),$t=(0,I.op)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new Tt.Yi(t,n,r,!1,a),i=(0,M.f)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var At=n(5002),Et=n(7245),_t=n(766),Dt=n(9036),Rt=n(7409),Ft=n(3582),Ot=n(7486);const Mt=(0,I.op)({reverse1d_:function(e){const t=(0,x._1)(e,"x","reverse");return E.hu(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),(0,Ot.G)(t,0)}}),zt=(0,I.op)({reverse2d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}}),Bt=(0,I.op)({reverse3d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}}),Lt=(0,I.op)({reverse4d_:function(e,t){const n=(0,x._1)(e,"x","reverse");return E.hu(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),(0,Ot.G)(n,t)}});var Wt=n(7809),Ut=n(2634),Pt=n(9494),Vt=n(5503),Ht=n(8678),Gt=n(6567),jt=n(4434),qt=n(9331),Xt=n(3254);const Kt=(0,I.op)({slice1d_:function(e,t,n){const r=(0,x._1)(e,"x","slice1d");return E.hu(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,[t],[n])}}),Qt=(0,I.op)({slice2d_:function(e,t,n){const r=(0,x._1)(e,"x","slice2d");return E.hu(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),Yt=(0,I.op)({slice3d_:function(e,t,n){const r=(0,x._1)(e,"x","slice3d");return E.hu(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}}),Jt=(0,I.op)({slice4d_:function(e,t,n){const r=(0,x._1)(e,"x","slice4d");return E.hu(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),(0,N.t)(r,t,n)}});var Zt=n(682),en=n(3694),tn=n(7918),nn=n(7020),rn=n(8447),an=n(4415),sn=n(3710),on=n(8644),un=n(3261),ln=n(5265),cn=n(9590),pn=n(2991),hn=n(1901),dn=n(5158),fn=n(5475),mn=n(1173),gn=n(701),yn=n(6092),bn=n(7852);function xn(e,t,n){if((0,E.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,x.C)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,bn.H)(e,t,r,n)}var wn=n(9906);function vn(e,t,n){if((0,E.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=(0,x.C)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function kn(e,t,n){if((0,E.Cq)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=(0,x.C)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return(0,bn.H)(e,t,r,n)}function In(e,t,n){if((0,E.Cq)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=(0,x.C)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,(0,bn.H)(e,t,r,n)}var Sn=n(3243),Nn=n(3596),Tn=n(9608),Cn=n(8749),$n=n(4136);function An(e,t=!0,n,r){return ae.BV.makeVariable(e,t,n,r)}var En=n(5912),_n=n(6380),Dn=n(9640),Rn=n(6577);const Fn=async function(e,t,n){const r=(0,x._1)(e,"tensor","boolMask"),a=(0,x._1)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;E.hu(i>0,(()=>"mask cannot be scalar")),E.k5(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=(0,be.X)(r,l),p=(0,be.X)(a,[-1]),h=await(0,_n.i)(p),d=(0,cn.L)(h,[1]),f=(0,Se.I)(c,d,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),d.dispose(),c.dispose(),p.dispose(),h.dispose(),f};var On=n(9065),Mn=n(3561),zn=n(747);const Bn=(0,I.op)({movingAverage_:function(e,t,n,r,a=!0){const s=(0,x._1)(e,"v","movingAverage"),o=(0,x._1)(t,"x","movingAverage"),u=(0,x._1)(n,"decay","movingAverage");(0,zn.assertTypesMatch)(s,o),E.hu(E.cO(s.shape,o.shape),(()=>"Shape mismatch in v and x"));const l=(0,Pt.i)(1),c=(0,it.l)(l,u);let p=(0,k.d)((0,it.l)(o,s),c);if(a){E.hu(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=(0,x._1)(r,"step","movingAverage");p=(0,ue.h)(p,(0,it.l)(l,(0,vt.s)(u,e)))}return(0,i.I)(s,p)}});var Ln=n(3100),Wn=n(9758),Un=n(7494);const Pn=(0,I.op)({dropout_:function(e,t,n,r){const a=(0,x._1)(e,"x","dropout");if(E.hu("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),E.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Je.es?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(E.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),o=1-t,u=(0,ue.h)((0,ke.G)((0,i.I)((0,At.L)(s,0,1,"float32",r),o)),o);return(0,k.d)(a,u)}});function Vn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Hn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return(0,yn.R)(a,"float32")}const Gn=async function(e,t,n=1){const r=(0,x._1)(e,"predictions","inTopK"),a=(0,x._1)(t,"targets","inTopK");(0,E.hu)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),(0,E.hu)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),(0,E.k5)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];(0,E.hu)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=(0,E.WP)("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),(0,gn.X)(c,a.shape,"bool")};var jn=n(4624);const qn=(0,I.op)({hammingWindow_:function(e){return Hn(e,.54,.46)}}),Xn=(0,I.op)({hannWindow_:function(e){return Hn(e,.5,.5)}}),Kn=(0,I.op)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push((0,N.t)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=(0,w.z)([(0,N.t)(e,s,t-r),(0,ve.h)([r],a)]);i.push(o),s+=n}return 0===i.length?xn([],[0,t]):(0,be.X)((0,w.z)(i),[i.length,t])}}),Qn=(0,I.op)({stft_:function(e,t,n,r,a=Xn){null==r&&(r=Vn(t));const s=Kn(e,t,n),i=(0,k.d)(s,a(t));return(0,sn.Q)(i,r)}}),Yn=(0,I.op)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=(0,x._1)(e,"image","cropAndResize"),o=(0,x._1)(t,"boxes","cropAndResize","float32"),u=(0,x._1)(n,"boxInd","cropAndResize","int32"),l=o.shape[0];E.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),E.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),E.hu(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),E.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),E.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),E.hu("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const c={image:i,boxes:o,boxInd:u},p={method:a,extrapolationValue:s,cropSize:r};return ae.BV.runKernel(se.Vc,c,p)}}),Jn=(0,I.op)({flipLeftRight_:function(e){const t=(0,x._1)(e,"image","flipLeftRight","float32");E.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ae.BV.runKernel(se.Uy,n,{})}}),Zn=(0,I.op)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=(0,x._1)(e,"image","rotateWithOffset","float32");E.hu(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return ae.BV.runKernel(se.b9,s,i)}});function er(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),E.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),E.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),E.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),E.hu(1===t.rank,(()=>"scores must be a 1D tensor")),E.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),E.hu(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const tr=(0,I.op)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppression"),i=(0,x._1)(t,"scores","nonMaxSuppression"),o=er(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return ae.BV.runKernel(se.uv,{boxes:s,scores:i},u)}});var nr=n(3337);const rr=(0,I.op)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=er(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},p=ae.BV.runKernel(se.W0,l,c);return{selectedIndices:p[0],selectedScores:p[1]}}}),ar=(0,I.op)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppression"),o=(0,x._1)(t,"scores","nonMaxSuppression"),u=er(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},p=ae.BV.runKernel(se.cy,l,c);return{selectedIndices:p[0],validOutputs:p[1]}}});var sr=n(3305),ir=n(5098);const or=(0,I.op)({threshold_:function(e,t="binary",n=!1,r=.5){const a=(0,x._1)(e,"image","threshold"),s=a.shape[0]*a.shape[1];let o,u,l,c,p=(0,k.d)((0,yn.R)([r]),255);if(E.hu(3===a.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`)),E.hu(3===a.shape[2]||1===a.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`)),E.hu("int32"===a.dtype||"float32"===a.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`)),E.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===a.shape[2]){[o,u,l]=(0,on.V)(a,[1,1,1],-1);const e=(0,k.d)(o,.2989),t=(0,k.d)(u,.587),n=(0,k.d)(l,.114);c=(0,i.I)((0,i.I)(e,t),n)}else c=e;"otsu"===t&&(p=function(e,t){let n,r,a,s,o,u,l=(0,yn.R)([-1]),c=(0,yn.R)([0]),p=(0,yn.R)([0]);for(let h=0;h<e.size-1;h++){n=(0,N.t)(e,0,h+1),r=(0,N.t)(e,h+1),o=(0,ue.h)((0,fn.S)(n),t),u=(0,ue.h)((0,fn.S)(r),t);const d=(0,fn.S)((0,k.d)(n,(0,Et.w)(0,n.size)));a=(0,ue.h)(d,(0,fn.S)(n));const f=(0,ve.h)(r.shape,n.size),m=(0,i.I)((0,Et.w)(0,r.size),f),g=(0,k.d)(r,m);s=(0,ue.h)((0,fn.S)(g),(0,fn.S)(r));const y=(0,it.l)(a,s),b=(0,it.l)(a,s),x=(0,k.d)(o,u);p=(0,k.d)((0,k.d)(x,y),b);const w=(0,Ne.p)(p,c);c=(0,En.a)(w,p,c),l=(0,En.a)(w,(0,yn.R)([h]),l)}return l}((0,F.y)((0,z.p)((0,Wt.N)(c),"int32"),(0,gn.X)([]),256),s));const h=n?(0,Re.z)(c,p):(0,Ne.p)(c,p);return(0,z.p)((0,k.d)(h,255),"int32")}}),ur=(0,I.op)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=(0,x._1)(e,"image","transform","float32"),o=(0,x._1)(t,"transforms","transform","float32");E.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),E.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),E.hu(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return ae.BV.runKernel(se.wx,u,l)}}),lr=(0,I.op)({bandPart_:function(e,t,n){(0,E.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,E.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,x._1)(e,"a","bandPart");(0,E.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=(0,be.X)((0,Et.w)(0,s,1,"int32"),[-1,1]),u=(0,Et.w)(0,i,1,"int32"),l=(0,it.l)(o,u),c=(0,Ue.H)((0,Re.z)(l,(0,Pt.i)(+t,"int32")),(0,Te.b)(l,(0,Pt.i)(-n,"int32"))),p=(0,Dn.l)([s,i],r.dtype);return(0,be.X)((0,pn.k)((0,$n.H)((0,be.X)(r,[-1,s,i])).map((e=>(0,En.a)(c,e,p)))),a)}}),cr=(0,I.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,E.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,E.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,on.V)(e,e.shape[0],0).map((e=>(0,cn.L)(e,[0])));(0,E.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ae.BV.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=(0,k.d)((0,fn.S)((0,k.d)(n[r],e)),n[r]);e=(0,it.l)(e,t)}return(0,ue.h)(e,(0,Mn.K)(e,"euclidean"))})));return t?(0,pn.k)(n,0):n}});var pr=n(4368);function hr(e,t=!1){return ae.BV.tidy((()=>{(0,E.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=we(n),s=(0,W.d)(e);const i=xn([[1]],[1,1]);let o=(0,W.d)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=ae.BV.tidy((()=>{const t=(0,N.t)(s,[e,e],[n-e,1]),u=(0,Mn.K)(t),l=(0,N.t)(s,[e,e],[1,1]),c=(0,En.a)((0,Ne.p)(l,0),xn([[-1]]),xn([[1]])),p=(0,it.l)(l,(0,k.d)(c,u)),h=(0,ue.h)(t,p);o=1===h.shape[0]?(0,W.d)(i):(0,w.z)([i,(0,N.t)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const d=(0,ct.W)((0,ue.h)((0,v.O)(c,p),u)),f=(0,N.t)(s,[e,0],[n-e,r]),m=(0,k.d)(d,o),g=(0,On.p)(o);if(0===e)s=(0,it.l)(f,(0,v.O)(m,(0,v.O)(g,f)));else{const t=(0,it.l)(f,(0,v.O)(m,(0,v.O)(g,f)));s=(0,w.z)([(0,N.t)(s,[0,0],[e,r]),t],0)}const y=(0,On.p)(m),b=(0,N.t)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=(0,it.l)(b,(0,v.O)((0,v.O)(b,o),y));else{const t=(0,it.l)(b,(0,v.O)((0,v.O)(b,o),y));a=(0,w.z)([(0,N.t)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),(0,pr.B9)([t,u,l])}return!t&&n>r&&(a=(0,N.t)(a,[0,0],[n,r]),s=(0,N.t)(s,[0,0],[r,r])),[a,s]}))}const dr=(0,I.op)({qr_:function(e,t=!1){if((0,E.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return hr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=(0,$n.H)((0,be.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach((e=>{const[n,r]=hr(e,t);a.push(n),s.push(r)})),[(0,be.X)((0,pn.k)(a,0),e.shape),(0,be.X)((0,pn.k)(s,0),e.shape)]}}});var fr=n(9876);const mr=(0,I.op)({computeWeightedLoss_:function(e,t,n=fr.I.SUM_BY_NONZERO_WEIGHTS){const r=(0,x._1)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=(0,x._1)(t,"weights","computeWeightedLoss"));const s=null==a?r:(0,k.d)(r,a);if(n===fr.I.NONE)return s;if(n===fr.I.SUM)return(0,fn.S)(s);if(n===fr.I.MEAN){if(null==a)return(0,Qe.J)(s);{const e=r.size/a.size,t=(0,ue.h)((0,fn.S)(s),(0,fn.S)(a));return e>1?(0,ue.h)(t,(0,Pt.i)(e)):t}}if(n===fr.I.SUM_BY_NONZERO_WEIGHTS){if(null==a)return(0,ue.h)((0,fn.S)(s),(0,Pt.i)(r.size));{const e=(0,k.d)(a,(0,Ye.i)(r.shape)),t=(0,z.p)((0,fn.S)((0,pt.Q)(e,(0,Pt.i)(0))),"float32");return(0,ue.h)((0,fn.S)(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),gr=(0,I.op)({absoluteDifference_:function(e,t,n,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","absoluteDifference"),i=(0,x._1)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=(0,x._1)(n,"weights","absoluteDifference")),(0,E.k5)(s.shape,i.shape,"Error in absoluteDifference: ");const u=(0,r.W)((0,it.l)(s,i));return mr(u,o,a)}}),yr=(0,I.op)({cosineDistance_:function(e,t,n,r,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","cosineDistance"),i=(0,x._1)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=(0,x._1)(r,"weights","cosineDistance")),(0,E.k5)(s.shape,i.shape,"Error in cosineDistance: ");const u=(0,Pt.i)(1),l=(0,it.l)(u,(0,fn.S)((0,k.d)(s,i),n,!0));return mr(l,o,a)}}),br=(0,I.op)({hingeLoss_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){let a=(0,x._1)(e,"labels","hingeLoss");const s=(0,x._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,x._1)(n,"weights","hingeLoss")),(0,E.k5)(a.shape,s.shape,"Error in hingeLoss: ");const o=(0,Pt.i)(1);a=(0,it.l)((0,k.d)((0,Pt.i)(2),a),o);const u=(0,Rt.U)((0,it.l)(o,(0,k.d)(a,s)));return mr(u,i,r)}}),xr=(0,I.op)({huberLoss_:function(e,t,n,a=1,s=fr.I.SUM_BY_NONZERO_WEIGHTS){const o=(0,x._1)(e,"labels","huberLoss"),u=(0,x._1)(t,"predictions","huberLoss");let l=null;null!=n&&(l=(0,x._1)(n,"weights","huberLoss")),(0,E.k5)(o.shape,u.shape,"Error in huberLoss: ");const c=(0,Pt.i)(a),p=(0,r.W)((0,it.l)(u,o)),h=(0,tt.L)(p,c),d=(0,it.l)(p,h),f=(0,i.I)((0,k.d)((0,Pt.i)(.5),(0,st.h)(h)),(0,k.d)(c,d));return mr(f,l,s)}}),wr=(0,I.op)({logLoss_:function(e,t,n,r=1e-7,a=fr.I.SUM_BY_NONZERO_WEIGHTS){const s=(0,x._1)(e,"labels","logLoss"),o=(0,x._1)(t,"predictions","logLoss");let u=null;null!=n&&(u=(0,x._1)(n,"weights","logLoss")),(0,E.k5)(s.shape,o.shape,"Error in logLoss: ");const l=(0,Pt.i)(1),c=(0,Pt.i)(r),p=(0,ct.W)((0,k.d)(s,(0,Me.c)((0,i.I)(o,c)))),h=(0,k.d)((0,it.l)(l,s),(0,Me.c)((0,i.I)((0,it.l)(l,o),c))),d=(0,it.l)(p,h);return mr(d,u,a)}}),vr=(0,I.op)({meanSquaredError_:function(e,t,n,r=fr.I.SUM_BY_NONZERO_WEIGHTS){const a=(0,x._1)(e,"labels","meanSquaredError"),s=(0,x._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,x._1)(n,"weights","meanSquaredError")),(0,E.k5)(a.shape,s.shape,"Error in meanSquaredError: ");const o=(0,ln.$)(a,s);return mr(o,i,r)}}),kr=(0,I.op)({sigmoidCrossEntropy_:function(e,t,n,a=0,s=fr.I.SUM_BY_NONZERO_WEIGHTS){let o=(0,x._1)(e,"multiClassLabels","sigmoidCrossEntropy");const u=(0,x._1)(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=(0,x._1)(n,"weights","sigmoidCrossEntropy")),(0,E.k5)(o.shape,u.shape,"Error in sigmoidCrossEntropy: "),a>0){const e=(0,Pt.i)(a),t=(0,Pt.i)(1),n=(0,Pt.i)(.5);o=(0,i.I)((0,k.d)(o,(0,it.l)(t,e)),(0,k.d)(n,e))}const c=function(e,t){const n=(0,x._1)(e,"labels","sigmoidCrossEntropyWithLogits"),a=(0,x._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,E.k5)(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=(0,Rt.U)(a),o=(0,k.d)(a,n),u=(0,ze.K)((0,me.Q)((0,ct.W)((0,r.W)(a))));return(0,i.I)((0,it.l)(s,o),u)}(o,u);return mr(c,l,s)}});var Ir=n(633);const Sr=(0,I.op)({softmaxCrossEntropy_:function(e,t,n,r=0,a=fr.I.SUM_BY_NONZERO_WEIGHTS){let s=(0,x._1)(e,"onehotLabels","softmaxCrossEntropy");const o=(0,x._1)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,x._1)(n,"weights","softmaxCrossEntropy")),(0,E.k5)(s.shape,o.shape,"Error in softmaxCrossEntropy: "),r>0){const e=(0,Pt.i)(r),t=(0,Pt.i)(1),n=(0,Pt.i)(s.shape[1]);s=(0,i.I)((0,k.d)(s,(0,it.l)(t,e)),(0,ue.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,Ir.cb)(((e,t,r)=>{const a=(0,We.l)(t,[n],!0),s=(0,it.l)((0,z.p)(t,"float32"),a);r([e,s]);const i=(0,ct.W)((0,k.d)(s,e));return{value:(0,fn.S)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=(0,at.rv)(e.shape,[n]);return[(0,k.d)((0,be.X)(e,s),(0,it.l)((0,z.p)(r,"float32"),(0,me.Q)(a))),(0,k.d)((0,be.X)(e,s),(0,it.l)((0,me.Q)(a),(0,z.p)(r,"float32")))]}}}))(e,t)}(s,o);return mr(l,u,a)}}),Nr=(0,I.op)({sparseFillEmptyRows_:function(e,t,n,r){const a=(0,x._1)(e,"indices","sparseFillEmptyRows"),s=(0,x._1)(t,"values","sparseFillEmptyRows"),i=(0,x._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,x._1)(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=ae.BV.runKernel(se.O3,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Tr=(0,I.op)({sparseReshape_:function(e,t,n){const r=(0,x._1)(e,"inputIndices","sparseReshape"),a=(0,x._1)(t,"inputShape","sparseReshape"),s=(0,x._1)(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=ae.BV.runKernel(se.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cr=(0,I.op)({sparseSegmentMean_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentMean"),a=(0,x._1)(t,"indices","sparseSegmentMean"),s=(0,x._1)(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.YW,i)}}),$r=(0,I.op)({sparseSegmentSum_:function(e,t,n){const r=(0,x._1)(e,"data","sparseSegmentSum"),a=(0,x._1)(t,"indices","sparseSegmentSum"),s=(0,x._1)(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return ae.BV.runKernel(se.Zj,i)}}),Ar=(0,I.op)({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=(0,x._1)(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=(0,x._1)(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},p={data:u,dataSplits:l},h=ae.BV.runKernel(se._J,p,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),Er=(0,I.op)({stringSplit_:function(e,t,n=!0){const r=(0,x._1)(e,"input","stringSplit","string"),a=(0,x._1)(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=ae.BV.runKernel(se.s1,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),_r=(0,I.op)({stringToHashBucketFast_:function(e,t){const n=(0,x._1)(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return ae.BV.runKernel(se.Xk,a,r)}}),Dr={fft:nn.k,ifft:rn.S,rfft:sn.Q,irfft:an.w},Rr={hammingWindow:qn,hannWindow:Xn,frame:Kn,stft:Qn},Fr={flipLeftRight:Jn,resizeNearestNeighbor:ir.j,resizeBilinear:sr.I,rotateWithOffset:Zn,cropAndResize:Yn,nonMaxSuppression:tr,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),i=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),o=er(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:p}=(0,nr.GP)(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),(0,yn.R)(p,"int32")},nonMaxSuppressionWithScore:rr,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=er(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],p=l[1],{selectedIndices:h,selectedScores:d}=(0,nr.pA)(c,p,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(h,"int32"),selectedScores:(0,yn.R)(d)}},nonMaxSuppressionPadded:ar,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=(0,x._1)(e,"boxes","nonMaxSuppressionAsync"),o=(0,x._1)(t,"scores","nonMaxSuppressionAsync"),u=er(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,p=u.scoreThreshold,[h,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=(0,nr.qP)(h,d,l,c,p,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:(0,yn.R)(f,"int32"),validOutputs:(0,Pt.i)(m,"int32")}},threshold:or,transform:ur},Or={bandPart:lr,gramSchmidt:cr,qr:dr},Mr={absoluteDifference:gr,computeWeightedLoss:mr,cosineDistance:yr,hingeLoss:br,huberLoss:xr,logLoss:wr,meanSquaredError:vr,sigmoidCrossEntropy:kr,softmaxCrossEntropy:Sr},zr={sparseFillEmptyRows:Nr,sparseReshape:Tr,sparseSegmentMean:Cr,sparseSegmentSum:$r},Br={stringNGrams:Ar,stringSplit:Er,stringToHashBucketFast:_r}},9682:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({pad_:function(e,t,n=0){const i=(0,s._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.BV.runKernel(a.ly,u,o)}})},5860:(e,t,n)=>{"use strict";n.d(t,{d:()=>h});var r=n(3740),a=n(569),s=n(5176),i=n(8441),o=n(2582),u=n(1174),l=n(2668),c=n(4968),p=n(7918);const h=(0,l.op)({pool_:function(e,t,n,l,h,d){null==h&&(h=[1,1]),null==d&&(d=1),0===l&&(l="valid");const f=(0,r._1)(e,"x","maxPool");let m=f,g=!1;3===f.rank&&(g=!0,m=(0,c.X)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.hu(o.jT(d,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${d} and dilations '${h}'`));const y=o.Xw(m.shape,t,d,h,l),b=[y.dilationHeight,y.dilationWidth];let x;x="same"===l?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([y.filterHeight,y.filterWidth],b):[[0,0],[0,0]];const w=1===b[0]&&1===b[1],[v,k]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([y.inHeight,y.inWidth],b,x),I=w?l:"valid",S=w?m:(0,p.f)(m,b,v),N=("avg"===n?()=>(0,s.w)(S,t,d,I):()=>(0,u._)(S,t,d,I))(),T=w?N:(0,i.E)(N,b,k);return g?(0,c.X)(T,[T.shape[1],T.shape[2],T.shape[3]]):T}})},3453:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.pe,u)}})},8151:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({prelu_:function(e,t){const n={x:(0,s._1)(e,"x","prelu"),alpha:(0,s._1)(t,"alpha","prelu")};return r.BV.runKernel(a.o0,n)}})},9798:(e,t,n)=>{"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,{S:()=>r})},9451:(e,t,n)=>{"use strict";n.d(t,{W:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({prod_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","prod");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.Dl,u,l)}})},6845:(e,t,n)=>{"use strict";n.d(t,{Yi:()=>a,T9:()=>s,wv:()=>i});var r=n(3129);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},5002:(e,t,n)=>{"use strict";n.d(t,{L:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=(0,r.f)(e,a),u=new s.wv(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},7245:(e,t,n)=>{"use strict";n.d(t,{w:()=>s});var r=n(7097),a=n(9121);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.BV.runKernel(a.e6,{},i)}},766:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({real_:function(e){const t={input:(0,s._1)(e,"input","real")};return r.BV.runKernel(a.xJ,t)}})},9036:(e,t,n)=>{"use strict";n.d(t,{M:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reciprocal_:function(e){const t={x:(0,s._1)(e,"x","reciprocal")};return r.BV.runKernel(a.$H,t)}})},7409:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu_:function(e){const t={x:(0,s._1)(e,"x","relu")};return r.BV.runKernel(a.qk,t)}})},3582:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({relu6_:function(e){const t={x:(0,s._1)(e,"x","relu6")};return r.BV.runKernel(a.Sb,t)}})},4968:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reshape_:function(e,t){const n={x:(0,s._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.BV.runKernel(a.HZ,n,i)}})},7486:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({reverse_:function(e,t){const n={x:(0,s._1)(e,"x","reverse")},i={dims:t};return r.BV.runKernel(a.mK,n,i)}})},7809:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({round_:function(e){const t={x:(0,s._1)(e,"x","round")};return r.BV.runKernel(a.e0,t)}})},2634:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({rsqrt_:function(e){const t={x:(0,s._1)(e,"x","rsqrt")};return r.BV.runKernel(a.bV,t)}})},9494:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(569),a=n(7852);function s(e,t){if(((0,r.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,r.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,a.H)(e,[],[],t)}},3100:(e,t,n)=>{"use strict";n.d(t,{s:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(2668),o=n(3028);const u=(0,i.op)({scatterND_:function(e,t,n){const i=(0,s._1)(e,"indices","scatterND","int32"),u=(0,s._1)(t,"updates","scatterND");o.validateInput(u,i,n);const l={indices:i,updates:u},c={shape:n};return r.BV.runKernel(a.xQ,l,c)}})},3028:(e,t,n)=>{"use strict";n.r(t),n.d(t,{validateUpdateShape:()=>a,validateInput:()=>s,calculateShapes:()=>i});var r=n(569);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let e=s;e<i;++e)o*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:(0,r.NA)(t.shape)/u,sliceSize:o,strides:[...(0,r.e3)(n.slice(0,s)),1],outputSize:(0,r.NA)(n)}}},5503:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({selu_:function(e){const t={x:(0,s._1)(e,"x","selu")};return r.BV.runKernel(a.oF,t)}})},3179:(e,t,n)=>{"use strict";n.d(t,{y:()=>r,$:()=>a});const r=1.7580993408473768,a=1.0507009873554805},8678:(e,t,n)=>{"use strict";n.d(t,{U:()=>l});var r=n(3740),a=n(569),s=n(4794),i=n(4718),o=n(2668),u=n(4968);const l=(0,o.op)({separableConv2d_:function(e,t,n,o,l,c=[1,1],p="NHWC"){const h=(0,r._1)(e,"x","separableConv2d"),d=(0,r._1)(t,"depthwiseFilter","separableConv2d"),f=(0,r._1)(n,"pointwiseFilter","separableConv2d");let m=h,g=!1;if(3===h.rank&&(g=!0,m=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===p)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),a.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),a.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const y=d.shape[2],b=d.shape[3];a.hu(f.shape[2]===y*b,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${y*b}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,l,p,c),w=(0,s.T)(x,f,1,"valid",p);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},6567:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(4077),a=n(3740),s=n(569);const i=async function(e,t){const n=(0,a._1)(e,"x","setdiff1d"),i=(0,a._1)(t,"y","setdiff1d");s.hu(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.hu(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),l=new Set(u);let c=0;for(let e=0;e<o.length;e++)l.has(o[e])||c++;const p=new r.YD([c],n.dtype),h=new r.YD([c],"int32");for(let e=0,t=0;e<o.length;e++)l.has(o[e])||(p.values[t]=o[e],h.values[t]=e,t++);return[p.toTensor(),h.toTensor()]}},625:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sigmoid_:function(e){const t={x:(0,s._1)(e,"x","sigmoid")};return r.BV.runKernel(a.a5,t)}})},4434:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sign_:function(e){const t={x:(0,s._1)(e,"x","sign")};return r.BV.runKernel(a.i5,t)}})},9331:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sin_:function(e){const t={x:(0,s._1)(e,"x","sin")};return r.BV.runKernel(a.RQ,t)}})},3254:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sinh_:function(e){const t={x:(0,s._1)(e,"x","sinh")};return r.BV.runKernel(a.w3,t)}})},2676:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({slice_:function(e,t,n){const i=(0,s._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.BV.runKernel(a.p2,o,u)}})},7650:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>a,maskToAxes:()=>s,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>p,stopIndicesWithElidedDims:()=>h,stridesForAxis:()=>d,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>y,parseSliceParams:()=>b,sliceInfo:()=>x});var r=n(569);function a(e,t,n){const a=e.shape.length;r.hu(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.hu(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.hu(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function l(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function c(e,t,n,r,a,s,i,u,l){const c=e.length;let g=new Array(c),y=new Array(c),b=new Array(c);if(t.length&&n>0){const l=t[0],c=n+1;g=p(i,l,c,r,e),y=h(u,l,c,a,e),b=o(s,l,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,r,s,e,t,l),y[t]=m(u,a,s,e,t,l),b[t]=d(s,t,l);return{begin:g,end:y,strides:b}}function p(e,t,n,r,a){const s=[...a],i=l(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=u(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function h(e,t,n,a,s){const i=[...s],o=l(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.uZ(0,i[e],s[e])}return i}function d(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=r.uZ(0,o,l-1),o}function m(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=a[s];return o<0&&(o+=l),o=u>0?r.uZ(0,o,l):r.uZ(-1,o,l-1),o}function g(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function y(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function b(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function x(e,t,n,r,a,o,u,l,p){let h=t.slice(),d=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==l)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==p)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const g=e.length-h.length,y=s(l),b=e.slice();y.forEach((e=>{h[e]=0,d[e]=1,b.splice(e,0,1)}));const{begin:x,end:w,strides:v}=c(b,m,g,h,d,f,a,o,u);h=x,d=w,f=v;const k=s(p);k.forEach((e=>{d[e]=h[e]+1,f[e]=1}));const I=i(h,d,f),S=I.filter(((e,t)=>-1===k.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:h,$end:d,$strides:f,size:I,newShape:b,outShape:S}}},682:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softmax_:function(e,t=-1){const n=(0,s._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.BV.runKernel(a.Gc,i,o)}})},3694:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({softplus_:function(e){const t={x:(0,s._1)(e,"x","softplus")};return r.BV.runKernel(a.MR,t)}})},7918:(e,t,n)=>{"use strict";n.d(t,{f:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({spaceToBatchND_:function(e,t,n){const o=(0,s._1)(e,"x","spaceToBatchND");i.hu(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.hu(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},l={blockShape:t,paddings:n};return r.BV.runKernel(a.TQ,u,l)}})},9758:(e,t,n)=>{"use strict";n.d(t,{e:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sparseToDense_:function(e,t,n,i=0){const o=(0,s._1)(e,"sparseIndices","sparseToDense","int32"),u=(0,s._1)(t,"sparseValues","sparseToDense"),l=(0,s._1)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,l);const c={sparseIndices:o,sparseValues:u,defaultValue:l},p={outputShape:n};return r.BV.runKernel(a.D2,c,p)}})},7020:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({fft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.vw,t)}})},8447:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var r=n(7097),a=n(9121),s=n(569);const i=(0,n(2668).op)({ifft_:function(e){(0,s.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.BV.runKernel(a.Qg,t)}})},4415:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var r=n(1661),a=n(6884),s=n(4386),i=n(4841),o=n(2668),u=n(766),l=n(4968),c=n(7486),p=n(9494),h=n(2676),d=n(8447);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=(0,l.X)(e,[n,t]);o=(0,d.S)(r)}else{const f=[n,2*(t-1)],m=(0,l.X)((0,u.k)(e),[n,t]),g=(0,l.X)((0,s.a)(e),[n,t]),y=(0,c.G)((0,h.t)(m,[0,1],[n,t-2]),1),b=(0,i.d)((0,c.G)((0,h.t)(g,[0,1],[n,t-2]),1),(0,p.i)(-1)),x=(0,a.z)([m,y],1),w=(0,a.z)([g,b],1),v=(0,l.X)((0,r.P)(x,w),[f[0],f[1]]);o=(0,d.S)(v)}if(o=(0,u.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,l.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},3710:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var r=n(569),a=n(1661),s=n(6884),i=n(4386),o=n(2668),u=n(766),l=n(4968),c=n(2676),p=n(8644),h=n(9640),d=n(6577),f=n(7020);const m=(0,o.op)({rfft_:function(e,t){(0,r.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=(0,c.t)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=(0,s.z)([e,(0,h.l)(r)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),y=(0,l.X)((0,a.P)(m,g),[o,n]),b=(0,f.k)(y),x=Math.floor(n/2)+1,w=(0,u.k)(b),v=(0,i.a)(b),k=(0,p.V)(w,[x,n-x],w.shape.length-1),I=(0,p.V)(v,[x,n-x],v.shape.length-1),S=m.shape.slice();return S[m.shape.length-1]=x,(0,l.X)((0,a.P)(k[0],I[0]),S)}})},8644:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({split_:function(e,t,n=0){const i={x:(0,s._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.BV.runKernel(a.L8,i,o)}})},3261:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({sqrt_:function(e){const t={x:(0,s._1)(e,"x","sqrt")};return r.BV.runKernel(a.FK,t)}})},248:(e,t,n)=>{"use strict";n.d(t,{h:()=>s});var r=n(7097),a=n(3740);const s=(0,n(2668).op)({square_:function(e){const t=(0,a._1)(e,"x","square");return r.BV.runKernel("Square",{x:t},{})}})},5265:(e,t,n)=>{"use strict";n.d(t,{$:()=>u});var r=n(7097),a=n(9121),s=n(747),i=n(3740),o=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),u=(0,i._1)(t,"b","squaredDifference");[n,u]=(0,s.makeTypesMatch)(n,u),(0,o.$N)(n.shape,u.shape);const l={a:n,b:u};return r.BV.runKernel(a._t,l,{})}})},9590:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var r=n(3740),a=n(569),s=n(2668),i=n(4968);const o=(0,s.op)({squeeze_:function(e,t){const n=(0,r._1)(e,"x","squeeze");return(0,i.X)(n,(0,a.bp)(n.shape,t).newShape)}})},2991:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({stack_:function(e,t=0){const n=(0,s.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.BV.runKernel(a.Qi,o,u)}})},1901:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({step_:function(e,t=0){const n={x:(0,s._1)(e,"x","step")},i={alpha:t};return r.BV.runKernel(a.h8,n,i)}})},5158:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({stridedSlice_:function(e,t,n,i,o=0,u=0,l=0,c=0,p=0){const h={x:(0,s._1)(e,"x","stridedSlice","string_or_numeric")},d={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:l,newAxisMask:c,shrinkAxisMask:p};return r.BV.runKernel(a.m2,h,d)}})},827:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var r=n(7097),a=n(9121),s=n(747),i=n(3740);const o=(0,n(2668).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.BV.runKernel(a.Tr,u)}})},5475:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(2271);const o=(0,n(2668).op)({sum_:function(e,t=null,n=!1){let o=(0,s._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const u={x:o},l={axis:t,keepDims:n};return r.BV.runKernel(a.GB,u,l)}})},1173:(e,t,n)=>{"use strict";n.d(t,{O:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tan_:function(e){const t={x:(0,s._1)(e,"x","tan")};return r.BV.runKernel(a.sE,t)}})},1869:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({tanh_:function(e){const t={x:(0,s._1)(e,"x","tanh")};return r.BV.runKernel(a.MI,t)}})},701:(e,t,n)=>{"use strict";n.d(t,{X:()=>s});var r=n(3740),a=n(7852);function s(e,t,n){const s=(0,r.C)(e,n);return(0,a.H)(e,t,s,n)}},6092:(e,t,n)=>{"use strict";n.d(t,{R:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t){(0,a.Cq)(e);const n=(0,r.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,s.H)(e,null,n,t)}},9906:(e,t,n)=>{"use strict";n.d(t,{w:()=>i});var r=n(3740),a=n(569),s=n(7852);function i(e,t,n){if((0,a.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=(0,r.C)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,s.H)(e,t,i,n)}},7852:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var r=n(7097),a=n(569),s=n(9122);function i(e,t,n,i){if(null==i&&(i=(0,a.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,a.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,a.Mu)(t);const e=(0,a.NA)(t),r=(0,a.NA)(n);(0,a.hu)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==(0,a.NA)(t.slice(e));(0,a.hu)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,a.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,s.toTypedArray)(e,i):(0,a.xH)(e,[],!0),r.BV.makeTensor(e,t,i)}},7501:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({tile_:function(e,t){const n=(0,s._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.BV.runKernel(a.n9,o,u)}})},3243:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({topk_:function(e,t=1,n=!0){const i=(0,s._1)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},l={k:t,sorted:n},[c,p]=r.BV.runKernel(a.cW,u,l);return{values:c,indices:p}}})},9065:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({transpose_:function(e,t){const n=(0,s._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return r.BV.runKernel(a.G3,o,u)}})},3596:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var r=n(2657),a=n(2668),s=n(6845);const i=(0,a.op)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.Yi(t,n,a,!0,i),u=(0,r.f)(e,a);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},9608:(e,t,n)=>{"use strict";n.d(t,{T:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unique_:function(e,t=0){const n=(0,s._1)(e,"x","unique","string_or_numeric");(0,i.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[l,c]=r.BV.runKernel(a.kp,o,u);return{values:l,indices:c}}})},8749:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unsortedSegmentSum_:function(e,t,n){const o=(0,s._1)(e,"x","unsortedSegmentSum"),u=(0,s._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,i.hu)((0,i.GN)(n),(()=>"numSegments must be of dtype int"));const l={x:o,segmentIds:u},c={numSegments:n};return r.BV.runKernel(a.Qv,l,c)}})},4136:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var r=n(7097),a=n(9121),s=n(3740),i=n(569);const o=(0,n(2668).op)({unstack_:function(e,t=0){const n=(0,s._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.BV.runKernel(a.To,o,u)}})},5912:(e,t,n)=>{"use strict";n.d(t,{a:()=>u});var r=n(7097),a=n(9121),s=n(3740),i=n(8247),o=n(2200);const u=(0,n(2668).op)({where_:function(e,t,n){const u=(0,s._1)(t,"a","where"),l=(0,s._1)(n,"b","where"),c=(0,s._1)(e,"condition","where","bool"),p=(0,o.$N)((0,o.$N)(c.shape,u.shape),l.shape),h={condition:(0,i.U)(c,p),t:(0,i.U)(u,p),e:(0,i.U)(l,p)};return r.BV.runKernel(a.Ph,h)}})},6380:(e,t,n)=>{"use strict";n.d(t,{i:()=>s});var r=n(8333),a=n(3740);const s=async function(e){const t=(0,a._1)(e,"condition","whereAsync","bool"),n=await t.data(),s=(0,r.Z)(t.shape,n);return e!==t&&t.dispose(),s}},9640:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var r=n(7097),a=n(569),s=n(1661);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,s.P)(t,n)}const n=(0,a.wT)((0,a.NA)(e),t);return r.BV.makeTensor(n,e,t)}},6577:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var r=n(7097),a=n(9121),s=n(3740);const i=(0,n(2668).op)({zerosLike_:function(e){const t={x:(0,s._1)(e,"x","zerosLike")};return r.BV.runKernel(a.Ru,t)}})},4077:(e,t,n)=>{"use strict";n.d(t,{es:()=>b,YD:()=>p,_w:()=>w,t3:()=>x,FZ:()=>y,Vp:()=>g,Vi:()=>m});var r=n(5938),a=n(569);function s(e,t,n,r){const s=(0,a.e3)(t),o=function(e,t,n,r){const s=(0,a.NA)(t),o=r[r.length-1],u=new Array(o).fill(0),c=t.length,p="complex64"===n?l(e):e;if(c>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(p[t+e],0,n).length)}return u}(e,t,n,s),c=t.length,p=u(e,t,n,s,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${c}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(p.map((e=>"    "+e)).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,a.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,a.oj)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const c="complex64"===n?2:1,p=t[0],h=t.length;if(0===h)return"complex64"===n?[i(l(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===h){if(p>20){const t=3*c;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((p-3)*c,p*c));return"complex64"===n&&(r=l(r),s=l(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[p-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?l(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const d=t.slice(1),f=r.slice(1),m=r[0]*c,g=[];if(p>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,!1))}g.push("...");for(let t=p-3;t<p;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===p-1))}}else for(let t=0;t<p;t++){const r=t*m,s=r+m;g.push(...u(e.slice(r,s),d,n,f,a,t===p-1))}const y=2===h?",":"";g[0]="["+g[0]+y;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+y;let b=",\n";for(let e=2;e<h;e++)b+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(s?"":b),g}function l(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(9122);class p{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.NA(e),null!=n){const e=n.length;a.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.rQ(t,this.size),this.strides=(0,a.e3)(e)}set(e,...t){0===t.length&&(t=[0]),a.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,d=null,f=null;function m(e){h=e}function g(e){d=e}function y(e){f=e}class b{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.NA(e),this.strides=(0,a.e3)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,a.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,a.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function x(){return(0,r.R)("Tensor",(()=>b))}Object.defineProperty(b,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class w extends b{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof b&&null!=e.assign&&e.assign instanceof Function})},747:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>u,getTensorsInContainer:()=>l});var r=n(4077),a=n(1221),s=n(569);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,a.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,s.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function l(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof r.es)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),c(r,t,n))}}},3740:(e,t,n)=>{"use strict";n.d(t,{C:()=>u,_1:()=>p,sI:()=>h});var r=n(7097),a=n(2885),s=n(4077),i=n(569),o=n(9122);function u(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&(0,a.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&l(e,r,[]),r}function l(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)l(e[t],r,n.concat(t))}function c(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function p(e,t,n,a="numeric"){if(e instanceof s.es)return c(a,e.dtype,t,n),e;let l=(0,i.D2)(e);if("string"!==l&&["bool","int32","float32"].indexOf(a)>=0&&(l=a),c(a,l,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const p=u(e,l);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const h="string"!==l?(0,o.toTypedArray)(e,l):(0,i.xH)(e,[],!0);return r.BV.makeTensor(h,p,l)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>p(e,`${t}[${a}]`,n,r)))}},1221:(e,t,n)=>{"use strict";var r,a,s,i,o;n.d(t,{yw:()=>r,x8:()=>l,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function l(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function c(e){return l(e,"int32")}},9122:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>a.cO,assert:()=>a.hu,assertNonNegativeIntegerDimensions:()=>a.Mu,assertNonNull:()=>a.Cq,assertShapesMatch:()=>a.k5,bytesFromStringArray:()=>a.Ub,bytesPerElement:()=>a.bT,checkConversionForErrors:()=>a.D5,clamp:()=>a.uZ,computeStrides:()=>a.e3,createScalarValue:()=>x,createShuffledIndices:()=>a.U$,decodeString:()=>S,distSquared:()=>a.E7,encodeString:()=>I,fetch:()=>k,fingerPrint64:()=>b,flatten:()=>a.xH,getArrayFromDType:()=>a.rQ,getTypedArrayFromDType:()=>a.WP,hasEncodingLoss:()=>a.QB,hexToLong:()=>o,indexToLoc:()=>a.NE,inferDtype:()=>a.D2,inferFromImplicitShape:()=>a.JZ,isBoolean:()=>a.jn,isFunction:()=>a.mf,isInt:()=>a.GN,isNumber:()=>a.hj,isPromise:()=>a.tI,isScalarShape:()=>a.N9,isString:()=>a.HD,isTypedArray:()=>a.fU,isValidDtype:()=>a.LP,locToIndex:()=>a.qy,makeOnesTypedArray:()=>a.p8,makeZerosNestedTypedArray:()=>a.l6,makeZerosTypedArray:()=>a.wT,nearestDivisor:()=>a.jP,nearestLargerEven:()=>a.nY,now:()=>v,parseAxisParam:()=>a.EC,randUniform:()=>a.bj,repeatedTry:()=>a.WD,rightPad:()=>a.oj,shuffle:()=>a.TV,shuffleCombo:()=>a.d7,sizeFromShape:()=>a.NA,sizeToSquarishShape:()=>a.YP,squeezeShape:()=>a.bp,sum:()=>a.Sm,swap:()=>a.LF,tanh:()=>a.AE,toNestedArray:()=>a.GX,toTypedArray:()=>w});var r=n(2885),a=n(569),s=n(3720);const i=n.n(s)()||s;function o(e){return i.fromString(e,!0,16)}const u=o("c3a5c85c97cb3127"),l=o("b492b66fbe98f273"),c=o("9ae16a3b2f90404f");function p(e){return e.xor(e.shru(47))}function h(e,t,n){const r=e.slice(t,t+n);return i.fromBytes(Array.from(r),!0,!0)}function d(e,t){return h(e,t,8)}function f(e,t){return h(e,t,4)}function m(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function g(e,t,n=o("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function y(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=m(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(m(a,44)),[a.add(r),s.add(i)]}(d(e,t),d(e,t+8),d(e,t+16),d(e,t+24),n,r)}function b(e,t=e.length){const n=i.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=c.add(2*t),r=d(e,0).add(c),a=d(e,t-8);return g(m(a,37).mul(n).add(r),m(r,25).add(a).mul(n),n)}if(t>=4){const n=c.add(2*t);return g(f(e,0).shl(3).add(t),f(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return p(c.mul(n).xor(u.mul(r))).mul(c)}return c}(e,t):function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(l),a=d(e,8),s=d(e,t-8).mul(n),i=d(e,t-16).mul(c);return g(m(r.add(a),43).add(m(s,30)).add(i),r.add(m(a.add(c),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=c.add(2*t),r=d(e,0).mul(c),a=d(e,8),s=d(e,t-8).mul(n),i=d(e,t-16).mul(c),o=m(r.add(a),43).add(m(s,30)).add(i),u=g(o,r.add(m(a.add(c),18)).add(s),n),l=d(e,16).mul(n),p=d(e,24),h=o.add(d(e,t-32)).mul(n),f=u.add(d(e,t-24)).mul(n);return g(m(l.add(p),43).add(m(h,30)).add(f),l.add(m(p.add(r),18)).add(h),n)}(e,t);let r=n,a=n.mul(l).add(113),s=p(a.mul(c).add(113)).mul(c),o=[i.UZERO,i.UZERO],h=[i.UZERO,i.UZERO];r=r.mul(c).add(d(e,0));let b=0;const x=64*(t-1>>6),w=x+(t-1&63)-63;do{r=m(r.add(a).add(o[0]).add(d(e,b+8)),37).mul(l),a=m(a.add(o[1]).add(d(e,b+48)),42).mul(l),r=r.xor(h[1]),a=a.add(o[0]).add(d(e,b+40)),s=m(s.add(h[0]),33).mul(l),o=y(e,b,o[1].mul(l),r.add(h[0])),h=y(e,b+32,s.add(h[1]),a.add(d(e,b+16))),[s,r]=[r,s],b+=64}while(b!==x);const v=l.add(s.and(255).shl(1));return b=w,h[0]=h[0].add(t-1&63),o[0]=o[0].add(h[0]),h[0]=h[0].add(o[0]),r=m(r.add(a).add(o[0]).add(d(e,b+8)),37).mul(v),a=m(a.add(o[1]).add(d(e,b+48)),42).mul(v),r=r.xor(h[1].mul(9)),a=a.add(o[0].mul(9).add(d(e,b+40))),s=m(s.add(h[0]),33).mul(v),o=y(e,b,o[1].mul(v),r.add(h[0])),h=y(e,b+32,s.add(h[1]),a.add(d(e,b+16))),[s,r]=[r,s],g(g(o[0],h[0],v).add(p(a).mul(u)).add(s),g(o[1],h[1],v).add(r),v)}function x(e,t){return"string"===t?I(e):w([e],t)}function w(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.xH(e)),(0,r.OB)().getBool("DEBUG")&&a.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function v(){return(0,r.OB)().platform.now()}function k(e,t){return(0,r.OB)().platform.fetch(e,t)}function I(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.encode(e,t)}function S(e,t="utf-8"){return t=t||"utf-8",(0,r.OB)().platform.decode(e,t)}},569:(e,t,n)=>{"use strict";function r(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,o(e,t,n)}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,o(e,n,r),o(t,n,r)}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function u(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function p(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){p(y(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function d(e){p(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function f(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||D(e)&&!n)for(let r=0;r<e.length;++r)f(e[r],t,n);else t.push(e);return t}function m(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function g(e){return 0===e.length}function y(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function x(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function w(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function v(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function I(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function S(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function N(e,t){const n=t.length;return p((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),p(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function T(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:N(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function C(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function $(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function A(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function E(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function _(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function D(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function R(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function O(e){return"string"==typeof e||e instanceof String}function M(e){return"boolean"==typeof e}function z(e){return"number"==typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":z(e)?"float32":O(e)?"string":M(e)?"bool":"float32"}function L(e){return!!(e&&e.constructor&&e.call&&e.apply)}function W(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function P(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<s;t++)a[t]=P(e+t*o,i,n,r)}return a}function V(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P(0,e,t,n)}function H(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function j(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return V(e,new Float32Array(n));if("int32"===t)return V(e,new Int32Array(n));if("bool"===t)return V(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function q(e){e.forEach((t=>{p(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function Q(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>r,d7:()=>a,uZ:()=>s,nY:()=>i,LF:()=>o,Sm:()=>u,bj:()=>l,E7:()=>c,hu:()=>p,k5:()=>h,Cq:()=>d,xH:()=>f,NA:()=>m,N9:()=>g,cO:()=>y,GN:()=>b,AE:()=>x,YP:()=>w,U$:()=>v,oj:()=>k,WD:()=>I,JZ:()=>S,EC:()=>N,bp:()=>T,WP:()=>C,rQ:()=>$,D5:()=>A,LP:()=>E,QB:()=>_,fU:()=>D,bT:()=>R,Ub:()=>F,HD:()=>O,jn:()=>M,hj:()=>z,D2:()=>B,mf:()=>L,jP:()=>W,e3:()=>U,GX:()=>V,p8:()=>H,wT:()=>G,l6:()=>j,Mu:()=>q,qy:()=>X,NE:()=>K,tI:()=>Q})},3129:(e,t,n)=>{var r=n(626),a=n(477),s=n(2868),i=n(8197),o=n(1954),u=n(2408),l=n(1662);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},626:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},2408:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},477:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},1954:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},8197:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},2868:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1662:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(5778)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},4490:(e,t,n)=>{"use strict";n.r(t),n.d(t,{Abs:()=>A.SYM,Acos:()=>A.VGw,Acosh:()=>A.SpW,AdadeltaOptimizer:()=>A.zJI,AdagradOptimizer:()=>A.HeW,AdamOptimizer:()=>A.a4z,AdamaxOptimizer:()=>A.DBS,Add:()=>A.mm_,AddN:()=>A.Xze,All:()=>A.oT6,Any:()=>A.IKK,ArgMax:()=>A.sJF,ArgMin:()=>A.aJk,Asin:()=>A.M2y,Asinh:()=>A.qw7,Atan:()=>A.jMg,Atan2:()=>A.QCc,Atanh:()=>A.Oyi,AvgPool:()=>A.JhU,AvgPool3D:()=>A._k9,AvgPool3DGrad:()=>A.IMb,AvgPoolGrad:()=>A.ROF,BatchMatMul:()=>A.XLW,BatchToSpaceND:()=>A.zws,Bincount:()=>A.zvY,BroadcastTo:()=>A.Ly9,Callback:()=>Hp,CallbackList:()=>Vi,Cast:()=>A.RFZ,Ceil:()=>A.gJX,ClipByValue:()=>A.xnO,Complex:()=>A.Zz9,ComplexAbs:()=>A.yj2,Concat:()=>A.Eh3,Conv2D:()=>A.mhS,Conv2DBackpropFilter:()=>A.wUP,Conv2DBackpropInput:()=>A.wm,Conv3D:()=>A.x12,Conv3DBackpropFilterV2:()=>A.o2y,Conv3DBackpropInputV2:()=>A.ik2,Cos:()=>A.mc4,Cosh:()=>A.TR1,CropAndResize:()=>A.VcC,Cumsum:()=>A.iHb,CustomCallback:()=>ji,DataStorage:()=>A.JLz,DenseBincount:()=>A.QRR,DepthToSpace:()=>A.T0n,DepthwiseConv2dNative:()=>A.cie,DepthwiseConv2dNativeBackpropFilter:()=>A.sL$,DepthwiseConv2dNativeBackpropInput:()=>A.y7R,Diag:()=>A.$w,Dilation2D:()=>A.p4S,Dilation2DBackpropFilter:()=>A.Vn9,Dilation2DBackpropInput:()=>A.ekb,ENV:()=>A.ViN,EarlyStopping:()=>qp,Einsum:()=>A.$g6,Elu:()=>A.SX0,EluGrad:()=>A.HEU,Environment:()=>A.qAh,Equal:()=>A.hdR,Erf:()=>A.Omj,Exp:()=>A.NEP,ExpandDims:()=>A.YFo,Expm1:()=>A.Y0y,FFT:()=>A.vwp,Fill:()=>A.deh,FlipLeftRight:()=>A.Uyb,Floor:()=>A.OR,FloorDiv:()=>A.jeX,FromPixels:()=>A.eBW,FusedBatchNorm:()=>A.sHE,FusedConv2D:()=>A._V0,FusedDepthwiseConv2D:()=>A.luS,GatherNd:()=>A.q1x,GatherV2:()=>A.qi_,GraphModel:()=>Fd,Greater:()=>A.iZT,GreaterEqual:()=>A.Acj,History:()=>Gi,IFFT:()=>A.Qg5,Identity:()=>A.iJz,Imag:()=>A.J_u,InputSpec:()=>Ei,IsFinite:()=>A.avt,IsInf:()=>A.iWB,IsNan:()=>A.r7n,KernelBackend:()=>A.Zuw,LRN:()=>A.eZ0,LRNGrad:()=>A.Hhh,LayerVariable:()=>Ci,LayersModel:()=>Jo,LeakyRelu:()=>A.J$2,Less:()=>A.vtC,LessEqual:()=>A.CAk,LinSpace:()=>A.e7N,Log:()=>A.ZbH,Log1p:()=>A.kU,LogSoftmax:()=>A.qCd,LogicalAnd:()=>A.PYm,LogicalNot:()=>A.VfG,LogicalOr:()=>A.MZg,Max:()=>A.YoZ,MaxPool:()=>A.mTV,MaxPool3D:()=>A.OAf,MaxPool3DGrad:()=>A.OU7,MaxPoolGrad:()=>A.OV7,MaxPoolWithArgmax:()=>A.vFR,Maximum:()=>A.BMI,Mean:()=>A.q2K,Min:()=>A.c17,Minimum:()=>A.q8u,MirrorPad:()=>A.jQs,Mod:()=>A.Vbg,MomentumOptimizer:()=>A.rIn,Multinomial:()=>A.NZg,Multiply:()=>A.wYn,Neg:()=>A.kuV,NonMaxSuppressionV3:()=>A.uv1,NonMaxSuppressionV4:()=>A.cye,NonMaxSuppressionV5:()=>A.W0H,NotEqual:()=>A.yQU,OP_SCOPE_SUFFIX:()=>A.zvA,OneHot:()=>A.we_,OnesLike:()=>A.qWM,Optimizer:()=>A.gaJ,Pack:()=>A.QiL,PadV2:()=>A.lyA,Pool:()=>A.Kgp,Pow:()=>A.pe_,Prelu:()=>A.o0g,Prod:()=>A.DlI,RMSPropOptimizer:()=>A.gVI,RNN:()=>al,Range:()=>A.e6w,Rank:()=>A.yw1,Real:()=>A.xJR,RealDiv:()=>A.oHH,Reciprocal:()=>A.$HU,Reduction:()=>A.IH3,Relu:()=>A.qkr,Relu6:()=>A.SbG,Reshape:()=>A.HZH,ResizeBilinear:()=>A._Yw,ResizeBilinearGrad:()=>A.zbQ,ResizeNearestNeighbor:()=>A.dpD,ResizeNearestNeighborGrad:()=>A.Hmb,Reverse:()=>A.mKl,RotateWithOffset:()=>A.b9H,Round:()=>A.e07,Rsqrt:()=>A.bV0,SGDOptimizer:()=>A.DYp,ScatterNd:()=>A.xQA,Select:()=>A.PhF,Selu:()=>A.oFR,Sequential:()=>tu,Sigmoid:()=>A.a5O,Sign:()=>A.i5y,Sin:()=>A.RQH,Sinh:()=>A.wYB,Slice:()=>A.p2w,Softmax:()=>A.Gcp,Softplus:()=>A.MRv,SpaceToBatchND:()=>A.TQc,SparseFillEmptyRows:()=>A.O3z,SparseReshape:()=>A.nhH,SparseSegmentMean:()=>A.w3H,SparseSegmentSum:()=>A.ZjV,SparseToDense:()=>A.D2d,SplitV:()=>A.L8s,Sqrt:()=>A.FKq,Square:()=>A.bK0,SquaredDifference:()=>A._tC,Step:()=>A.h8e,StridedSlice:()=>A.jQk,StringNGrams:()=>A._JP,StringSplit:()=>A.s1s,StringToHashBucketFast:()=>A.XkS,Sub:()=>A.Tr8,Sum:()=>A.GBy,SymbolicTensor:()=>_i,Tan:()=>A.sEM,Tanh:()=>A.MIZ,Tensor:()=>A.esB,TensorBuffer:()=>A.YDk,Tile:()=>A.n9L,TopK:()=>A.cWu,Transform:()=>A.wx7,Transpose:()=>A.G3Y,Unique:()=>A.kpP,Unpack:()=>A.ToN,UnsortedSegmentSum:()=>A.Qvg,Variable:()=>A._wD,ZerosLike:()=>A.RuY,_FusedMatMul:()=>A.usg,abs:()=>A.WnP,acos:()=>A.Khb,acosh:()=>A.__u,add:()=>A.IHx,addN:()=>A.QBD,all:()=>A.$6P,any:()=>A.YjB,argMax:()=>A.NqF,argMin:()=>A.vHJ,asin:()=>A.ZRM,asinh:()=>A.VfV,atan:()=>A.z4N,atan2:()=>A.fvJ,atanh:()=>A.C80,avgPool:()=>A.wS1,avgPool3d:()=>A.uR5,backend:()=>A.y3$,backend_util:()=>A.Wap,basicLSTMCell:()=>A.zEQ,batchNorm:()=>A.tgs,batchNorm2d:()=>A.Dxk,batchNorm3d:()=>A.JY5,batchNorm4d:()=>A.p3b,batchToSpaceND:()=>A.E4h,bincount:()=>A.yE8,booleanMaskAsync:()=>A.anm,broadcastTo:()=>A.UFq,browser:()=>A.Xhn,buffer:()=>A.f3b,callbacks:()=>Xp,cast:()=>A.pju,ceil:()=>A.mDi,clipByValue:()=>A.iUl,clone:()=>A.d9v,complex:()=>A.PYB,concat:()=>A.zoF,concat1d:()=>A.gME,concat2d:()=>A.Izb,concat3d:()=>A.MNy,concat4d:()=>A.ZaL,constraints:()=>r,conv1d:()=>A.PAt,conv2d:()=>A.Tek,conv2dTranspose:()=>A.bc,conv3d:()=>A.pdZ,conv3dTranspose:()=>A.$QV,copyRegisteredKernels:()=>A.T3b,cos:()=>A.mCk,cosh:()=>A.f9Y,cosineWindow:()=>A.mew,cumsum:()=>A.zbp,customGrad:()=>A.cbc,data:()=>$,denseBincount:()=>A.ppE,deprecationWarn:()=>A.MXe,depthToSpace:()=>A.nTT,depthwiseConv2d:()=>A.B10,deregisterOp:()=>eh,device_util:()=>A.C2$,diag:()=>A.Ka3,dilation2d:()=>A.WmZ,disableDeprecationWarnings:()=>A.cFr,dispose:()=>A.B90,disposeVariables:()=>A.N8o,div:()=>A.hiC,divNoNan:()=>A.NTj,dot:()=>A.AKD,dropout:()=>A.rvX,einsum:()=>A.WYO,elu:()=>A.pyx,enableDebugMode:()=>A.Ra$,enableProdMode:()=>A.G48,enclosingPowerOfTwo:()=>A.GRh,engine:()=>A.SRH,env:()=>A.OBj,equal:()=>A.DgJ,erf:()=>A.qNN,exp:()=>A.Qqt,expandDims:()=>A.dt4,expm1:()=>A.t$B,eye:()=>A.iyy,fft:()=>A.kp_,fill:()=>A.hlL,findBackend:()=>A.x3e,findBackendFactory:()=>A.zel,floor:()=>A.GWj,floorDiv:()=>A.qPi,fused:()=>A.imm,gather:()=>A.Iqj,gatherND:()=>A.dbB,gather_util:()=>A.DaI,getBackend:()=>A.N_N,getGradient:()=>A.ukX,getKernel:()=>A.pIF,getKernelsForBackend:()=>A.trD,grad:()=>A.UQy,grads:()=>A.tiA,greater:()=>A.pjt,greaterEqual:()=>A.brS,ifft:()=>A.Sxn,imag:()=>A.asL,image:()=>A.BHj,inTopKAsync:()=>A.V3u,initializers:()=>a,input:()=>su,io:()=>A.io,irfft:()=>A.wx0,isFinite:()=>A.xVT,isInf:()=>A.UWc,isNaN:()=>A.i2d,keep:()=>A.CnY,kernel_impls:()=>A.GDt,layers:()=>s,leakyRelu:()=>A.hi7,less:()=>A.d9m,lessEqual:()=>A.zN1,linalg:()=>A.$r2,linspace:()=>A.SX3,loadGraphModel:()=>Od,loadLayersModel:()=>au,localResponseNormalization:()=>A.G9k,log:()=>A.cM7,log1p:()=>A.Krr,logSigmoid:()=>A.e_t,logSoftmax:()=>A.CmS,logSumExp:()=>A.l_t,logicalAnd:()=>A.HvI,logicalNot:()=>A.hJK,logicalOr:()=>A.K5V,logicalXor:()=>A.egP,losses:()=>A.MB5,matMul:()=>A.OI3,math:()=>A.mAU,max:()=>A.Fp7,maxPool:()=>A._sB,maxPool3d:()=>A.YQQ,maxPoolWithArgmax:()=>A.Ip$,maximum:()=>A.gWQ,mean:()=>A.J69,memory:()=>A.sq6,meshgrid:()=>A.ry_,metrics:()=>i,min:()=>A.VV$,minimum:()=>A.LTh,mirrorPad:()=>A.VdP,mod:()=>A.wQq,model:()=>nu,models:()=>o,moments:()=>A.Gi7,movingAverage:()=>A.p_,mul:()=>A.dC7,multiRNNCell:()=>A.rq4,multinomial:()=>A.SJ_,neg:()=>A.W76,nextFrame:()=>A.glt,norm:()=>A.KOy,notEqual:()=>A.Quu,oneHot:()=>A.lfX,ones:()=>A.iUs,onesLike:()=>A.JpU,op:()=>A.op,outerProduct:()=>A.N2O,pad:()=>A.vku,pad1d:()=>A.pNR,pad2d:()=>A.koy,pad3d:()=>A.t1L,pad4d:()=>A.lGY,pool:()=>A.d_R,pow:()=>A.sQ3,prelu:()=>A.AL3,print:()=>A.S0v,prod:()=>A.WVs,profile:()=>A.N5s,rand:()=>A.TN_,randomGamma:()=>A.wzB,randomNormal:()=>A.nGf,randomUniform:()=>A.LGj,range:()=>A.w6H,ready:()=>A.Cd_,real:()=>A.kwC,reciprocal:()=>A.M25,registerBackend:()=>A.jqO,registerCallbackConstructor:()=>iu,registerGradient:()=>A.LiG,registerKernel:()=>A.wCN,registerOp:()=>Jp,regularizers:()=>u,relu:()=>A.UYe,relu6:()=>A.btT,removeBackend:()=>A.cjG,reshape:()=>A.XLQ,reverse:()=>A.GYS,reverse1d:()=>A.SDf,reverse2d:()=>A.diP,reverse3d:()=>A.sx7,reverse4d:()=>A.mG2,rfft:()=>A.QEs,round:()=>A.NMM,rsqrt:()=>A.bp0,scalar:()=>A.iD$,scatterND:()=>A.snQ,scatter_util:()=>A.yV1,selu:()=>A.U8D,separableConv2d:()=>A.U_I,sequential:()=>ru,serialization:()=>A.m7h,setBackend:()=>A.CQI,setPlatform:()=>A.VYu,setdiff1dAsync:()=>A.ODp,sigmoid:()=>A.XD2,sign:()=>A.Xxe,signal:()=>A.tdS,sin:()=>A.O$l,sinh:()=>A.R_K,slice:()=>A.tPi,slice1d:()=>A.jZU,slice2d:()=>A.SmN,slice3d:()=>A.CnO,slice4d:()=>A.p0P,slice_util:()=>A.kuN,softmax:()=>A.XAC,softplus:()=>A.Wvh,spaceToBatchND:()=>A.fBT,sparse:()=>A.rVs,sparseToDense:()=>A.ers,spectral:()=>A.uN7,split:()=>A.Vl2,sqrt:()=>A._b3,square:()=>A.h62,squaredDifference:()=>A.$i,squeeze:()=>A.L9e,stack:()=>A.knu,step:()=>A.Nbs,stridedSlice:()=>A.NXj,string:()=>A.Z_8,sub:()=>A.luU,sum:()=>A.Smz,sumOutType:()=>A.z4k,tan:()=>A.ORZ,tanh:()=>A.AEp,tensor:()=>A.XeE,tensor1d:()=>A.RRF,tensor2d:()=>A.odF,tensor3d:()=>A.wOQ,tensor4d:()=>A.yXz,tensor5d:()=>A.Bfx,tensor6d:()=>A.xZs,tensor_util:()=>A.piX,test_util:()=>A.p3L,tidy:()=>A.lub,tile:()=>A.Gg6,time:()=>A.XVJ,topk:()=>A.hg7,train:()=>A.p_j,transpose:()=>A.p4s,truncatedNormal:()=>A.Xu6,unique:()=>A.Two,unregisterGradient:()=>A.bt3,unregisterKernel:()=>A.nEe,unsortedSegmentSum:()=>A.pUJ,unstack:()=>A.HHK,upcastType:()=>A.x8V,util:()=>A.D5U,valueAndGrad:()=>A.h76,valueAndGrads:()=>A.fNQ,variable:()=>A.VD$,variableGrads:()=>A.pnJ,version:()=>Qx,version_converter:()=>Md,version_core:()=>A.jTM,version_layers:()=>Co,where:()=>A.arb,whereAsync:()=>A.itS,zeros:()=>A.lls,zerosLike:()=>A.P84});var r={};n.r(r),n.d(r,{maxNorm:()=>Qa,minMaxNorm:()=>Za,nonNeg:()=>Ja,unitNorm:()=>Ya});var a={};n.r(a),n.d(a,{constant:()=>si,glorotNormal:()=>hi,glorotUniform:()=>pi,heNormal:()=>di,heUniform:()=>fi,identity:()=>li,leCunNormal:()=>mi,leCunUniform:()=>gi,ones:()=>ai,orthogonal:()=>yi,randomNormal:()=>oi,randomUniform:()=>ii,truncatedNormal:()=>ui,varianceScaling:()=>ci,zeros:()=>ri});var s={};n.r(s),n.d(s,{Layer:()=>Oi,RNN:()=>al,RNNCell:()=>sl,activation:()=>Nc,add:()=>Fc,alphaDropout:()=>Sp,average:()=>Oc,averagePooling1d:()=>Hc,averagePooling2d:()=>qc,averagePooling3d:()=>Qc,avgPool1d:()=>Gc,avgPool2d:()=>Xc,avgPool3d:()=>Yc,avgPooling1d:()=>jc,avgPooling2d:()=>Kc,avgPooling3d:()=>Jc,batchNormalization:()=>Uc,bidirectional:()=>gp,concatenate:()=>Mc,conv1d:()=>gc,conv2d:()=>yc,conv2dTranspose:()=>bc,conv3d:()=>xc,conv3dTranspose:()=>wc,convLstm2d:()=>hp,convLstm2dCell:()=>dp,cropping2D:()=>kc,dense:()=>Tc,depthwiseConv2d:()=>Sc,dot:()=>Wc,dropout:()=>Cc,elu:()=>cc,embedding:()=>Rc,flatten:()=>Ac,gaussianDropout:()=>Ip,gaussianNoise:()=>kp,globalAveragePooling1d:()=>Zc,globalAveragePooling2d:()=>ep,globalMaxPool1d:()=>bp,globalMaxPool2d:()=>xp,globalMaxPooling1d:()=>tp,globalMaxPooling2d:()=>np,gru:()=>ip,gruCell:()=>op,input:()=>su,inputLayer:()=>lc,layerNormalization:()=>Pc,leakyReLU:()=>hc,lstm:()=>up,lstmCell:()=>lp,masking:()=>Np,maxPool1d:()=>wp,maxPool2d:()=>vp,maxPooling1d:()=>rp,maxPooling2d:()=>ap,maxPooling3d:()=>sp,maximum:()=>zc,minimum:()=>Bc,multiply:()=>Lc,permute:()=>Dc,prelu:()=>dc,reLU:()=>pc,repeatVector:()=>Ec,reshape:()=>_c,rnn:()=>fp,separableConv2d:()=>vc,simpleRNN:()=>cp,simpleRNNCell:()=>pp,softmax:()=>fc,spatialDropout1d:()=>$c,stackedRNNCells:()=>mp,thresholdedReLU:()=>mc,timeDistributed:()=>yp,upSampling2d:()=>Ic,zeroPadding2d:()=>Vc});var i={};n.r(i),n.d(i,{MAPE:()=>Mp,MSE:()=>Lp,binaryAccuracy:()=>Tp,binaryCrossentropy:()=>Cp,categoricalAccuracy:()=>Ap,categoricalCrossentropy:()=>Ep,cosineProximity:()=>Rp,mape:()=>zp,meanAbsoluteError:()=>Fp,meanAbsolutePercentageError:()=>Op,meanSquaredError:()=>Bp,mse:()=>Wp,precision:()=>_p,recall:()=>Dp,sparseCategoricalAccuracy:()=>$p});var o={};n.r(o),n.d(o,{modelFromJSON:()=>eu});var u={};n.r(u),n.d(u,{l1:()=>Pp,l1l2:()=>Up,l2:()=>Vp});var l={};n.r(l),n.d(l,{json:()=>uh});var c={};n.r(c),n.d(c,{json:()=>lh});var p={};n.r(p),n.d(p,{json:()=>ch});var h={};n.r(h),n.d(h,{json:()=>ph});var d={};n.r(d),n.d(d,{json:()=>hh});var f={};n.r(f),n.d(f,{json:()=>dh});var m={};n.r(m),n.d(m,{json:()=>fh});var g={};n.r(g),n.d(g,{json:()=>mh});var y={};n.r(y),n.d(y,{json:()=>gh});var b={};n.r(b),n.d(b,{json:()=>yh});var x={};n.r(x),n.d(x,{json:()=>bh});var w={};n.r(w),n.d(w,{json:()=>xh});var v={};n.r(v),n.d(v,{json:()=>wh});var k={};n.r(k),n.d(k,{json:()=>vh});var I={};n.r(I),n.d(I,{json:()=>kh});var S={};n.r(S),n.d(S,{json:()=>Ih});var N={};n.r(N),n.d(N,{json:()=>Sh});var T={};n.r(T),n.d(T,{json:()=>Nh});var C={};n.r(C),n.d(C,{json:()=>Th});var $={};n.r($),n.d($,{CSVDataset:()=>Tf,Dataset:()=>ff,FileDataSource:()=>Bf,TextLineDataset:()=>xf,URLDataSource:()=>Lf,array:()=>gf,csv:()=>Wf,func:()=>Uf,generator:()=>Pf,microphone:()=>Hf,version_data:()=>Gf,webcam:()=>Vf,zip:()=>yf});var A=n(8433),E=n(9121),_=n(2271),D=n(4841),R=n(1901);const F={kernelName:E.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,R.N)((0,_.p)(n,"float32"),-1))}}};var O=n(1274),M=n(7370),z=n(9494),B=n(3261),L=n(248),W=n(827);const U={kernelName:E.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,L.h)((0,_.p)(n,"float32")),r=(0,B._)((0,W.l)((0,z.i)(1),t));return(0,M.W)((0,O.h)(e,r))}}}},P={kernelName:E.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,B._)((0,W.l)((0,L.h)((0,_.p)(n,"float32")),1));return(0,O.h)(e,t)}}}};var V=n(2200),H=n(4968),G=n(5475);const j={kernelName:E.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=V.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=V.RR(n.shape,a);return r.length>0&&(t=(0,G.S)(t,r)),(0,H.X)(t,n.shape)},b:()=>{let t=e;const n=V.RR(r.shape,a);return n.length>0&&(t=(0,G.S)(t,n)),(0,H.X)(t,r.shape)}}}},q={kernelName:E.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var X=n(6577);const K={kernelName:E.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,X.P)(n)}}},Q={kernelName:E.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,X.P)(n)}}},Y={kernelName:E.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,B._)((0,W.l)((0,z.i)(1),(0,L.h)((0,_.p)(n,"float32")))))}}};var J=n(6407);const Z={kernelName:E.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,B._)((0,J.I)((0,z.i)(1),(0,L.h)((0,_.p)(n,"float32"))));return(0,O.h)(e,t)}}}},ee={kernelName:E.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,V.$N)(n.shape,r.shape);return{a:()=>{const t=(0,J.I)((0,L.h)(n),(0,L.h)(r));let s=(0,D.d)(e,(0,O.h)(r,t));const i=(0,V.RR)(n.shape,a);return i.length>0&&(s=(0,G.S)(s,i)),(0,H.X)(s,n.shape)},b:()=>{const t=(0,J.I)((0,L.h)(n),(0,L.h)(r));let s=(0,M.W)((0,D.d)(e,(0,O.h)(n,t)));const i=(0,V.RR)(r.shape,a);return i.length>0&&(s=(0,G.S)(s,i)),(0,H.X)(s,r.shape)}}}},te={kernelName:E.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,J.I)((0,L.h)((0,_.p)(n,"float32")),1))}}},ne={kernelName:E.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,W.l)((0,z.i)(1),(0,L.h)((0,_.p)(n,"float32"))))}}};var re=n(7097),ae=n(3740),se=n(569),ie=n(2668);const oe=(0,ie.op)({avgPool3dGrad_:function(e,t,n,r,a,s){const i=(0,ae._1)(e,"dy","avgPool3dGrad"),o=(0,ae._1)(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=(0,H.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=(0,H.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),se.hu(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),se.hu(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),null!=s&&se.hu(se.GN(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const p={dy:u,input:l},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},d=re.BV.runKernel(E.IM,p,h);return c?(0,H.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),ue={kernelName:E._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>oe(e,r,a,s,i,o)}}},le=(0,ie.op)({avgPoolGrad_:function(e,t,n,r,a){const s=(0,ae._1)(e,"dy","avgPoolGrad"),i=(0,ae._1)(t,"input","avgPoolGrad");se.hu(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=(0,H.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=(0,H.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),se.hu(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),se.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},p={filterSize:n,strides:r,pad:a},h=re.BV.runKernel(E.RO,c,p);return l?(0,H.X)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ce={kernelName:E.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>le(e,r,a,s,i)}}};var pe=n(8687);const he={kernelName:E.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>(0,pe.O)(e,a,!1,!1),b:()=>(0,pe.O)(e,r,!0,!1)}:s&&!i?{a:()=>(0,pe.O)(a,e,!1,!0),b:()=>(0,pe.O)(r,e,!1,!1)}:{a:()=>(0,pe.O)(a,e,!0,!0),b:()=>(0,pe.O)(e,r,!0,!0)}:{a:()=>(0,pe.O)(e,a,!1,!0),b:()=>(0,pe.O)(r,e,!0,!1)}}};var de=n(7918);const fe={kernelName:E.zw,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>(0,de.f)(e,r,a)}}},me={kernelName:E.Ly,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,G.S)(e,o,!0)}}},ge={kernelName:E.RF,gradFunc:e=>({x:()=>e.clone()})},ye={kernelName:E.gJ,gradFunc:e=>({x:()=>(0,X.P)(e)})};var be=n(7630),xe=n(624),we=n(2856),ve=n(5912);const ke={kernelName:E.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>(0,ve.a)((0,we.H)((0,be.b)(r,a),(0,xe.z)(r,s)),e,(0,X.P)(e))}}},Ie={kernelName:E.yj,inputsToSave:["x"],gradFunc:F.gradFunc};var Se=n(8644);const Ne={kernelName:E.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=(0,se.EC)(a,t[0].shape)[0],i=r.map((e=>e[s]));return(0,Se.V)(e,i,s).map((e=>()=>e))}};var Te=n(6013),Ce=n(9832),$e=n(2582);const Ae={kernelName:E.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return se.hu($e.I0(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>(0,Ce._)(r.shape,e,a,i,o,u),filter:()=>(0,Te.p)(r,e,a.shape,i,o,u)}}};var Ee=n(4794);const _e={kernelName:E.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>(0,Ee.T)(e,a,s,i,o,1,u),filter:()=>(0,Te.p)(e,r,a.shape,s,i,o,u)}}},De=(0,ie.op)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=(0,H.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,H.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),se.hu(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),se.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),se.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),se.hu(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),se.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return re.BV.runKernel(E.o2,o,u)}});var Re=n(7594);const Fe={kernelName:E.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;se.hu((0,$e.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>(0,Re._)(i.shape,e,o,a,s),filter:()=>De(i,e,o.shape,a,s)}}};var Oe=n(9331);const Me={kernelName:E.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)((0,M.W)((0,Oe.O)((0,_.p)(n,"float32"))),e)}}};var ze=n(3254);const Be={kernelName:E.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)((0,ze.R)((0,_.p)(n,"float32")),e)}}};var Le=n(3591),We=n(7405),Ue=n(9065);const Pe={kernelName:E.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=(0,Le.Q3)([a],r.rank);let n=(0,We.z)(e,a,s,!i);return null!=t&&(n=(0,Ue.p)(n,t)),n}}}};var Ve=n(8098),He=n(4375);const Ge={kernelName:E.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;se.hu($e.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return se.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),se.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),se.hu(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),se.hu($e.jT(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&se.hu(se.GN(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>(0,He.v)(u.shape,e,l,a,s,r,i),filter:()=>(0,Ve.z)(u,e,l.shape,a,s,r,i)}}},je={kernelName:E.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>re.BV.runKernel(E.ek,s,n),filter:()=>re.BV.runKernel(E.Vn,i,n)}}},qe={kernelName:E.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>re.BV.runKernel(E.HE,r)}}};var Xe=n(4842);const Ke={kernelName:E.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,D.d)((0,Xe.Q)((0,M.W)((0,L.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,D.d)(e,r)}}},Qe={kernelName:E.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,n)}}},Ye={kernelName:E.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,H.X)(e,n.shape)}}},Je={kernelName:E.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,Xe.Q)(n))}}},Ze={kernelName:E.OR,gradFunc:e=>({x:()=>(0,X.P)(e)})},et={kernelName:E.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,V.$N)(n.shape,r.shape);return{a:()=>{const t=(0,O.h)(e,(0,_.p)(r,"float32")),s=(0,V.RR)(n.shape,a);return s.length>0?(0,H.X)((0,G.S)(t,s),n.shape):t},b:()=>{let t=(0,D.d)(e,(0,_.p)(n,"float32"));const s=(0,V.RR)(r.shape,a);s.length>0&&(t=(0,H.X)((0,G.S)(t,s),r.shape));const i=(0,L.h)(r);return(0,M.W)((0,O.h)(t,(0,_.p)(i,"float32")))}}}};var tt=n(2634),nt=n(7501);const rt={kernelName:E.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?(0,z.i)(1):o,l=(0,V.RR)(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const p=(0,W.l)(a,s),h=(0,D.d)(e,u),d=(0,tt.b)((0,J.I)(i,(0,z.i)(r))),f=(0,D.d)((0,D.d)((0,D.d)(d,d),d),(0,z.i)(-.5));return{x:()=>1===s.rank?(0,H.X)((0,D.d)((0,D.d)(e,(0,nt.G)((0,H.X)(d,[1,1,1,s.shape[0]]),c)),u),a.shape):(0,H.X)((0,D.d)((0,D.d)(e,d),u),a.shape),mean:()=>{let e=(0,D.d)((0,D.d)(d,(0,z.i)(-1)),h);return 1===s.rank&&(e=(0,G.S)(e,l)),(0,H.X)(e,s.shape)},variance:()=>{let e=(0,D.d)((0,D.d)(f,p),h);return 1===s.rank&&(e=(0,G.S)(e,l)),(0,H.X)(e,s.shape)},scale:()=>{const t=(0,D.d)(p,d);let n=(0,D.d)(e,t);return 1===s.rank&&(n=(0,G.S)(n,l)),(0,H.X)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=(0,G.S)(t,l)),(0,H.X)(t,s.shape)}}}};var at=n(8749);const st={kernelName:E.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=(0,se.EC)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,p=it(0,u),h=it(u+1,u+1+c),d=ot([o,[n],l]),f=(0,H.X)(e,d),m=(0,H.X)(a,[n]),g=ot([[u],p,h]),y=(0,Ue.p)(f,g);let b=(0,at.p)(y,m,r.shape[i]);const x=(0,Le.LJ)(g);return b=(0,Ue.p)(b,x),b},indices:()=>a}}};function it(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ot(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const ut={kernelName:E.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,X.P)(n),b:()=>(0,X.P)(r)}}},lt={kernelName:E.iJ,gradFunc:e=>({x:()=>(0,_.p)(e,"float32")})},ct={kernelName:E.av,gradFunc:e=>({x:()=>(0,X.P)(e)})},pt={kernelName:E.iW,gradFunc:e=>({x:()=>(0,X.P)(e)})},ht={kernelName:E.r7,gradFunc:e=>({x:()=>(0,X.P)(e)})};var dt=n(636);const ft={kernelName:E.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=(0,dt.p)(r,0);return{x:()=>(0,ve.a)(s,e,(0,D.d)(e,a))}}},mt={kernelName:E.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,J.I)(n,1))}}},gt={kernelName:E.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,_.p)(n,"float32"))}}},yt={kernelName:E.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=(0,Xe.Q)(r);return(0,W.l)(e,(0,D.d)((0,G.S)(e,a,!0),t))}}}},bt=(0,ie.op)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return re.BV.runKernel(E.Hh,o,u)}}),xt={kernelName:E.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>bt(r,a,e,s,i,o,u)}}};var wt=n(6477);function vt(e,t,n,r){return t.rank<n.rank&&(t=(0,H.X)(t,Le.rv(t.shape,r))),e.rank<n.rank&&(e=(0,H.X)(e,Le.rv(e.shape,r))),{x:()=>(0,D.d)(e,(0,_.p)((0,wt.D)(n,t),e.dtype))}}const kt={kernelName:E.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=vt(e,t[1],s,se.EC(a,s.shape));return{x:()=>i.x()}}};var It=n(6573);const St={kernelName:E.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,D.d)(e,(0,_.p)((0,be.b)(n,r),"float32")),b:()=>(0,D.d)(e,(0,_.p)((0,It.d)(n,r),"float32"))}}},Nt=(0,ie.op)({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=(0,ae._1)(e,"dy","maxPool3dGrad"),u=(0,ae._1)(t,"input","maxPool3dGrad"),l=(0,ae._1)(n,"output","maxPool3dGrad");let c=o,p=u,h=l,d=!1;4===u.rank&&(d=!0,c=(0,H.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),p=(0,H.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=(0,H.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),se.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),se.hu(5===p.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`)),se.hu(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=i&&se.hu(se.GN(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:c,input:p,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=re.BV.runKernel(E.OU,f,m);return d?(0,H.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Tt={kernelName:E.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Nt(e,r,a,s,i,o,u)}}},Ct=(0,ie.op)({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=(0,ae._1)(e,"dy","maxPoolGrad"),u=(0,ae._1)(t,"input","maxPoolGrad"),l=(0,ae._1)(n,"output","maxPoolGrad");se.hu(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),se.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),se.hu(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&se.hu(se.GN(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const c={dy:o,input:u,output:l},p={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return re.BV.runKernel(E.OV,c,p)}}),$t={kernelName:E.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>Ct(e,r,a,s,i,o)}}};var At=n(4917);const Et={kernelName:E.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=se.EC(a,r.shape),i=(0,Le.kz)(r.shape,s)[1],o=se.NA(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=(0,H.X)(e,t);return(0,O.h)((0,D.d)(n,(0,At.i)(r.shape,"float32")),o)}}}},_t={kernelName:E.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=vt(e,i,s,se.EC(a,s.shape));return{x:()=>o.x()}}},Dt={kernelName:E.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>(0,D.d)(e,(0,_.p)((0,xe.z)(n,r),"float32")),b:()=>(0,D.d)(e,(0,_.p)((0,dt.p)(n,r),"float32"))}}};var Rt=n(2676);const Ft={kernelName:E.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,Rt.t)(e,s,r.shape)}}};var Ot=n(6943);const Mt={kernelName:E.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,V.$N)(n.shape,r.shape);return{a:()=>{const t=(0,V.RR)(n.shape,a);return t.length>0?(0,H.X)((0,G.S)(e,t),n.shape):e},b:()=>{const t=(0,D.d)(e,(0,M.W)((0,Ot.G)((0,O.h)(n,r)))),s=(0,V.RR)(r.shape,a);return s.length>0?(0,H.X)((0,G.S)(t,s),r.shape):t}}}},zt={kernelName:E.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,V.$N)(n.shape,r.shape);return{a:()=>{const t=(0,D.d)(e,(0,_.p)(r,"float32")),s=(0,V.RR)(n.shape,a);return s.length>0?(0,H.X)((0,G.S)(t,s),n.shape):t},b:()=>{const t=(0,D.d)(e,(0,_.p)(n,"float32")),s=(0,V.RR)(r.shape,a);return s.length>0?(0,H.X)((0,G.S)(t,s),r.shape):t}}}},Bt={kernelName:E.ku,gradFunc:e=>({x:()=>(0,M.W)(e)})};var Lt=n(9640);const Wt={kernelName:E.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,Lt.l)(n.shape,"float32")}}},Ut={kernelName:E.qW,gradFunc:e=>({x:()=>(0,X.P)(e)})};var Pt=n(4136);const Vt={kernelName:E.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return(0,Pt.H)(e,r).map((e=>()=>e))}},Ht={kernelName:E.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>(0,Rt.t)(e,s,r.shape)}}};var Gt=n(2597),jt=n(3453);const qt={kernelName:E.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=V.$N(s.shape,i.shape);return{a:()=>{const t=(0,_.p)(i,"float32");let n=(0,D.d)(e,(0,D.d)(t,(0,jt.s)(s,(0,W.l)(t,(0,z.i)(1)))));const r=V.RR(s.shape,o);return r.length>0&&(n=(0,G.S)(n,r)),(0,H.X)(n,s.shape)},b:()=>{const t=(0,dt.p)(s,0),n=(0,ve.a)(t,(0,Gt.c)(s),(0,X.P)(s));let r=(0,D.d)(e,(0,D.d)(a,n));const u=V.RR(i.shape,o);return u.length>0&&(r=(0,G.S)(r,u)),(0,H.X)(r,i.shape)}}}},Xt={kernelName:E.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,dt.p)(n,0);return{x:()=>(0,ve.a)(a,e,(0,D.d)(e,r)),alpha:()=>{let t=(0,ve.a)(a,(0,X.P)(e),(0,D.d)(e,n));const s=(0,V.RR)(r.shape,e.shape);return s.length>0&&(t=(0,G.S)(t,s)),(0,H.X)(t,r.shape)}}}},Kt={kernelName:E.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=V.$N(n.shape,r.shape);return{a:()=>{const t=(0,O.h)(e,(0,_.p)(r,"float32")),s=V.RR(n.shape,a);return s.length>0?(0,H.X)((0,G.S)(t,s),n.shape):t},b:()=>{let t=(0,D.d)(e,(0,_.p)(n,"float32"));const s=V.RR(r.shape,a);s.length>0&&(t=(0,H.X)((0,G.S)(t,s),r.shape));const i=(0,L.h)(r);return(0,M.W)((0,O.h)(t,(0,_.p)(i,"float32")))}}}},Qt={kernelName:E.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,M.W)((0,L.h)(n)))}}},Yt={kernelName:E.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=(0,D.d)((0,xe.z)(n,6),(0,R.N)(n));return{x:()=>(0,D.d)(e,(0,_.p)(r,"float32"))}}},Jt={kernelName:E.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,_.p)((0,R.N)(n),"float32"))}}},Zt={kernelName:E.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,H.X)(e,n.shape)}}},en={kernelName:E._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>re.BV.runKernel(E.zb,a,n)}}},tn={kernelName:E.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>re.BV.runKernel(E.Hm,a,n)}}};var nn=n(7486);const rn={kernelName:E.mK,gradFunc:(e,t,n)=>{const{dims:r}=n,a=(0,se.EC)(r,e.shape);return{x:()=>(0,nn.G)(e,a)}}},an={kernelName:E.e0,gradFunc:e=>({x:()=>(0,X.P)(e)})},sn={kernelName:E.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,M.W)((0,O.h)(e,(0,D.d)((0,jt.s)(n,1.5),2)))}}};var on=n(8651);const un={kernelName:E.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,_.p)((0,X.P)(n),"float32"),t:()=>(0,D.d)(e,(0,_.p)(n,e.dtype)),e:()=>(0,D.d)(e,(0,_.p)((0,on.h)(n),e.dtype))}}};var ln=n(3179);const cn={kernelName:E.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,dt.p)(n,(0,z.i)(0)),r=(0,z.i)(ln.y),a=(0,z.i)(ln.$),s=(0,D.d)(e,a),i=(0,D.d)((0,D.d)(e,r),(0,Xe.Q)((0,_.p)(n,"float32")));return(0,ve.a)(t,s,i)}}}},pn={kernelName:E.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,D.d)(n,(0,W.l)((0,z.i)(1),n)))}}},hn={kernelName:E.i5,gradFunc:e=>({x:()=>(0,X.P)(e)})};var dn=n(173);const fn={kernelName:E.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)((0,dn.m)((0,_.p)(n,"float32")),e)}}};var mn=n(2699);const gn={kernelName:E.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)((0,mn.f)((0,_.p)(n,"float32")),e)}}};var yn=n(9682),bn=n(7650);const xn={kernelName:E.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=(0,bn.parseSliceParams)(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>(0,yn.v)(e,l)}}},wn={kernelName:E.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=(0,D.d)(e,r);return{logits:()=>(0,W.l)(s,(0,D.d)((0,G.S)(s,[a],!0),r))}}};var vn=n(625);const kn={kernelName:E.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,vn.X)(n))}}};var In=n(8441);const Sn={kernelName:E.TQ,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>(0,In.E)(e,r,a)}}};var Nn=n(6884);const Tn={kernelName:E.L8,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>(0,Nn.z)(e,r)}}},Cn={kernelName:E.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,D.d)((0,B._)((0,_.p)(n,"float32")),2))}}},$n={kernelName:E.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)(e,(0,D.d)((0,_.p)(n,"float32"),2))}}},An={kernelName:E._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=(0,z.i)(2);return{a:()=>(0,D.d)(e,(0,D.d)(a,(0,W.l)(n,r))),b:()=>(0,D.d)(e,(0,D.d)(a,(0,W.l)(r,n)))}}},En={kernelName:E.h8,gradFunc:e=>({x:()=>(0,X.P)(e)})},_n={kernelName:E.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=V.$N(n.shape,r.shape);return{a:()=>{let t=e;const r=V.RR(n.shape,a);return r.length>0&&(t=(0,G.S)(t,r)),(0,H.X)(t,n.shape)},b:()=>{let t=e;const n=V.RR(r.shape,a);return n.length>0&&(t=(0,G.S)(t,n)),(0,H.X)((0,M.W)(t),r.shape)}}}},Dn={kernelName:E.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;(0,se.EC)(s,r.shape).forEach((e=>{a[e]=1}));const i=(0,H.X)(e,a),o=(0,D.d)(i,(0,At.i)(r.shape,"float32"));return{x:()=>o}}},Rn={kernelName:E.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,O.h)(e,(0,L.h)((0,dn.m)(n)))}}},Fn={kernelName:E.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,D.d)((0,W.l)((0,z.i)(1),(0,L.h)(n)),e)}}},On={kernelName:E.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=(0,X.P)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=(0,J.I)(t,(0,Rt.t)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=(0,J.I)(t,(0,Rt.t)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=(0,J.I)(t,(0,Rt.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=(0,J.I)(t,(0,Rt.t)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Mn={kernelName:E.G3,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Le.LJ(a);return{x:()=>(0,Ue.p)(e,s)}}};var zn=n(2991);const Bn={kernelName:E.To,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>(0,zn.k)(e,a)}}};var Ln=n(1300),Wn=n(4926),Un=n(632);const Pn={kernelName:E.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,Un.g)(t,(0,X.P)(t)),r=(0,Wn.I)(e,n);let a=(0,be.b)(t,(0,z.i)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=(0,Ln.d)(a,e+1);a=(0,we.H)(a,(0,At.i)(r.shape,"bool"));const i=(0,X.P)(r);return(0,ve.a)(a,r,i)}(e,n)}}},Vn={kernelName:E.Ru,gradFunc:e=>({x:()=>(0,X.P)(e)})};var Hn=n(6151);const Gn=[F,U,P,j,q,K,Q,Y,Z,ee,te,ne,ue,ce,he,fe,me,ge,ye,ke,Ie,Ne,_e,Ae,Fe,Me,Be,Pe,Ge,je,Kt,qe,Ke,Qe,Ye,Je,et,Ze,rt,st,ut,lt,ct,pt,ht,ft,mt,gt,yt,xt,kt,kt,St,Tt,$t,Et,_t,Dt,Ft,Mt,zt,Bt,Wt,Ut,Vt,Ht,Ht,qt,Xt,Qt,Yt,Jt,Zt,en,tn,rn,an,sn,un,cn,pn,hn,fn,gn,xn,wn,kn,Sn,Sn,Tn,Tn,Cn,An,$n,En,_n,Dn,Rn,Fn,On,Mn,Bn,Pn,Vn];for(const e of Gn)(0,Hn.Li)(e);var jn=n(6235),qn=n(4077);(0,qn.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,jn.W)(this)};var Xn=n(7839);(0,qn.t3)().prototype.acos=function(){return this.throwIfDisposed(),(0,Xn.K)(this)};var Kn=n(1470);(0,qn.t3)().prototype.acosh=function(){return this.throwIfDisposed(),(0,Kn._)(this)},(0,qn.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,J.I)(this,e)};var Qn=n(781);(0,qn.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,Qn.$)(this,e,t)};var Yn=n(2998);(0,qn.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,Yn.Y)(this,e,t)};var Jn=n(47);(0,qn.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Jn.N)(this,e)};var Zn=n(7394);(0,qn.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),(0,Zn.v)(this,e)},(0,qn.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,se.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,H.X)(this,[])},(0,qn.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,_.p)(this,e)},(0,qn.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,H.X)(this,[this.size])},(0,qn.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,H.X)(this,[e,t])},(0,qn.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n])},(0,qn.t3)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n,r])},(0,qn.t3)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),(0,H.X)(this,[e,t,n,r,a])};var er=n(2421);(0,qn.t3)().prototype.asin=function(){return this.throwIfDisposed(),(0,er.Z)(this)};var tr=n(1891);(0,qn.t3)().prototype.asinh=function(){return this.throwIfDisposed(),(0,tr.V)(this)};var nr=n(7037);(0,qn.t3)().prototype.atan=function(){return this.throwIfDisposed(),(0,nr.z)(this)};var rr=n(9812);(0,qn.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),(0,rr.f)(this,e)};var ar=n(369);(0,qn.t3)().prototype.atanh=function(){return this.throwIfDisposed(),(0,ar.C)(this)};var sr=n(5176);(0,qn.t3)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),(0,sr.w)(this,e,t,n,r)},(0,qn.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),(0,In.E)(this,e,t)};var ir=n(7505);(0,qn.t3)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),(0,ir.t)(this,e,t,n,r,a)};var or=n(8247);(0,qn.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,or.U)(this,e)},(0,qn.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,_.p)(this,e)};var ur=n(6825);(0,qn.t3)().prototype.ceil=function(){return this.throwIfDisposed(),(0,ur.m)(this)};var lr=n(2279);(0,qn.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,lr.i)(this,e,t)},(0,qn.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qn.es&&(e=[e]),(0,Nn.z)([this,...e],t)};var cr=n(1355);(0,qn.t3)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,cr.P)(this,e,t,n,r,a,s)};var pr=n(1405);(0,qn.t3)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),(0,pr.b)(this,e,t,n,r,a)},(0,qn.t3)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,Ee.T)(this,e,t,n,r,a,s)},(0,qn.t3)().prototype.cos=function(){return this.throwIfDisposed(),(0,dn.m)(this)},(0,qn.t3)().prototype.cosh=function(){return this.throwIfDisposed(),(0,mn.f)(this)},(0,qn.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),(0,We.z)(this,e,t,n)};var hr=n(9112);(0,qn.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),(0,hr.n)(this,e,t)};var dr=n(4718);(0,qn.t3)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,dr.B)(this,e,t,n,r,a,s)};var fr=n(557);(0,qn.t3)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),(0,fr.W)(this,e,t,n,r,a)};var mr=n(9322);(0,qn.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),(0,mr.N)(this,e)},(0,qn.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,O.h)(this,e)};var gr=n(548);(0,qn.t3)().prototype.dot=function(e){return this.throwIfDisposed(),(0,gr.A)(this,e)};var yr=n(3233);(0,qn.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,yr.p)(this)},(0,qn.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,wt.D)(this,e)};var br=n(4650);(0,qn.t3)().prototype.erf=function(){return this.throwIfDisposed(),(0,br.q)(this)},(0,qn.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,Xe.Q)(this)},(0,qn.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Ln.d)(this,e)};var xr=n(3426);(0,qn.t3)().prototype.expm1=function(){return this.throwIfDisposed(),(0,xr.t)(this)};var wr=n(7020);(0,qn.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,wr.k)(this)},(0,qn.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,H.X)(this,[this.size])},(0,qn.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,Ot.G)(this)};var vr=n(9165);(0,qn.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,vr.q)(this,e)},(0,qn.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,Wn.I)(this,e,t)},(0,qn.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,be.b)(this,e)},(0,qn.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,dt.p)(this,e)};var kr=n(8447);(0,qn.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,kr.S)(this)};var Ir=n(4415);(0,qn.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,Ir.w)(this)};var Sr=n(3963);(0,qn.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),(0,Sr.x)(this)};var Nr=n(4365);(0,qn.t3)().prototype.isInf=function(){return this.throwIfDisposed(),(0,Nr.U)(this)};var Tr=n(6230);(0,qn.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),(0,Tr.i)(this)};var Cr=n(9133);(0,qn.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,Cr.h)(this,e)},(0,qn.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,xe.z)(this,e)},(0,qn.t3)().prototype.less=function(e){return this.throwIfDisposed(),(0,It.d)(this,e)};var $r=n(9648);(0,qn.t3)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),(0,$r.G)(this,e,t,n,r)};var Ar=n(3888);(0,qn.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),(0,Ar.e)(this)};var Er=n(1510);(0,qn.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,Er.C)(this,e)};var _r=n(1391);(0,qn.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,_r.l)(this,e,t)},(0,qn.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,Gt.c)(this)};var Dr=n(7474);(0,qn.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,Dr.K)(this)},(0,qn.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,we.H)(this,e)},(0,qn.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),(0,on.h)(this)};var Rr=n(5750);(0,qn.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),(0,Rr.K)(this,e)};var Fr=n(596);(0,qn.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),(0,Fr.e)(this,e)},(0,qn.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,pe.O)(this,e,t,n)};var Or=n(1174);(0,qn.t3)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),(0,Or._)(this,e,t,n,r)};var Mr=n(3307);(0,qn.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,Mr.F)(this,e,t)},(0,qn.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,Un.g)(this,e)};var zr=n(5130);(0,qn.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,zr.J)(this,e,t)};var Br=n(5735);(0,qn.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,Br.V)(this,e,t)};var Lr=n(4513);(0,qn.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,Lr.L)(this,e)};var Wr=n(1483);(0,qn.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),(0,Wr.V)(this,e,t)};var Ur=n(5228);(0,qn.t3)().prototype.mod=function(e){return this.throwIfDisposed(),(0,Ur.w)(this,e)},(0,qn.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,D.d)(this,e)},(0,qn.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,M.W)(this)};var Pr=n(3561);(0,qn.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,Pr.K)(this,e,t,n)};var Vr=n(6500);(0,qn.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,Vr.Q)(this,e)};var Hr=n(6708);(0,qn.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,Hr.l)(this,e,t,n)};var Gr=n(7846);(0,qn.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,Gr.J)(this)},(0,qn.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,yn.v)(this,e,t)};var jr=n(5860);(0,qn.t3)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),(0,jr.d)(this,e,t,n,r,a)},(0,qn.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,jt.s)(this,e)};var qr=n(8151);(0,qn.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,qr.A)(this,e)};var Xr=n(9451);(0,qn.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),(0,Xr.W)(this,e,t)};var Kr=n(9036);(0,qn.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Kr.M)(this)};var Qr=n(7409);(0,qn.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,Qr.U)(this)};var Yr=n(3582);(0,qn.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Yr.b)(this)},(0,qn.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,H.X)(this,e.shape)},(0,qn.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,H.X)(this,e)};var Jr=n(3305);(0,qn.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Jr.I)(this,e,t,n)};var Zr=n(5098);(0,qn.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,Zr.j)(this,e,t,n)},(0,qn.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,nn.G)(this,e)};var ea=n(3710);(0,qn.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,ea.Q)(this)};var ta=n(7809);(0,qn.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,ta.N)(this)},(0,qn.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),(0,tt.b)(this)};var na=n(5503);(0,qn.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,na.U)(this)};var ra=n(8678);(0,qn.t3)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),(0,ra.U)(this,e,t,n,r,a,s)},(0,qn.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,vn.X)(this)};var aa=n(4434);(0,qn.t3)().prototype.sign=function(){return this.throwIfDisposed(),(0,aa.X)(this)},(0,qn.t3)().prototype.sin=function(){return this.throwIfDisposed(),(0,Oe.O)(this)},(0,qn.t3)().prototype.sinh=function(){return this.throwIfDisposed(),(0,ze.R)(this)},(0,qn.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Rt.t)(this,e,t)};var sa=n(682);(0,qn.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,sa.X)(this,e)};var ia=n(3694);(0,qn.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,ia.W)(this)},(0,qn.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),(0,de.f)(this,e,t)},(0,qn.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,Se.V)(this,e,t)},(0,qn.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,B._)(this)},(0,qn.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,L.h)(this)};var oa=n(5265);(0,qn.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,oa.$)(this,e)};var ua=n(9590);(0,qn.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,ua.L)(this,e)},(0,qn.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qn.es?[this,e]:[this,...e];return(0,zn.k)(n,t)},(0,qn.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,R.N)(this,e)};var la=n(5158);(0,qn.t3)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),(0,la.N)(this,e,t,n,r,a,s,i,o)},(0,qn.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,W.l)(this,e)},(0,qn.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,G.S)(this,e,t)};var ca=n(1173);(0,qn.t3)().prototype.tan=function(){return this.throwIfDisposed(),(0,ca.O)(this)};var pa=n(1869);(0,qn.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,pa.A)(this)},(0,qn.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,nt.G)(this,e)},(0,qn.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,_.p)(this,"bool")},(0,qn.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,_.p)(this,"float32")},(0,qn.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,_.p)(this,"int32")};var ha=n(3243);(0,qn.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),(0,ha.h)(this,e,t)},(0,qn.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,Ue.p)(this,e)};var da=n(9608);let fa;function ma(){return null==fa&&(fa=(0,A.y3$)().epsilon()),fa}(0,qn.t3)().prototype.unique=function(e){return this.throwIfDisposed(),(0,da.T)(this,e)},(0,qn.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),(0,at.p)(this,e,t)},(0,qn.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,Pt.H)(this,e)},(0,qn.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,ve.a)(e,this,t)},(0,qn.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,X.P)(this)};class ga extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ga.prototype)}}class ya extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ya.prototype)}}class ba extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ba.prototype)}}class xa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,xa.prototype)}}class wa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wa.prototype)}}function va(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ka(e,t){if(!e)throw new wa(t)}function Ia(e,t){let n=0;for(const r of e)r===t&&n++;return n}function Sa(e){return 1===e.length?e[0]:e}function Na(e){return Array.isArray(e)?e:[e]}function Ta(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ca(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let $a={};function Aa(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Ea(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Ea(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Ea(t):e[n]=t.value)}}}function _a(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in $a)s=$a[a];else if(s=t[a],null==s)throw new ba(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ba(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in $a?[o,u]=$a.className:i in t&&([o,u]=t[i]),null==o)throw new ba(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys($a))e[t]=$a[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},$a);for(const e of Object.keys(n))$a[e]=n[e];Ea(s.config);const r=u(o,s.config,n,a);return $a=Object.assign({},t),r}{const e=Object.assign({},$a);for(const e of Object.keys(n))$a[e]=n[e];const t=new o(s.config);return $a=Object.assign({},e),t}}}function Da(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ra(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Fa(e){if(null==e)throw new ba(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Oa(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ba(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ma(e,t,n=0,r=1/0){return ka(n>=0),ka(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function za(e,t){Array.isArray(e)?(A.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>za(e,`element ${n+1} of ${t}`)))):A.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ba(e)}.`))}function Ba(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ba(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function La(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Wa(e,t){return(0,A.lub)((()=>A._b3(A.Smz(A.dC7(e,e),t,!0))))}class Ua extends A.m7h.Serializable{getConfig(){return{}}}class Pa extends Ua{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>{const t=Wa(e,this.axis),n=A.iUl(t,0,this.maxValue);return A.dC7(e,A.hiC(n,A.IHx(ma(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Pa.className="MaxNorm",A.m7h.registerClass(Pa);class Va extends Ua{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>A.hiC(e,A.IHx(ma(),Wa(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Va.className="UnitNorm",A.m7h.registerClass(Va);class Ha extends Ua{apply(e){return A.UYe(e)}}Ha.className="NonNeg",A.m7h.registerClass(Ha);class Ga extends Ua{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,A.lub)((()=>{const t=Wa(e,this.axis),n=A.IHx(A.dC7(this.rate,A.iUl(t,this.minValue,this.maxValue)),A.dC7(1-this.rate,t));return A.dC7(e,A.hiC(n,A.IHx(ma(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Ga.className="MinMaxNorm",A.m7h.registerClass(Ga);const ja={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function qa(e){return Aa(e)}function Xa(e,t={}){return _a(e,A.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function Ka(e){return null==e?null:"string"==typeof e?Xa({className:e in ja?ja[e]:e,config:{}}):e instanceof Ua?e:Xa(e)}function Qa(e){return new Pa(e)}function Ya(e){return new Va(e)}function Ja(){return new Ha}function Za(e){return new Ga(e)}const es=["channelsFirst","channelsLast"],ts=["nearest","bilinear"],ns=["valid","same","causal"],rs=["max","avg"],as=["sum","mul","concat","ave"],ss=new Map;function is(e){Oa(es,"DataFormat",e)}function os(e){Oa(ns,"PaddingMode",e)}function us(e){Oa(rs,"PoolMode",e)}const ls=[];function cs(e,t){ls.push(e);try{const e=t();return ls.pop(),e}catch(e){throw ls.pop(),e}}function ps(e){if(!fs(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ls.length?"":ls.join("/")+"/")+e}function hs(e){if(!fs(e))throw new Error("Not a valid tensor name: '"+e+"'");ss.has(e)||ss.set(e,0);const t=ss.get(e);if(ss.set(e,ss.get(e)+1),t>0){const n=`${e}_${t}`;return ss.set(n,1),n}return e}const ds=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function fs(e){return!!e.match(ds)}function ms(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function gs(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function ys(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function bs(e,t){if(t<e)throw new ba(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function xs(e,t){return A.pju(e,t)}function ws(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),A.XLQ(e,n)}function vs(e,t,n){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:return A.SmN(e,[t,0],[n,e.shape[1]]);case 3:return A.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return A.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return A.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return A.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ba(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ks(e,t,n){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:return A.SmN(e,[0,t],[e.shape[0],n]);case 3:return A.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return A.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ba(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Is(e,t,n,r){return(0,A.lub)((()=>{switch(e.rank){case 1:return A.jZU(e,t,n);case 2:switch(r){case 1:return vs(e,t,n);case 2:return ks(e,t,n);default:throw new ba(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return vs(e,t,n);case 2:return A.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ks(e,t,n);default:throw new ba(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return vs(e,t,n);case 2:return A.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return A.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ks(e,t,n);default:throw new ba(`The axis is not within the rank of the tensor ${r}`)}default:throw new ba(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ss(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),A.zoF(e,t)}function Ns(e,t){switch(e.rank){case 1:return A.gME([e,t]);case 2:return A.Izb([e,t],0);case 3:return A.MNy([e,t],0);case 4:return A.ZaL([e,t],0);default:throw new ba(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ts(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ba(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return A.Gg6(e,t)}function Cs(e,t=0,n=1,r,a){return A.nGf(e,t,n,r,a)}function $s(e,t,n,r){if(e.rank<2||t.rank<2)throw new xa(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new xa(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,s=!1;return A.imm.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?_s(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=A.XLQ(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=A.XLQ(A.p4s(t,c),[u,-1]);const p=[...a,...l],h=!1,d=!1;return A.XLQ(A.imm.matMul({a:e,b:t,transposeA:h,transposeB:d,bias:r?_s(e.rank,r,"channelsLast"):null,activation:n}),p)}}function As(e,t,n){return(0,A.lub)((()=>(t=Array.isArray(t)?(0,A.RRF)(t,"int32"):A.pju(t,"int32"),A.Iqj(e,t,n))))}function Es(e){return A.dC7(e,e)}function _s(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ba(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?A.XLQ(t,[1,r[0],1,1,1]):A.XLQ(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?A.XLQ(t,[1,1,1,1,r[0]]):A.XLQ(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?A.XLQ(t,[1,r[0],1,1]):A.XLQ(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?A.XLQ(t,[1,1,1,r[0]]):A.XLQ(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?A.XLQ(t,[1,r[0],1]):A.XLQ(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?A.XLQ(t,[1,1,r[0]]):A.XLQ(t,[1].concat(r))}else if(e<3)return t;throw new ba(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ds(e,t,n){return(0,A.lub)((()=>(null==n&&(n="channelsLast"),is(n),A.IHx(e,_s(e.rank,t,n)))))}function Rs(e,t,n,r){return(0,A.lub)((()=>A.rvX(e,t,n,r)))}function Fs(e,t,n=!1){return n?e():t()}const Os=["fanIn","fanOut","fanAvg"],Ms=["normal","uniform","truncatedNormal"];class zs extends A.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Bs extends zs{apply(e,t){return(0,A.lls)(e,t)}}Bs.className="Zeros",A.m7h.registerClass(Bs);class Ls extends zs{apply(e,t){return(0,A.iUs)(e,t)}}Ls.className="Ones",A.m7h.registerClass(Ls);class Ws extends zs{constructor(e){if(super(),"object"!=typeof e)throw new ba(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ba(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,A.lub)((()=>(0,A.dC7)((0,A.iD$)(this.value),(0,A.iUs)(e,t))))}getConfig(){return{value:this.value}}}Ws.className="Constant",A.m7h.registerClass(Ws);class Us extends zs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,A.LGj)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Us.className="RandomUniform",A.m7h.registerClass(Us);class Ps extends zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xa(`randomNormal does not support dType ${t}.`);return Cs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ps.className="RandomNormal",A.m7h.registerClass(Ps);class Vs extends zs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xa(`truncatedNormal does not support dType ${t}.`);return(0,A.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Vs.className="TruncatedNormal",A.m7h.registerClass(Vs);class Hs extends zs{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,A.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new ba("Identity matrix initializer can only be used for 2D square matrices.");return(0,A.dC7)(this.gain,(0,A.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}Hs.className="Identity",A.m7h.registerClass(Hs);class Gs extends zs{constructor(e){if(super(),e.scale<0)throw new ba(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Oa(Os,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Oa(Ms,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(is(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ms(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ms(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ms(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new xa(`${this.getClassName()} does not support dType ${t}.`);return(0,A.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return(0,A.LGj)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Gs.className="VarianceScaling",A.m7h.registerClass(Gs);class js extends Gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}js.className="GlorotUniform",A.m7h.registerClass(js);class qs extends Gs{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}qs.className="GlorotNormal",A.m7h.registerClass(qs);class Xs extends Gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}Xs.className="HeNormal",A.m7h.registerClass(Xs);class Ks extends Gs{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}Ks.className="HeUniform",A.m7h.registerClass(Ks);class Qs extends Gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}Qs.className="LeCunNormal",A.m7h.registerClass(Qs);class Ys extends Gs{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Gs.className}}Ys.className="LeCunNormal",A.m7h.registerClass(Ys);class Js extends zs{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new xa("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,A.lub)((()=>{if(e.length<2)throw new xa("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Cs(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=A.$r2.gramSchmidt(t);return e[0]>e[1]&&(n=(0,A.p4s)(n)),(0,A.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Js.className="Orthogonal",A.m7h.registerClass(Js);const Zs={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function ei(e,t={}){return _a(e,A.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function ti(e){return Aa(e)}function ni(e){if("string"==typeof e){const t=e in Zs?Zs[e]:e;if("GlorotNormal"===t)return new qs;if("GlorotUniform"===t)return new js;if("HeNormal"===t)return new Xs;if("HeUniform"===t)return new Ks;if("LeCunNormal"===t)return new Qs;if("LeCunUniform"===t)return new Ys;{const e={};return e.className=t,e.config={},ei(e)}}return e instanceof zs?e:ei(e)}function ri(){return new Bs}function ai(){return new Ls}function si(e){return new Ws(e)}function ii(e){return new Us(e)}function oi(e){return new Ps(e)}function ui(e){return new Vs(e)}function li(e){return new Hs(e)}function ci(e){return new Gs(e)}function pi(e){return new js(e)}function hi(e){return new qs(e)}function di(e){return new Xs(e)}function fi(e){return new Ks(e)}function mi(e){return new Qs(e)}function gi(e){return new Ys(e)}function yi(e){return new Js(e)}let bi=0;function xi(){return bi++}const wi={};function vi(e=""){return e in wi||(wi[e]=0),wi[e]+=1,e+wi[e].toString()}function ki(e){return Array.isArray(e)&&Array.isArray(e[0])}function Ii(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Si(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ba(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ni(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ba(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ti(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Ci{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=xi(),n=null==n?"Variable":n,this.originalName=ps(n),this.name=hs(this.originalName),this.trainable_=r,this.constraint=a,this.val=A.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function $i(e){return e.map((e=>e.read()))}function Ai(e){e.forEach((e=>{e[0].write(e[1])}))}class Ei{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class _i{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=xi(),null!=s&&(this.originalName=ps(s),this.name=hs(this.originalName)),this.rank=t.length}}let Di=0;class Ri{constructor(e,t){this.callArgs=t,this.id=Di++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Fi=0;class Oi extends A.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Fi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=Ta(e)+"_"+vi(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new ya(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ba(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Sa(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Sa(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ga(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ga(`Layer ${this.name} is not connected, no input to return.`);return Sa(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ga(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ga(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Sa(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Na(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Na(this.inputSpec);if(e.length!==t.length)throw new ba(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ba(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ba(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ba(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ba(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ba(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ba(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Na(e);let r=!0;for(const e of n)if(!(e instanceof _i)){r=!1;break}let a=!0;for(const e of n)if(e instanceof _i){a=!1;break}if(r===a)throw new ba("Arguments to apply() must be all SymbolicTensors or all Tensors");return cs(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Na(e))t.push(n.shape);this.build(Sa(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Na(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=Sa(s),null!=this.activityRegularizer)throw new xa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Na(e);const t=[];for(const n of e)t.push(n.shape);return Sa(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new _i(s,n,this,Na(e),t,this.name,r))):new _i(s,r,this,Na(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new xa("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ga(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ga(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ya(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ti(this.weights)}build(e){this.built=!0}getWeights(e=!1){return $i(e?this.trainableWeights:this.weights)}setWeights(e){(0,A.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new ba(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=$i(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!A.D5U.arraysEqual(s.shape,o.shape))throw new ba(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Ai(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new ba(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=ni("zeros"));const o=r.apply(t,n),u=new Ci(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Na(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Na(e);t=Na(t),n=Na(n),r=Na(r),a=Ii(a),s=Ii(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Ri({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Mi(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Mi(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class zi extends Oi{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:vi("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ba("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ba("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ba("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new _i(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Ri({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ba(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Bi(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ba("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new zi({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Li(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,A.B90)(r)}}function Wi(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Ui;zi.className="InputLayer",A.m7h.registerClass(zi),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Ui||(Ui={}));class Pi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Vi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Hi extends Pi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=(0,A.lub)((()=>(0,A.IHx)(this.totals[e],(0,A.dC7)(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,A.lub)((()=>{const n=(0,A.dC7)((0,A.hiC)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,A.CnY)(t[e])})))}}class Gi extends Pi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class ji extends Pi{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");A.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=A.D5U.now();return(...a)=>{const s=A.D5U.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Li(n),r.push(this.yield(e,t,n))),r.push((0,A.glt)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Li(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Li(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,A.glt)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Li(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Li(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,A.glt)()):A.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Li(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Li(e),await this.trainEnd(e))}}function qi(e,t){return null==e&&(e={}),e instanceof Pi?[e]:Array.isArray(e)&&e[0]instanceof Pi?e:Na(e).map((e=>new ji(e,t)))}class Xi{constructor(){}static registerCallbackConstructor(e,t){A.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Xi.checkForDuplicate(t),null==Xi.constructors[e]&&(Xi.constructors[e]=[]),Xi.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Xi.constructors)Xi.constructors[+t].forEach((t=>{if(t===e)throw new ba("Duplicate callback constructor.")}))}static clear(){Xi.constructors={}}static createCallbacks(e){const t=[];for(const n in Xi.constructors){const r=+n;e>=r&&t.push(...Xi.constructors[r])}return t.map((e=>new e))}}function Ki(e,t,n,r,a,s,i,o,u){const l=new Gi,c=[new Hi,...Xi.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const p=new Vi(c);return p.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:p,history:l}}function Qi(e,t={},n=!1){return _a(e,A.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function Yi(e,t){return(0,A.lub)((()=>{"float32"!==e.dtype&&(e=A.pju(e,"float32"));const n=A.Smz(Es(e),t,!0),r=A.hlL(n.shape,ma()),a=A._b3(A.gWQ(n,r));return A.hiC(e,a)}))}function Ji(e,t){return(0,A.lub)((()=>A.J69(Es(A.luU(t,e)),-1)))}function Zi(e,t){return(0,A.lub)((()=>A.J69(A.WnP(A.luU(t,e)),-1)))}function eo(e,t){return(0,A.lub)((()=>{const n=A.luU(e,t),r=A.iUl(A.WnP(e),ma(),Number.MAX_VALUE),a=A.WnP(A.hiC(n,r));return A.dC7(100,A.J69(a,-1))}))}function to(e,t,n=!1){return(0,A.lub)((()=>{if(n)t=A.XAC(t);else{const e=A.Smz(t,t.shape.length-1,!0);t=A.hiC(t,e)}return t=A.iUl(t,ma(),1-ma()),A.W76(A.Smz(A.dC7(A.pju(e,"float32"),A.cM7(t)),t.shape.length-1))}))}function no(e,t,n=!1){return(0,A.lub)((()=>{const r=A.pju(A.GWj(function(e){const t=[ms(e.shape)];return A.XLQ(e,t)}(e)),"int32"),a=(t=A.iUl(t,ma(),1-ma())).shape;return to(A.XLQ(A.lfX(r,a[a.length-1]),a),t,n)}))}function ro(e,t){return(0,A.lub)((()=>{let n;return n=A.iUl(t,ma(),1-ma()),n=A.cM7(A.hiC(n,A.luU(1,n))),A.J69(function(e,t){if(!A.D5U.arraysEqual(e.shape,t.shape))throw new ba(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,A.lub)((()=>{const n=A.UYe(t),r=A.W76(A.WnP(t));return A.IHx(A.luU(n,A.dC7(t,e)),A.Krr(A.Qqt(r)))}))}(e,n),-1)}))}function ao(e,t){return(0,A.lub)((()=>{const n=Yi(e,-1),r=Yi(t,-1),a=A.dC7(n,r);return A.W76(A.Smz(a,-1))}))}Xi.constructors={};const so={meanSquaredError:Ji,meanAbsoluteError:Zi,meanAbsolutePercentageError:eo,meanSquaredLogarithmicError:function(e,t){return(0,A.lub)((()=>{const n=A.iUl(t,ma(),Number.MAX_VALUE),r=A.cM7(A.IHx(1,n)),a=A.iUl(e,ma(),Number.MAX_VALUE),s=A.cM7(A.IHx(1,a));return A.J69(Es(A.luU(r,s)),-1)}))},squaredHinge:function(e,t){return(0,A.lub)((()=>{const n=A.gWQ(0,A.luU(1,A.dC7(e,t)));return A.J69(Es(n),-1)}))},hinge:function(e,t){return(0,A.lub)((()=>{const n=A.gWQ(0,A.luU(1,A.dC7(e,t)));return A.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,A.lub)((()=>{const n=A.Smz(A.dC7(e,t),-1),r=A.Fp7(A.dC7(A.luU(1,e),t),-1);return A.gWQ(0,A.IHx(1,A.luU(r,n)))}))},logcosh:function(e,t){return(0,A.lub)((()=>{const n=Math.log(2),r=A.luU(t,e),a=A.luU(A.IHx(r,A.Wvh(A.dC7(-2,r))),n);return A.J69(a,-1)}))},categoricalCrossentropy:to,sparseCategoricalCrossentropy:no,binaryCrossentropy:ro,kullbackLeiblerDivergence:function(e,t){return(0,A.lub)((()=>{const n=A.iUl(e,ma(),1),r=A.iUl(t,ma(),1);return A.Smz(A.dC7(e,A.cM7(A.hiC(n,r))),-1)}))},poisson:function(e,t){return(0,A.lub)((()=>{const n=A.cM7(A.IHx(ma(),t));return A.J69(A.luU(t,A.dC7(e,n)),-1)}))},cosineProximity:ao};function io(e){if("string"==typeof e){if(e in so)return so[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ba(t)}return e}function oo(e,t){return(0,A.lub)((()=>{const n=A.dC7(.5,A.JpU(t)),r=xs(A.pjt(t,n),e.dtype);return A.J69(A.DgJ(e,r),-1)}))}function uo(e,t){return(0,A.lub)((()=>xs(A.DgJ(A.NqF(e,-1),A.NqF(t,-1)),"float32")))}function lo(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,1),A.DgJ(t,1))),"float32")))}function co(e,t){return(0,A.lub)((()=>{const n=lo(e,t),r=function(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,0),A.DgJ(t,1))),"float32")))}(e,t),a=A.IHx(n,r);return A.pju(A.arb(A.pjt(a,0),A.hiC(n,a),0),"float32")}))}function po(e,t){return ro(e,t)}function ho(e,t){return e.rank===t.rank&&(e=A.L9e(e,[e.rank-1])),(t=A.NqF(t,-1)).dtype!==e.dtype&&(t=A.pju(t,e.dtype)),A.pju(A.DgJ(e,t),"float32")}const fo=to,mo=no,go={binaryAccuracy:oo,categoricalAccuracy:uo,precision:co,categoricalCrossentropy:fo,sparseCategoricalCrossentropy:mo,mse:Ji,MSE:Ji,mae:Zi,MAE:Zi,mape:eo,MAPE:eo,cosine:ao};function yo(e){if("string"==typeof e&&e in go)return go[e];if("string"!=typeof e&&null!=e)return e;throw new ba(`Unknown metric ${e}`)}function bo(e){if(ka(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(so))if(so[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(go))if(go[n]===e){t=n;break}return void 0!==t?t:e.name}}function xo(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!wo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function wo(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!wo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!wo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function vo(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function ko(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}vo([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Io(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];vo([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)vo(["","","",s[e]],t,r)}function So(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function No(e,t){if(null===e)return null;if("string"==typeof e)return Ca(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];So(t,a,r)?n.push(r):n.push(No(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Ca(n);t[e]=No(r,e)}}return t}}function To(e,t){if(null==e)return null;if("string"==typeof e)return Ta(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];So(t,a,r)?n.push(r):n.push(To(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[Ta(n)]="name"!==n&&"className"!==n||"string"!=typeof r?To(r,n):r}return t}}const Co="3.8.0";class $o{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof $o)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ba(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,A.pju)(t,e.dtype)}catch(n){throw new ba(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof _i){if(null==this.id2Value[e.id])throw new ba(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ba(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof _i){if(null==this.id2Value[e.id])throw new ba(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ba(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,A.B90)(this.id2Mask)}}const Ao={},Eo={};function _o(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let p,h;if(null==Ao[c]){const e=function(e,t){A.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=Ro(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=Ro(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Do(r)}}(i,t);p=e.sorted,h=e.recipientCounts,Ao[c]=p,Eo[c]=h}p=Ao[c],h={},a||Object.assign(h,Eo[c]);const d=new $o(t);for(let e=0;e<p.length;++e){if(null!=r){const e=(0,A.sq6)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=p[e],i=s.sourceLayer;if(i instanceof zi)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Na(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Fo(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||(0,A.B90)(f)}return d.disposeMasks(),s?u:u[0]}function Do(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ro(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Fo(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Oo extends Oi{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=vi(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ra(this.inputs).length!==this.inputs.length)throw new ba(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Ra(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ka(0===n,"input layer has >1 nodes"),ka(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof zi))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new ya(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Oo.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const p={};for(const e in t){const r=t[e];r in p||(p[r]=[]),p[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let d=Object.keys(h).map((e=>parseInt(e,10))).sort(Da);this.layers=[];for(const e of d){const t=h[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof Oo&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,d=Object.keys(p).map((e=>parseInt(e,10))).sort(Da);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of p[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new ya(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=p;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new ya(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Ri({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ba("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ba(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new ba(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ba(`${e.length} of ${r} weights are not set: ${e}`)}Ai(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Co}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=To(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,A.lub)((()=>{e=Na(e);const n=new $o;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return _o(this.outputs,n,t)}))}computeMask(e,t){return(0,A.lub)((()=>{let n;return e=Na(e),n=null==t?va(null,e.length):Na(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Ii(e);if(t.length!==this.inputLayers.length)throw new ba(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Da);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Ii(t.computeOutputShape(Sa(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];ka(t in n),a.push(n[t])}return Sa(a)}runInternalGraph(e,t){null==t&&(t=va(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Da);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Na(t.call(e,l)),u=Na(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==l.mask&&(l.mask=i),o=Na(t.call(r,l)),u=Na(t.computeMask(r,i));if(t.activityRegularizer)throw new xa("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){ka(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Oo?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Oo.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ba(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ba("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ba(`No such layer: ${e}`)}calculateLosses(){return(0,A.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Oo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Oo.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Oo.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Oo.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Oo.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const p=c.inboundNodes[u];n.push(p.outputTensors[l])}n.length>0&&e.apply(Sa(n),r)}function u(e){const n=e.name,s=Qi(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ba(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!Fa(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const p=[],h=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];ka(t in a);const s=a[t].inboundNodes[n].outputTensors;p.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ka(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:p,outputs:h,name:l})}get stateful(){if(this._stateful)throw new ba("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,A.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function Mo(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function zo(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,A.lub)((()=>{if(1===e.shape.length)return(0,A.d9v)(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return(0,A.NqF)(e,t)}if(1===e.shape[1])return(0,A.XLQ)(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());(0,A.B90)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,A.RRF)(a,"float32")}return null}function Bo(e,t){return(0,A.dC7)(e,t)}function Lo(e,t){let n,r;const a=t;n=a.xs,r=a.ys,A.D5U.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=Wo("input",e.inputNames,n),i=Wo("output",e.outputNames,r),o=s[0].shape[0];A.D5U.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),A.D5U.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)A.D5U.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)A.D5U.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function Wo(e,t,n){if(n instanceof A.esB)return[n];if(Array.isArray(n))return A.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new ba(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function Uo(e){return"function"==typeof e.iterator}function Po(e){A.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Vo(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>vs(e,t,n-t))):vs(e,t,n-t)}function Ho(e,t){return A.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>Ho(e,t))):As(e,"int32"===t.dtype?t:A.pju(t,"int32"))))}function Go(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function jo(e){const t=[];e instanceof A.esB&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ws(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function qo(e,t){if(null==e)return;const n=[];if(t instanceof A.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof A.esB)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Xo(e){return Array.isArray(e)}function Ko(e){return!function(e){return e instanceof A.esB}(e)&&!Xo(e)}function Qo(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Xo(e)&&e.length>0)t=!0;else if(Ko(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ba(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(Ko(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ba(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Xo(e)){if((e=e).length!==t.length)throw new ba(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new ba(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=jo(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ba(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new ba(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function Yo(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ba(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ba(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ba(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new ba(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Jo extends Oo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ba("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),vo(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?ko(o[e],n,r):Io(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Ti(e.collectedTrainableWeights):Ti(e.trainableWeights),t}(e),l=Ti(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>A.p_j.adagrad(.01),Adadelta:()=>A.p_j.adadelta(1,.95,ma()),Adam:()=>A.p_j.adam(.001,.9,.999,ma()),Adamax:()=>A.p_j.adamax(.002,.9,.999,ma(),0),RMSProp:()=>A.p_j.rmsprop(.001,.9,0,ma()),SGD:()=>A.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ba(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof A.gaJ))throw new ba("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ba(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>io(e)))}else{const n=io(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ba(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(io(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],cs("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};cs("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===ro?-1!==["accuracy","acc"].indexOf(i)?r=oo:-1!==["crossentropy","ce"].indexOf(i)&&(r=po):this.lossFunctions[e]===no?-1!==["accuracy","acc"].indexOf(i)?r=ho:-1!==["crossentropy","ce"].indexOf(i)&&(r=mo):-1!==["accuracy","acc"].indexOf(i)?r=uo:-1!==["crossentropy","ce"].indexOf(i)&&(r=fo),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=yo(i);s=e,n=""+bo(i)}let t;cs(n,(()=>{t=s})),a(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Po(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return Sa(this.testLoop(i,s,r,n.verbose,n.steps))}finally{qo(a[0],e),qo(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new xa("Verbose mode is not implemented yet.");A.D5U.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=A.lub((()=>{if(t.value){const{xs:n,ys:r}=Lo(e,t.value),i=n.concat(r),l=A.lub((()=>a(i)));if(A.B90(i),0===u)for(let e=0;e<l.length;++e)s.push((0,A.iD$)(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=A.lub((()=>A.IHx(s[e],A.dC7(c,t)))),u>0&&A.B90(n)}A.B90(l),o+=c,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=A.hiC(s[e],o),A.B90(t)}return Sa(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ba(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ba(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ba("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new $o;if(e instanceof A.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ba(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ba(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=_o(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=va(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ba(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return A.lub((()=>{const r=this.checkNumSamples(e);if(n)throw new xa("Verbose predictLoop() is not implemented yet.");const a=Go(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)A.lub((()=>{const n=a[t][0],r=a[t][1],s=Vo(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new $o(i);return _o(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Sa(s.map((e=>A.zoF(e,0))))}))}predict(e,t={}){const n=jo(e);Yo(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Po(r),this.predictLoop(n,r)}finally{qo(n,e)}}predictOnBatch(e){Yo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new ya("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===no?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=Ra(e.map((e=>e.shape[0])));r.sort();const a=Ra(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new ba(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new ba(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!A.D5U.arraysEqual(r,a))throw new ba(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Qo(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Qo(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[Ji,ro,to];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===to&&1===s.shape[s.shape.length-1])throw new ba(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ba(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ba(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Mo(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await zo(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return A.lub((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new xa("Verbose mode is not implemented yet.");if(null!=a)throw new xa("steps mode in testLoop() is not implemented yet");{const r=Go(s,n),a=(0,A.RRF)(bs(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=vs(a,s,o-s),l=Ho(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push((0,A.iD$)(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=A.IHx(i[e],A.dC7(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=A.hiC(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Ia(e,r)>1&&(a+=`_${Ia(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new $o(e),o=_o(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Bo(n,a[e]));const s=A.J69(n);t.push(s),u=0===e?n:A.IHx(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=A.J69(t(r[a],o[a]))}A.CnY(n),s.push(n)}return u=A.J69(u),this.calculateLosses().forEach((e=>{u=A.IHx(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>A.lub((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new $o(s),o=_o(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=A.J69(r(a[e],o[e]));n=0===e?s:A.IHx(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=A.J69(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const p=null==r.batchSize?32:r.batchSize;Po(p);const h=!1,d=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,p);a=d[0],s=d[1],c=d[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new xa("validationData including sample weights is not supported yet."):new ba(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,p);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Vo(a,e,t),a=Vo(a,0,e),l=Vo(s,e,t),s=Vo(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map((e=>"val_"+e)))):(x=null,f=[],w=b.slice());const v=qi(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,l,c,p,h,d,f){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,a,d,"steps_per_epoch");let y;null!=g&&(y=bs(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Ki(o,i,s,h,g,d,a,m,p);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await b.onEpochBegin(i);const s={};{if("batch"===c)throw new xa("batch shuffling is not implemneted yet");c&&A.D5U.shuffle(y);const i=(0,A.RRF)(y),o=Go(g,a);for(let c=0;c<o.length;++c){const p={};if(await b.onBatchBegin(c,p),A.lub((()=>{const h=o[c][0],d=o[c][1],f=vs(i,h,d-h);p.batch=c,p.size=d-h;const g=Ho(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];p[t]=n,A.CnY(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];A.CnY(a),s["val_"+n]=a}}})),await b.onBatchEnd(c,p),Wi(p),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,s),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,p,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null)}finally{e.isTraining=!1,qo(a,t),qo(s,n),qo(u,i),qo(l,o),null!=c&&A.B90(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(A.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),A.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),A.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),A.D5U.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),A.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(Uo(n.validationData))A.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new xa("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=qi(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:h,history:d}=Ki(c,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);h.setModel(e),e.history=d,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let c=0,p=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Lo(e,t.value),s={};s.batch=p,s.size=r[0].shape[0],await h.onBatchBegin(p,s);const i=[];if(null!=n.classWeight){const t=Mo(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await zo(a[e],null,t[e]))}const l=r.concat(a).concat(i),d=o(l);A.B90(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];s[t]=n,A.CnY(n)}await h.onBatchEnd(p,s),Wi(s),p++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=Uo(n.validationData)?Na(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Na(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return A.B90(s),Sa(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=A.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-A.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=Ta(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>Ta(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=Ta(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[Ta(bo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>Ta(bo(e))));{const e={};for(const t in this.metrics)e[t]=Ta(bo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Qi(No(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Ca(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Ca(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ca(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>Ca(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ca(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=A.io.getSaveHandlers(e);if(0===t.length)throw new ba(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ba(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ba("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await A.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Co}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await A.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=A.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;xo(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){xo(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Jo.className="Model",A.m7h.registerClass(Jo);class Zo extends Jo{}async function eu(e,t){"modelTopology"in e||(e={modelTopology:e});let n=(e=e).modelTopology;null!=n.model_config&&(n=n.model_config);const r=Qi(No(n),t);if(null!=e.weightsManifest){const t=await A.io.loadWeights(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),(0,A.B90)(t)}return r}Zo.className="Functional",A.m7h.registerClass(Zo);class tu extends Jo{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:vi("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ba(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof tu||e instanceof Jo;let n;if(t){if(n=e,1!==n.outputs.length)throw new ba("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ba("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ba("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Bi({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ba(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ba("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Mi(this.outputs[0])}this.inboundNodes=[],new Ri({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:va(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Ni(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Jo({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new ya("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ba("Legacy serialization format not supported yet.");a=t}else A.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof tu))throw new xa(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=Qi(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ba("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ba("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function nu(e){return new Jo(e)}function ru(e){return new tu(e)}function au(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=A.io.getLoadHandlers(e,t);if(0===n.length)n.push(A.io.browserHTTPRequest(e,t));else if(n.length>1)throw new ba(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ba("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=Qi(No(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ba("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=A.io.decodeWeights(e,t),r={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),(0,A.B90)(e),(0,A.B90)(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function su(e){return Bi(e)}function iu(e,t){Xi.registerCallbackConstructor(e,t)}tu.className="Sequential",A.m7h.registerClass(tu);class ou extends A.m7h.Serializable{getConfig(){return{}}}class uu extends ou{apply(e,t=1){return function(e,t=1){if(1!==t)throw new xa(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return A.pyx(e)}(e,t)}}uu.className="elu",A.m7h.registerClass(uu);class lu extends ou{apply(e){return A.U8D(e)}}lu.className="selu",A.m7h.registerClass(lu);class cu extends ou{apply(e){return A.UYe(e)}}cu.className="relu",A.m7h.registerClass(cu);class pu extends ou{apply(e){return(0,A.lub)((()=>A.LTh(6,A.UYe(e))))}}pu.className="relu6",A.m7h.registerClass(pu);class hu extends ou{apply(e){return e}}hu.className="linear",A.m7h.registerClass(hu);class du extends ou{apply(e){return A.XD2(e)}}du.className="sigmoid",A.m7h.registerClass(du);class fu extends ou{apply(e){return function(e){return(0,A.lub)((()=>{const t=A.IHx(.5,A.dC7(.2,e));return A.iUl(t,0,1)}))}(e)}}fu.className="hardSigmoid",A.m7h.registerClass(fu);class mu extends ou{apply(e){return A.Wvh(e)}}mu.className="softplus",A.m7h.registerClass(mu);class gu extends ou{apply(e){return function(e){return(0,A.lub)((()=>A.hiC(e,A.IHx(A.WnP(e),1))))}(e)}}gu.className="softsign",A.m7h.registerClass(gu);class yu extends ou{apply(e){return A.AEp(e)}}yu.className="tanh",A.m7h.registerClass(yu);class bu extends ou{apply(e,t=-1){return A.XAC(e,t)}}bu.className="softmax",A.m7h.registerClass(bu);class xu extends ou{apply(e,t=-1){return A.CmS(e,t)}}xu.className="logSoftmax",A.m7h.registerClass(xu);class wu extends ou{apply(e,t=1){return(0,A.lub)((()=>A.dC7(A.XD2(A.dC7(e,t)),e)))}}wu.className="swish",A.m7h.registerClass(wu);class vu extends ou{apply(e){return(0,A.lub)((()=>A.dC7(e,A.AEp(A.Wvh(e)))))}}function ku(e){return e.getClassName()}function Iu(e,t={}){return _a(e,A.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function Su(e){if(null==e){return Iu({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Iu(t)}return e instanceof ou?e:Iu(e)}function Nu(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}vu.className="mish",A.m7h.registerClass(vu);class Tu extends A.m7h.Serializable{}class Cu extends Tu{constructor(e){super(),Nu(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,A.lub)((()=>{let t=(0,A.lls)([1]);return this.hasL1&&(t=(0,A.IHx)(t,(0,A.Smz)(A.dC7(this.l1,(0,A.WnP)(e))))),this.hasL2&&(t=(0,A.IHx)(t,(0,A.Smz)(A.dC7(this.l2,Es(e))))),A.XLQ(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Cu.className="L1L2",A.m7h.registerClass(Cu);const $u={l1l2:"L1L2"};function Au(e){return Aa(e)}function Eu(e,t={}){return _a(e,A.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function _u(e){return null==e?null:"string"==typeof e?Eu({className:e in $u?$u[e]:e,config:{}}):e instanceof Tu?e:Eu(e)}class Du extends Oi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Si(e);let n=(0,A.UYe)(e);return null!=this.maxValue&&(n=(0,A.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Du.className="ReLU",A.m7h.registerClass(Du);class Ru extends Oi{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Si(e);return(0,A.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ru.className="LeakyReLU",A.m7h.registerClass(Ru);class Fu extends Oi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ni(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=_u(e.alphaRegularizer),this.alphaConstraint=Ka(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ba(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Ni(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ei({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Si(e),(0,A.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ti(this.alphaInitializer),alphaRegularizer:Au(this.alphaRegularizer),alphaConstraint:qa(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Fu.className="PReLU",A.m7h.registerClass(Fu);class Ou extends Oi{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new xa(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Si(e);return(0,A.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Ou.className="ELU",A.m7h.registerClass(Ou);class Mu extends Oi{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Si(e);return(0,A.dC7)(n,(0,A.pju)((0,A.pjt)(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Mu.className="ThresholdedReLU",A.m7h.registerClass(Mu);class zu extends Oi{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new bu).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Si(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Bu(e,t,n){if("number"==typeof e)return va(e,t);if(e.length!==t)throw new ba(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ba(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function Lu(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Wu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+ys([n-t,0]);else{if("same"!==r)throw new ba(`Unsupport padding mode: ${r}.`);e*=t}return e}function Uu(e,t){return(0,A.lub)((()=>(is(t),"channelsFirst"===t?A.p4s(e,[0,2,3,1]):e)))}function Pu(e,t){return(0,A.lub)((()=>(is(t),"channelsFirst"===t?A.p4s(e,[0,2,3,4,1]):e)))}function Vu(e,t,n,r=[1,1],a="valid",s,i,o=null){return(0,A.lub)((()=>{if(null==s&&(s="channelsLast"),is(s),3!==e.rank&&4!==e.rank)throw new ba(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ba(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Uu(e,s);if("causal"===a)throw new xa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=A.imm.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=A.p4s(u,[0,3,1,2])),u}))}zu.className="Softmax",A.m7h.registerClass(zu);class Hu extends Oi{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Hu.verifyArgs(t),this.rank=e,za(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new xa(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Bu(t.kernelSize,e,"kernelSize"),this.strides=Bu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,os(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,is(this.dataFormat),this.activation=Su(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ni(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ka(t.biasConstraint),this.biasRegularizer=_u(t.biasRegularizer),this.activityRegularizer=_u(t.activityRegularizer),this.dilationRate=Bu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ba(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ba(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ba(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ka("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Ma(e.kernelSize,"number",1,3))throw new ba(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ku(this.activation),useBias:this.useBias,biasInitializer:ti(this.biasInitializer),biasRegularizer:Au(this.biasRegularizer),activityRegularizer:Au(this.activityRegularizer),biasConstraint:qa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Gu extends Hu{constructor(e,t){super(e,t),this.kernel=null,Gu.verifyArgs(t),this.filters=t.filters,za(this.filters,"filters"),this.kernelInitializer=ni(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ka(t.kernelConstraint),this.kernelRegularizer=_u(t.kernelRegularizer)}build(e){e=Ni(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ba(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,A.lub)((()=>{let t;e=Si(e);const n=null==this.bias?null:this.bias.read(),r=La(this.activation.getClassName());if(null!=r&&2===this.rank)t=Vu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return(0,A.lub)((()=>{if(null==s&&(s="channelsLast"),is(s),3!==e.shape.length)throw new ba(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ba(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ba(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=A.p4s(e,[0,2,1])),"causal"===a)throw new xa("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=A.PAt(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Ds(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Vu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new xa("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return(0,A.lub)((()=>{if(null==s&&(s="channelsLast"),is(s),4!==e.rank&&5!==e.rank)throw new ba(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ba(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=Pu(e,s);if("causal"===a)throw new xa("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=A.pdZ(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Ds(o,n)),"channelsFirst"===s&&(o=A.p4s(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Ni(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Lu(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ti(this.kernelInitializer),kernelRegularizer:Au(this.kernelRegularizer),kernelConstraint:qa(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ba(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class ju extends Gu{constructor(e){super(2,e),ju.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ma(e.kernelSize,"number",1,2))throw new ba(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}ju.className="Conv2D",A.m7h.registerClass(ju);class qu extends Gu{constructor(e){super(3,e),qu.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ba(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}qu.className="Conv3D",A.m7h.registerClass(qu);class Xu extends ju{constructor(e){if(super(e),this.inputSpec=[new Ei({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ba(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Ni(e)).length)throw new ba("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ba("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ei({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return A.lub((()=>{let t=Si(e);if(4!==t.shape.length)throw new ba(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],p=this.strides[1],h=[r,Wu(i,c,u,this.padding),Wu(o,p,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=A.p4s(t,[0,2,3,1]));let d=A.bc(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=A.p4s(d,[0,3,1,2])),null!=this.bias&&(d=Ds(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=Ni(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Wu(t[r],o,s,this.padding),t[a]=Wu(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Xu.className="Conv2DTranspose",A.m7h.registerClass(Xu);class Ku extends qu{constructor(e){if(super(e),this.inputSpec=[new Ei({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ba(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Ni(e)).length)throw new ba("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ba("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ei({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return A.lub((()=>{let t=Si(e);if(5!==t.shape.length)throw new ba(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],p=this.kernelSize[1],h=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Wu(o,d,c,this.padding),Wu(u,f,p,this.padding),Wu(l,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=A.p4s(t,[0,2,3,4,1]));let y=A.$QV(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=A.p4s(y,[0,4,1,2,3])),null!==this.bias&&(y=Ds(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=Ni(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],p=this.strides[2];return t[n]=this.filters,t[r]=Wu(t[r],l,i,this.padding),t[a]=Wu(t[a],c,o,this.padding),t[s]=Wu(t[s],p,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ku.className="Conv3DTranspose",A.m7h.registerClass(Ku);class Qu extends Gu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ba("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ba("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ba(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ni(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=_u(t.depthwiseRegularizer),this.depthwiseConstraint=Ka(t.depthwiseConstraint),this.pointwiseInitializer=ni(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=_u(t.pointwiseRegularizer),this.pointwiseConstraint=Ka(t.pointwiseConstraint)}build(e){if((e=Ni(e)).length<this.rank+2)throw new ba(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ba(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ei({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,A.lub)((()=>{let t;if(e=Si(e),1===this.rank)throw new xa("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=A.p4s(e,[0,2,3,1])),t=A.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Ds(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=A.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ti(this.depthwiseInitializer),e.pointwiseInitializer=ti(this.pointwiseInitializer),e.depthwiseRegularizer=Au(this.depthwiseRegularizer),e.pointwiseRegularizer=Au(this.pointwiseRegularizer),e.depthwiseConstraint=qa(this.depthwiseConstraint),e.pointwiseConstraint=qa(this.pointwiseConstraint),e}}Qu.className="SeparableConv";class Yu extends Qu{constructor(e){super(2,e)}}Yu.className="SeparableConv2D",A.m7h.registerClass(Yu);class Ju extends Gu{constructor(e){super(1,e),Ju.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Ma(e.kernelSize,"number",1,1))throw new ba(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ju.className="Conv1D",A.m7h.registerClass(Ju);class Zu extends Oi{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,A.lub)((()=>{if(e=Si(e),"channelsLast"===this.dataFormat){const t=Is(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Is(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Is(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Is(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Zu.className="Cropping2D",A.m7h.registerClass(Zu);class el extends Oi{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,is(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Oa(ts,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return A.lub((()=>{let t=Si(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=A.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?A.BHj.resizeNearestNeighbor(t,[e,r]):A.BHj.resizeBilinear(t,[e,r]);return A.p4s(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?A.BHj.resizeNearestNeighbor(t,[e,r]):A.BHj.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}el.className="UpSampling2D",A.m7h.registerClass(el);class tl extends Hu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ni(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ka(e.depthwiseConstraint),this.depthwiseRegularizer=_u(e.depthwiseRegularizer)}build(e){if((e=Ni(e)).length<4)throw new ba(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ba(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return(0,A.lub)((()=>{null==a&&(a="channelsLast"),is(a);let i=Uu(e,a);if(4!==e.rank)throw new ba(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ba(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=A.B10(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=A.p4s(i,[0,3,1,2])),i}))}(e=Si(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Ds(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Ni(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Lu(t,this.kernelSize[0],this.padding,this.strides[0]),s=Lu(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ti(this.depthwiseInitializer),e.depthwiseRegularizer=Au(this.depthwiseRegularizer),e.depthwiseConstraint=qa(this.depthwiseRegularizer),e}}function nl(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ba("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function rl(e,t,n,r=!1,a,s,i=!1,o=!1){return A.lub((()=>{const u=t.shape.length;if(u<3)throw new ba(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(bs(2,u));if(t=A.p4s(t,l),null!=s)throw new xa("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=A.pju(A.pju(a,"bool"),"float32")).rank===u-1&&(a=A.dt4(a,-1)),a=A.p4s(a,l)),r&&(t=A.GYS(t,0),null!=a&&(a=A.GYS(a,0)));const c=[];let p,h=n;const d=t.shape[0],f=A.HHK(t);let m,g;null!=a&&(m=A.HHK(a));for(let t=0;t<d;++t){const n=f[t],r=A.lub((()=>e(n,h)));if(null==a)p=r[0],h=r[1];else{const e=A.lub((()=>{const e=m[t],n=A.luU(A.JpU(e),e);return{output:A.IHx(A.dC7(r[0],e),A.dC7(h[0],n)),newStates:h.map(((t,a)=>A.IHx(A.dC7(r[1][a],e),A.dC7(t,n))))}}));p=e.output,h=e.newStates}o&&c.push(p)}if(o){const e=1;g=A.knu(c,e)}return[p,g,h]}))}tl.className="DepthwiseConv2D",A.m7h.registerClass(tl);class al extends Oi{constructor(e){let t;if(super(e),null==e.cell)throw new ba("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new hl({cells:e.cell}):e.cell,null==t.stateSize)throw new ba("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ei({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?bs(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){ki(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return A.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new xa("Constants support is not implemented in RNN yet.");ki(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ei({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!A.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new ba(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Ei({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,A.lub)((()=>{if(!this.stateful)throw new ga("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ba("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>A.lls([n,e]))):this.states_=[A.lls([n,this.cell.stateSize])];else if(null==e)A.B90(this.states_),null!=this.keptStates&&(A.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>A.lls([n,e]))):this.states_[0]=A.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ba(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):A.B90(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!A.D5U.arraysEqual(r.shape,s))throw new ba(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>A.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nl(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ei({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof _i){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,A.lub)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Si(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ba(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=rl(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const p=this.returnSequences?l:u;return this.returnState?[p].concat(c):p}))}getInitialState(e){return(0,A.lub)((()=>{let t=A.lls(e.shape);return t=A.Smz(t,[1,2]),t=ws(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?Ts(t,[1,e]):t)):this.cell.stateSize>1?[Ts(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===al.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Qi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}al.className="RNN",A.m7h.registerClass(al);class sl extends Oi{}class il extends sl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,za(this.units,"units"),this.activation=Su(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ni(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ni(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ni(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_u(e.kernelRegularizer),this.recurrentRegularizer=_u(e.recurrentRegularizer),this.biasRegularizer=_u(e.biasRegularizer),this.kernelConstraint=Ka(e.kernelConstraint),this.recurrentConstraint=Ka(e.recurrentConstraint),this.biasConstraint=Ka(e.biasConstraint),this.dropout=gs([1,ys([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gs([1,ys([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ni(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{if(2!==(e=e).length)throw new ba(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dl({ones:()=>A.JpU(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dl({ones:()=>A.JpU(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=$s(null!=s?A.dC7(e,s):e,this.kernel.read()),null!=this.bias&&(a=Ds(a,this.bias.read())),null!=i&&(n=A.dC7(n,i));let o=A.IHx(a,$s(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ku(this.activation),useBias:this.useBias,kernelInitializer:ti(this.kernelInitializer),recurrentInitializer:ti(this.recurrentInitializer),biasInitializer:ti(this.biasInitializer),kernelRegularizer:Au(this.kernelRegularizer),recurrentRegularizer:Au(this.recurrentRegularizer),biasRegularizer:Au(this.biasRegularizer),activityRegularizer:Au(this.activityRegularizer),kernelConstraint:qa(this.kernelConstraint),recurrentConstraint:qa(this.recurrentConstraint),biasConstraint:qa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}il.className="SimpleRNNCell",A.m7h.registerClass(il);class ol extends al{constructor(e){e.cell=new il(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}ol.className="SimpleRNN",A.m7h.registerClass(ol);class ul extends sl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ba("GRUCell does not support reset_after parameter set to true.");this.units=e.units,za(this.units,"units"),this.activation=Su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ni(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ni(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ni(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=_u(e.kernelRegularizer),this.recurrentRegularizer=_u(e.recurrentRegularizer),this.biasRegularizer=_u(e.biasRegularizer),this.kernelConstraint=Ka(e.kernelConstraint),this.recurrentConstraint=Ka(e.recurrentConstraint),this.biasConstraint=Ka(e.biasConstraint),this.dropout=gs([1,ys([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gs([1,ys([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Ni(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,A.lub)((()=>{if(2!==(e=e).length)throw new ba(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dl({ones:()=>A.JpU(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dl({ones:()=>A.JpU(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=A.dC7(e,a[0]));let l=$s(e,this.kernel.read());this.useBias&&(l=Ds(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A.dC7(r,s[0]));const c=this.recurrentKernel.read(),[p,h]=A.Vl2(c,[2*this.units,this.units],c.rank-1),d=$s(r,p),[f,m,g]=A.Vl2(l,3,l.rank-1),[y,b]=A.Vl2(d,2,d.rank-1);i=this.recurrentActivation.apply(A.IHx(f,y)),o=this.recurrentActivation.apply(A.IHx(m,b));const x=$s(A.dC7(o,r),h);u=this.activation.apply(A.IHx(g,x));const w=A.IHx(A.dC7(i,r),A.dC7(A.IHx(1,A.W76(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ku(this.activation),recurrentActivation:ku(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ti(this.kernelInitializer),recurrentInitializer:ti(this.recurrentInitializer),biasInitializer:ti(this.biasInitializer),kernelRegularizer:Au(this.kernelRegularizer),recurrentRegularizer:Au(this.recurrentRegularizer),biasRegularizer:Au(this.biasRegularizer),activityRegularizer:Au(this.activityRegularizer),kernelConstraint:qa(this.kernelConstraint),recurrentConstraint:qa(this.recurrentConstraint),biasConstraint:qa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}ul.className="GRUCell",A.m7h.registerClass(ul);class ll extends al{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ul(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}ll.className="GRU",A.m7h.registerClass(ll);class cl extends sl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,za(this.units,"units"),this.activation=Su(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Su(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ni(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ni(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ni(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=_u(e.kernelRegularizer),this.recurrentRegularizer=_u(e.recurrentRegularizer),this.biasRegularizer=_u(e.biasRegularizer),this.kernelConstraint=Ka(e.kernelConstraint),this.recurrentConstraint=Ka(e.recurrentConstraint),this.biasConstraint=Ka(e.biasConstraint),this.dropout=gs([1,ys([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=gs([1,ys([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Ni(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends zs{apply(t,r){const a=e.apply([n]),s=(new Ls).apply([n]),i=e.apply([2*n]);return Ns(Ns(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,A.lub)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ba(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dl({ones:()=>A.JpU(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dl({ones:()=>A.JpU(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=A.dC7(e,s[0]));let p=$s(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=A.dC7(r,i[0])),p=A.IHx(p,$s(r,this.recurrentKernel.read())),this.useBias&&(p=Ds(p,this.bias.read()));const[h,d,f,m]=A.Vl2(p,4,p.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(d),l=A.IHx(A.dC7(u,a),A.dC7(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=A.dC7(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ku(this.activation),recurrentActivation:ku(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ti(this.kernelInitializer),recurrentInitializer:ti(this.recurrentInitializer),biasInitializer:ti(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Au(this.kernelRegularizer),recurrentRegularizer:Au(this.recurrentRegularizer),biasRegularizer:Au(this.biasRegularizer),activityRegularizer:Au(this.activityRegularizer),kernelConstraint:qa(this.kernelConstraint),recurrentConstraint:qa(this.recurrentConstraint),biasConstraint:qa(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}cl.className="LSTMCell",A.m7h.registerClass(cl);class pl extends al{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new cl(e),super(e)}call(e,t){return(0,A.lub)((()=>{null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}pl.className="LSTM",A.m7h.registerClass(pl);class hl extends sl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,A.lub)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;ki(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{cs(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Qi(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return $i(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Ai(t)}}function dl(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Rs(t(),n),i=()=>Fs(s,t,r);return!a||a<=1?A.CnY(i().clone()):Array(a).fill(void 0).map(i).map((e=>A.CnY(e.clone())))}hl.className="StackedRNNCells",A.m7h.registerClass(hl);class fl extends al{constructor(e){if(e.unroll)throw new xa("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new xa("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ei({ndim:5})]}call(e,t){return A.lub((()=>{if(null!=this.cell.dropoutMask&&(A.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(A.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ba("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return A.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=A.lls(a);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){A.lub((()=>{if(!this.stateful)throw new ga("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ba("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>A.lls(a))):this.states_=[A.lls(a)];else if(null==e)A.B90(this.states_),null!=this.keptStates&&(A.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>A.lls(a))):this.states_[0]=A.lls(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ba(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):A.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!A.D5U.arraysEqual(n.shape,r))throw new ba(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>A.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Lu(u,r[0],a,s[0],i[0]),p=Lu(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,p]:[c,p,n]]}}fl.className="ConvRNN2D";class ml extends cl{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,za(this.filters,"filters"),this.kernelSize=Bu(n,2,"kernelSize"),this.kernelSize.forEach((e=>za(e,"kernelSize"))),this.strides=Bu(r||1,2,"strides"),this.strides.forEach((e=>za(e,"strides"))),this.padding=a||"valid",os(this.padding),this.dataFormat=s||"channelsLast",is(this.dataFormat),this.dilationRate=Bu(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>za(e,"dilationRate")))}build(e){var t;e=Ni(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ba(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends zs{apply(e,t){return Ss([n.apply([r]),A.iUs([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return A.lub((()=>{if(3!==e.length)throw new ba(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=dl({ones:()=>A.JpU(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?A.dC7(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),p=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=dl({ones:()=>A.JpU(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let d=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3);const[y,b,x,w]=A.Vl2(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?A.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),p=this.inputConv(p,w,S,this.padding);const[N,T,C,$]=A.Vl2(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(A.IHx(u,d)),_=this.recurrentActivation.apply(A.IHx(l,f)),D=A.IHx(A.dC7(_,s),A.dC7(E,this.activation.apply(A.IHx(c,m)))),R=A.dC7(this.recurrentActivation.apply(A.IHx(p,g)),this.activation.apply(D));return[R,R,D]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=A.Tek(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ds(a,n,this.dataFormat):a}recurrentConv(e,t){return A.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}ml.className="ConvLSTM2DCell",A.m7h.registerClass(ml);class gl extends fl{constructor(e){const t=new ml(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}gl.className="ConvLSTM2D",A.m7h.registerClass(gl);class yl extends Oi{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Fs((()=>Rs(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}yl.className="Dropout",A.m7h.registerClass(yl);class bl extends yl{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}bl.className="SpatialDropout1D",A.m7h.registerClass(bl);class xl extends Oi{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,za(this.units,"units"),this.activation=Su(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ni(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ni(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ka(e.kernelConstraint),this.biasConstraint=Ka(e.biasConstraint),this.kernelRegularizer=_u(e.kernelRegularizer),this.biasRegularizer=_u(e.biasRegularizer),this.activityRegularizer=_u(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Ni(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Ni(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e),r=La(this.activation.getClassName());let a;return null!=r?a=$s(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=$s(n,this.kernel.read()),null!=this.bias&&(a=Ds(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:ku(this.activation),useBias:this.useBias,kernelInitializer:ti(this.kernelInitializer),biasInitializer:ti(this.biasInitializer),kernelRegularizer:Au(this.kernelRegularizer),biasRegularizer:Au(this.biasRegularizer),activityRegularizer:Au(this.activityRegularizer),kernelConstraint:qa(this.kernelConstraint),biasConstraint:qa(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xl.className="Dense",A.m7h.registerClass(xl);class wl extends Oi{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ni(e);for(const t of e.slice(1))if(null==t)throw new ba(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ms(e,1)]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);let n=Si(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=(0,A.p4s)(n,e)}return function(e){if(e.rank<=1)throw new ba(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ms(e.shape,1)];return A.XLQ(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}wl.className="Flatten",A.m7h.registerClass(wl);class vl extends Oi{constructor(e){super(e),this.supportsMasking=!0,this.activation=Su(e.activation)}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ku(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}vl.className="Activation",A.m7h.registerClass(vl);class kl extends Oi{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,A.lub)((()=>{return e=Si(e),t=e,n=this.n,(0,A.lub)((()=>{if(2!==t.shape.length)throw new ba(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ts(ws(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}kl.className="RepeatVector",A.m7h.registerClass(kl);class Il extends Oi{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new ba("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=ms(e);if(null!==s){if(0===a||i%a!=0)throw new ba(n);r[s]=i/a}else if(i!==a)throw new ba(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return(0,A.XLQ)(n,a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Il.className="Reshape",A.m7h.registerClass(Il);class Sl extends Oi{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=bs(1,e.dims.length+1);if(!A.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ei({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Ni(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return(0,A.p4s)(Si(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Sl.className="Permute",A.m7h.registerClass(Sl);class Nl extends Oi{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Si(e);return(0,A.YjB)((0,A.Quu)(n,this.maskValue),-1)}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e),r=(0,A.YjB)((0,A.Quu)(n,this.maskValue),-1,!0);return(0,A.dC7)(n,(0,A.pju)(r,n.dtype))}))}}Nl.className="Masking",A.m7h.registerClass(Nl);class Tl extends Oi{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Na(e.inputLength))}this.inputDim=e.inputDim,za(this.inputDim,"inputDim"),this.outputDim=e.outputDim,za(this.outputDim,"outputDim"),this.embeddingsInitializer=ni(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=_u(e.embeddingsRegularizer),this.activityRegularizer=_u(e.activityRegularizer),this.embeddingsConstraint=Ka(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,A.lub)((()=>this.maskZero?(e=Si(e),(0,A.Quu)(e,(0,A.P84)(e))):null))}computeOutputShape(e){if(e=Ni(e),null==this.inputLength)return[...e,this.outputDim];const t=Na(this.inputLength);if(t.length!==e.length-1)throw new ba(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ba(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);let n=Si(e);"int32"!==n.dtype&&(n=xs(n,"int32"));const r=As(this.embeddings.read(),(0,A.XLQ)(n,[n.size]));return(0,A.XLQ)(r,Ni(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ti(this.embeddingsInitializer),embeddingsRegularizer:Au(this.embeddingsRegularizer),activityRegularizer:Au(this.activityRegularizer),embeddingsConstraint:qa(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Tl.className="Embedding",A.m7h.registerClass(Tl);class Cl extends Oi{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new xa}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ba("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ni(e)]),(e=e).length<2)throw new ba(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ra(t),t.length>1)throw new ba(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===Ra(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,A.lub)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=ys(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ws(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=A.XLQ(r,[a].concat(ms(e.slice(1))));i=A.p4s(i,[1,0]),i=A.XLQ(i,s),t.push(i),n=!0}else if(e>1){const a=bs(1,e).concat([0]);t.push(A.p4s(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=A.XLQ(A.p4s(A.XLQ(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(bs(0,a-1));r=A.p4s(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ra(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return A.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ba("`mask` should be an Array");if(!Array.isArray(e))throw new ba("`inputs` should be an Array");if(t.length!==e.length)throw new ba(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:A.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=A.HvI(n,t[e]);return n}))}}class $l extends Cl{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.IHx(t,e[n]);return t}))}}$l.className="Add",A.m7h.registerClass($l);class Al extends Cl{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.dC7(t,e[n]);return t}))}}Al.className="Multiply",A.m7h.registerClass(Al);class El extends Cl{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=A.IHx(t,e[n]);return A.dC7(1/e.length,t)}))}}El.className="Average",A.m7h.registerClass(El);class _l extends Cl{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=A.gWQ(t,e[n]);return t}))}}_l.className="Maximum",A.m7h.registerClass(_l);class Dl extends Cl{constructor(e){super(e)}mergeFunction(e){return(0,A.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=A.LTh(t,e[n]);return t}))}}Dl.className="Minimum",A.m7h.registerClass(Dl);class Rl extends Cl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ba("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(A.D5U.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new ba("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,A.lub)((()=>Ss(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ba("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ba("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ba("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ba(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return A.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(A.pju(A.JpU(e[n]),"bool")):t[n].rank<e[n].rank?r.push(A.dt4(t[n],-1)):r.push(t[n]);const a=A.zoF(r,this.axis);return A.$6P(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Fl(e,t){for(;e<0;)e+=t;return e}Rl.className="Concatenate",A.m7h.registerClass(Rl);class Ol extends Cl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){A.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new xa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ba(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ba(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Fl(t,e[n].shape.length))):[Fl(this.axes,n.shape.length),Fl(this.axes,r.shape.length)],this.normalize&&(n=Yi(n,t[0]),r=Yi(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new xa("batchDot is not implemented for tensors of 4D or higher rank yet");if(A.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),A.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new xa("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return A.lub((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=A.XLQ(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=A.XLQ(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?A.Smz(A.dC7(e,t),s[0]):A.Smz(A.dC7(A.p4s(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=A.OI3(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=A.L9e(i,t)}return 1===i.shape.length&&(i=A.dt4(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Fl(this.axes,e.length),Fl(this.axes,t.length)],n}computeOutputShape(e){A.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new xa("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Ol.className="Dot",A.m7h.registerClass(Ol);class Ml extends Oi{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e);return Fs((()=>(0,A.IHx)(Cs(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}Ml.className="GaussianNoise",A.m7h.registerClass(Ml);class zl extends Oi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t);const n=Si(e);return this.rate>0&&this.rate<1?Fs((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return(0,A.dC7)(n,Cs(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}zl.className="GaussianDropout",A.m7h.registerClass(zl);class Bl extends Oi{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Si(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,A.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Fs((()=>{const t=Si(e),r=-1.7580993408473766;let a=(0,A.brS)((0,A.LGj)(n),this.rate);a=xs(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=(0,A.IHx)((0,A.dC7)(t,a),(0,A.dC7)((0,A.IHx)(a,-1),r));return(0,A.IHx)((0,A.dC7)(o,s),i)}),(()=>Si(e)),t.training||!1)}return e}))}}function Ll(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=A.Dxk(e,t,n,r,a,s);else if(3===e.rank)i=A.JY5(e,t,n,r,a,s);else{if(4!==e.rank)throw new xa(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=A.p3b(e,t,n,r,a,s)}return i}Bl.className="AlphaDropout",A.m7h.registerClass(Bl);class Wl extends Oi{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ni(e.betaInitializer||"zeros"),this.gammaInitializer=ni(e.gammaInitializer||"ones"),this.movingMeanInitializer=ni(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ni(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ka(e.betaConstraint),this.gammaConstraint=Ka(e.gammaConstraint),this.betaRegularizer=_u(e.betaRegularizer),this.gammaRegularizer=_u(e.gammaRegularizer)}build(e){e=Ni(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ba(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ei({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,A.lub)((()=>{const n=null!=t.training&&t.training,r=Si(e),a=r.shape,s=a.length,i=bs(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=va(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!A.D5U.arraysEqual(l,bs(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=(0,A.XLQ)(this.movingMean.read(),u),t=(0,A.XLQ)(this.movingVariance.read(),u),n=this.center?(0,A.XLQ)(this.beta.read(),u):null,a=this.scale?(0,A.XLQ)(this.gamma.read(),u):null;return Ll(r,e,t,n,a,this.epsilon)}return Ll(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,h,d]=function(e,t,n,r,a=.001){return A.D5U.arraysEqual(r.slice().sort(),bs(0,e.rank-1))?function(e,t,n,r,a=.001){return(0,A.lub)((()=>{const s=A.Gi7(e,r),i=s.mean,o=s.variance;return[Ll(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return(0,A.lub)((()=>{const s=A.Gi7(e,r),i=s.mean,o=s.variance,u=[];for(const t of bs(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=(0,A.XLQ)(i,u),c=(0,A.XLQ)(o,u),p=null==t?null:(0,A.XLQ)(t,u),h=null==n?null:(0,A.XLQ)(n,u);return[Ll(e,l,c,h,p,a),i,o]}))}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{A.lub((()=>{const r=1-n,a=e.read(),s=A.dC7(A.luU(a,t),r);e.write(A.luU(a,s))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,d,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ti(this.betaInitializer),gammaInitializer:ti(this.gammaInitializer),movingMeanInitializer:ti(this.movingMeanInitializer),movingVarianceInitializer:ti(this.movingVarianceInitializer),betaRegularizer:Au(this.betaRegularizer),gammaRegularizer:Au(this.gammaRegularizer),betaConstraint:qa(this.betaConstraint),gammaConstraint:qa(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Wl.className="BatchNormalization",A.m7h.registerClass(Wl);class Ul extends Oi{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ni(e.betaInitializer||"zeros"),this.gammaInitializer=ni(e.gammaInitializer||"ones"),this.betaRegularizer=_u(e.betaRegularizer),this.gammaRegularizer=_u(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Ni(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ra(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Si(e),r=n.shape,a=r.length;return(0,A.lub)((()=>{let{mean:e,variance:t}=(0,A.Gi7)(n,this.axis,!0);const s=va(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?A.XLQ(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=A.Gg6(e,l),t=A.Gg6(t,l),o=A.Gg6(o,c),u=A.Gg6(u,c),Ll(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ti(this.betaInitializer),gammaInitializer:ti(this.gammaInitializer),betaRegularizer:Au(this.betaRegularizer),gammaRegularizer:Au(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}Ul.className="LayerNormalization",A.m7h.registerClass(Ul);class Pl extends Oi{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ba(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ba(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ba(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ei({ndim:4})]}computeOutputShape(e){let t,n;return e=Ni(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,A.lub)((()=>{return t=Si(e),n=this.padding,r=this.dataFormat,(0,A.lub)((()=>{if(4!==t.rank)throw new ba(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ba("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ba(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],A.vku(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Vl(e,t,n,r,a,s){return(0,A.lub)((()=>{let i;is(a),us(s),os(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Uu(e,a);const o="same"===r?"same":"valid";return i="max"===s?A._sB(e,t,n,o):A.wS1(e,t,n,o),"channelsFirst"===a&&(i=A.p4s(i,[0,3,1,2])),i}))}function Hl(e,t,n,r,a,s){return(0,A.lub)((()=>{let i;is(a),us(s),os(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=Pu(e,a);const o="same"===r?"same":"valid";return i="max"===s?A.YQQ(e,t,n,o):A.uR5(e,t,n,o),"channelsFirst"===a&&(i=A.p4s(i,[0,4,1,2,3])),i}))}Pl.className="ZeroPadding2D",A.m7h.registerClass(Pl);class Gl extends Oi{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ba(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(za(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ba(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}za(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,os(this.padding),this.inputSpec=[new Ei({ndim:3})]}computeOutputShape(e){const t=Lu((e=Ni(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,A.lub)((()=>{this.invokeCallHook(e,t),e=ws(Si(e),2);const n=this.poolingFunction(Si(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return A.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class jl extends Gl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Vl(e,t,n,r,a,"max")}}jl.className="MaxPooling1D",A.m7h.registerClass(jl);class ql extends Gl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Vl(e,t,n,r,a,"avg")}}ql.className="AveragePooling1D",A.m7h.registerClass(ql);class Xl extends Oi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ba(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];za(this.poolSize,"poolSize"),za(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,is(this.dataFormat),os(this.padding),this.inputSpec=[new Ei({ndim:4})]}computeOutputShape(e){e=Ni(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Lu(t,this.poolSize[0],this.padding,this.strides[0]),n=Lu(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,A.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Si(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Kl extends Xl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Vl(e,t,n,r,a,"max")}}Kl.className="MaxPooling2D",A.m7h.registerClass(Kl);class Ql extends Xl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Vl(e,t,n,r,a,"avg")}}Ql.className="AveragePooling2D",A.m7h.registerClass(Ql);class Yl extends Oi{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ba(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];za(this.poolSize,"poolSize"),za(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,is(this.dataFormat),os(this.padding),this.inputSpec=[new Ei({ndim:5})]}computeOutputShape(e){e=Ni(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Lu(t,this.poolSize[0],this.padding,this.strides[0]),n=Lu(n,this.poolSize[1],this.padding,this.strides[1]),r=Lu(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return(0,A.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Si(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Jl extends Yl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Hl(e,t,n,r,a,"max")}}Jl.className="MaxPooling3D",A.m7h.registerClass(Jl);class Zl extends Yl{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return is(a),os(r),Hl(e,t,n,r,a,"avg")}}Zl.className="AveragePooling3D",A.m7h.registerClass(Zl);class ec extends Oi{constructor(e){super(e),this.inputSpec=[new Ei({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new xa}}class tc extends ec{constructor(e){super(e||{})}call(e,t){return(0,A.lub)((()=>{const t=Si(e);return A.J69(t,1)}))}}tc.className="GlobalAveragePooling1D",A.m7h.registerClass(tc);class nc extends ec{constructor(e){super(e||{})}call(e,t){return(0,A.lub)((()=>{const t=Si(e);return A.Fp7(t,1)}))}}nc.className="GlobalMaxPooling1D",A.m7h.registerClass(nc);class rc extends Oi{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,is(this.dataFormat),this.inputSpec=[new Ei({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new xa}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class ac extends rc{call(e,t){return(0,A.lub)((()=>{const t=Si(e);return"channelsLast"===this.dataFormat?A.J69(t,[1,2]):A.J69(t,[2,3])}))}}ac.className="GlobalAveragePooling2D",A.m7h.registerClass(ac);class sc extends rc{call(e,t){return(0,A.lub)((()=>{const t=Si(e);return"channelsLast"===this.dataFormat?A.Fp7(t,[1,2]):A.Fp7(t,[2,3])}))}}sc.className="GlobalMaxPooling2D",A.m7h.registerClass(sc);class ic extends Oi{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Qi(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class oc extends ic{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Ni(e)).length<3)throw new ba(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Ni(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return(0,A.lub)((()=>rl(((e,n)=>[Si(this.layer.call(e,t)),[]]),e=Si(e),[],!1,null,null,!1,!0)[1]))}}oc.className="TimeDistributed",A.m7h.registerClass(oc);class uc extends ic{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Qi(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Qi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Oa(as,"BidirectionalMergeMode",a),e.weights)throw new xa("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):Sa(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=nl(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ba("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new Ei({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new xa("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof _i;for(const e of s)if(e instanceof _i!==o)throw new ba("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return(0,A.lub)((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=A.GYS(a,1)),"concat"===this.mergeMode?i=Ss([r,a]):"sum"===this.mergeMode?i=A.IHx(r,a):"ave"===this.mergeMode?i=A.dC7(.5,A.IHx(r,a)):"mul"===this.mergeMode?i=A.dC7(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){cs(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),cs(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Qi(t.layer);if(delete t.layer,null!=t.numConstants)throw new xa("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function lc(e){return new zi(e)}function cc(e){return new Ou(e)}function pc(e){return new Du(e)}function hc(e){return new Ru(e)}function dc(e){return new Fu(e)}function fc(e){return new zu(e)}function mc(e){return new Mu(e)}function gc(e){return new Ju(e)}function yc(e){return new ju(e)}function bc(e){return new Xu(e)}function xc(e){return new qu(e)}function wc(e){return new Ku(e)}function vc(e){return new Yu(e)}function kc(e){return new Zu(e)}function Ic(e){return new el(e)}function Sc(e){return new tl(e)}function Nc(e){return new vl(e)}function Tc(e){return new xl(e)}function Cc(e){return new yl(e)}function $c(e){return new bl(e)}function Ac(e){return new wl(e)}function Ec(e){return new kl(e)}function _c(e){return new Il(e)}function Dc(e){return new Sl(e)}function Rc(e){return new Tl(e)}function Fc(e){return new $l(e)}function Oc(e){return new El(e)}function Mc(e){return new Rl(e)}function zc(e){return new _l(e)}function Bc(e){return new Dl(e)}function Lc(e){return new Al(e)}function Wc(e){return new Ol(e)}function Uc(e){return new Wl(e)}function Pc(e){return new Ul(e)}function Vc(e){return new Pl(e)}function Hc(e){return new ql(e)}function Gc(e){return Hc(e)}function jc(e){return Hc(e)}function qc(e){return new Ql(e)}function Xc(e){return qc(e)}function Kc(e){return qc(e)}function Qc(e){return new Zl(e)}function Yc(e){return Qc(e)}function Jc(e){return Qc(e)}function Zc(e){return new tc(e)}function ep(e){return new ac(e)}function tp(e){return new nc(e)}function np(e){return new sc(e)}function rp(e){return new jl(e)}function ap(e){return new Kl(e)}function sp(e){return new Jl(e)}function ip(e){return new ll(e)}function op(e){return new ul(e)}function up(e){return new pl(e)}function lp(e){return new cl(e)}function cp(e){return new ol(e)}function pp(e){return new il(e)}function hp(e){return new gl(e)}function dp(e){return new ml(e)}function fp(e){return new al(e)}function mp(e){return new hl(e)}function gp(e){return new uc(e)}function yp(e){return new oc(e)}uc.className="Bidirectional",A.m7h.registerClass(uc);const bp=tp,xp=np,wp=rp,vp=ap;function kp(e){return new Ml(e)}function Ip(e){return new zl(e)}function Sp(e){return new Bl(e)}function Np(e){return new Nl(e)}function Tp(e,t){return oo(e,t)}function Cp(e,t){return po(e,t)}function $p(e,t){return ho(e,t)}function Ap(e,t){return uo(e,t)}function Ep(e,t){return fo(e,t)}function _p(e,t){return co(e,t)}function Dp(e,t){return function(e,t){return(0,A.lub)((()=>{const n=lo(e,t),r=function(e,t){return(0,A.lub)((()=>A.pju(A.Smz(A.HvI(A.DgJ(e,1),A.DgJ(t,0))),"float32")))}(e,t),a=A.IHx(n,r);return A.pju(A.arb(A.pjt(a,0),A.hiC(n,a),0),"float32")}))}(e,t)}function Rp(e,t){return ao(e,t)}function Fp(e,t){return Zi(e,t)}function Op(e,t){return eo(e,t)}function Mp(e,t){return eo(e,t)}function zp(e,t){return eo(e,t)}function Bp(e,t){return Ji(e,t)}function Lp(e,t){return Ji(e,t)}function Wp(e,t){return Ji(e,t)}function Up(e){return new Cu(e)}function Pp(e){return Nu(t=e),new Cu({l1:null!=t?t.l1:null,l2:0});var t}function Vp(e){return Nu(t=e),new Cu({l2:null!=t?t.l2:null,l1:0});var t}class Hp extends Pi{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Jo))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function Gp(e,t){return e<t}function jp(e,t){return e>t}class qp extends Hp{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new xa("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=Gp:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=jp:this.monitorFunc=Gp,this.monitorFunc===Gp&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===Gp?1/0:-1/0}async onEpochEnd(e,t){await Li(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const Xp={earlyStopping:function(e){return new qp(e)}};var Kp,Qp;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Kp||(Kp={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Qp||(Qp={}));const Yp={};function Jp(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Yp[e]=n}function Zp(e){return Yp[e]}function eh(e){delete Yp[e]}function th(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return nh(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>nh(e,n,r,a)));const o=nh(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:A.D5U.toNestedArray(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function nh(e,t,n,r){const[a,s]=sh(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[ah(a,e)]));return void 0!==i?t[ah(a,i)][s]:void 0}function rh(e,t){const[n,r,a]=sh(e);return[ah(n,t&&t.currentContextId),r,a]}function ah(e,t){return t?`${e}-${t}`:e}function sh(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function ih(e,t,n){let r=th("pad",e,t,n);if("explicit"===r){r=th("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function oh(e){return e.kept?e:(0,A.d9v)(e)}const uh=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lh=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],ch=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],ph=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],hh=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],dh=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],fh=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],mh=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],gh=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],yh=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],bh=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],xh=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],wh=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],vh=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],kh=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],Ih=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],Sh=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],Nh=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],Th=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Ch{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[l,c,p,h,d,f,m,g,y,b,x,w,v,k,I,S,N,T,C].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const p=Object.keys(i);p.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=rh(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(c).length?p.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=rh(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=rh(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(d.initNodes=s),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Zp(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=Ah(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ah(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Lh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Lh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=_h(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=_h(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Bh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Bh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=Eh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Eh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Uh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Uh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=zh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=zh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Wh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Wh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=Fh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Fh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Oh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Oh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=Rh(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Rh(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=rh(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Dh(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[a,,s]=rh(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=rh(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function $h(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=(0,A.OBj)().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function Ah(e,t,n,r=!1){const a=e[t];return null!=a?$h(a.s,r):n}function Eh(e,t,n){const r=e[t];return r?r.b:n}function _h(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function Dh(e){switch("string"==typeof e&&(e=Kp[e]),e){case Kp.DT_FLOAT:return"float32";case Kp.DT_INT32:case Kp.DT_INT64:case Kp.DT_INT8:case Kp.DT_UINT8:return"int32";case Kp.DT_BOOL:return"bool";case Kp.DT_DOUBLE:return"float32";case Kp.DT_STRING:return"string";default:return null}}function Rh(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function Fh(e,t,n){const r=e[t];return r&&r.type?Dh(r.type):n}function Oh(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>Dh(e))):n}function Mh(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function zh(e,t,n){const r=e[t];return r&&r.shape?Mh(r.shape):n}function Bh(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Lh(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>$h(e,r))):n}function Wh(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>Mh(e))):n}function Uh(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Ph{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return nh(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return nh(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return _h(this.node.rawAttrs,e,t);if(null!=n.s)return Ah(this.node.rawAttrs,e,t);if(null!=n.b)return Eh(this.node.rawAttrs,e,t);if(null!=n.shape)return zh(this.node.rawAttrs,e,t);if(null!=n.type)return Fh(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Bh(this.node.rawAttrs,e,t);if(null!=n.list.s)return Lh(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Wh(this.node.rawAttrs,e,t);if(null!=n.list.b)return Uh(this.node.rawAttrs,e,t);if(null!=n.list.type)return Oh(this.node.rawAttrs,e,t)}return t}}var Vh=n(3135),Hh=n(1661),Gh=n(4386),jh=n(766);function qh(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){A.D5U.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];A.D5U.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function Xh(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Kh(e,t,n){let r=Qh(e,n);const a=!Xh(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Qh(e.shape,r)})),!Xh(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Qh(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Yh{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=(0,A.iD$)(0),(0,A.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),qh(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,(0,A.CnY)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return(0,A.XeE)([],[0].concat(this.elementShape));const n=this.readMany(e);return qh(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,A.knu)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return(0,A.XeE)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return qh(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,A.zoF)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,(0,A.HHK)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];(0,A.lub)((()=>{t=(0,A.XLQ)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=(0,A.XLQ)((0,A.tPi)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Jh{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);qh(t,e.shape,"TensorList shape mismatch: "),(0,A.CnY)(e)})),this.idTensor=(0,A.iD$)(0),this.maxNumElements=r,(0,A.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Jh([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);qh(e,this.elementShape,"TensorList shape mismatch: ");const r=Kh(this.elementShape,this.tensors,e);return(0,A.lub)((()=>{const e=this.tensors.map((e=>(0,A.XLQ)(e,r)));return(0,A.knu)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Kh(this.elementShape,this.tensors,e),r=this.tensors.pop();return qh(r.shape,e,"TensorList shape mismatch: "),(0,A.XLQ)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(qh(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,A.CnY)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);qh(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Kh(this.elementShape,this.tensors,t);return(0,A.XLQ)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);qh(this.elementShape,t.shape,"TensorList shape mismatch: "),(0,A.CnY)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);qh(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Kh(this.elementShape,this.tensors,n);return 0===e.length?(0,A.XeE)([],[0].concat(r)):(0,A.lub)((()=>{const t=e.map((e=>(0,A.XLQ)(this.tensors[e],r)));return(0,A.knu)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);qh(this.elementShape,t,"TensorList shape mismatch: ");const n=Kh(this.elementShape,this.tensors,t);return 0===this.size()?(0,A.XeE)([],[0].concat(n)):(0,A.lub)((()=>{const e=this.tensors.map((e=>(0,A.XLQ)(e,n)));return(0,A.zoF)(e,0)}))}}var Zh=n(4624),ed=n(473),td=n(6877),nd=n(1749),rd=n(5020);function ad(e,t,n){const[r,a]=th("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=th("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=th("strides",e,t,n),p=ih(e,t,n),h=th("dataFormat",e,t,n).toUpperCase(),d=th("dilations",e,t,n);let[f,m]=th("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:p,dataFormat:h,dilations:d,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:th("leakyreluAlpha",e,t,n)}}var sd=n(4006),id=n(4135),od=n(686),ud=n(5002),ld=n(7245),cd=n(3596),pd=n(4600),hd=n(6380),dd=n(6567);function fd(e,t,n){return{boxes:th("boxes",e,t,n),scores:th("scores",e,t,n),maxOutputSize:th("maxOutputSize",e,t,n),iouThreshold:th("iouThreshold",e,t,n),scoreThreshold:th("scoreThreshold",e,t,n),softNmsSigma:th("softNmsSigma",e,t,n)}}var md=n(6092);class gd{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=(0,A.iD$)(0),this.tensorMap=new Map,(0,A.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return z.i(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),(0,A.lub)((()=>{const e=(0,A.HHK)(t),r=n.length,a=e.length;A.D5U.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];(0,A.CnY)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return(0,A.lub)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return(0,A.knu)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var yd=n(4653),bd=n(9758),xd=n(3865),wd=n(5746),vd=n(3100),kd=n(7494);function Id(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return A.lub((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[J.I(th("a",e,t,n),th("b",e,t,n))];case"AddN":return[Vh.Q(th("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ur.w(th("a",e,t,n),th("b",e,t,n))];case"Mul":return[D.d(th("a",e,t,n),th("b",e,t,n))];case"RealDiv":case"Div":return[O.h(th("a",e,t,n),th("b",e,t,n))];case"DivNoNan":return[mr.N(th("a",e,t,n),th("b",e,t,n))];case"FloorDiv":return[vr.q(th("a",e,t,n),th("b",e,t,n))];case"Sub":return[W.l(th("a",e,t,n),th("b",e,t,n))];case"Minimum":return[Lr.L(th("a",e,t,n),th("b",e,t,n))];case"Maximum":return[Un.g(th("a",e,t,n),th("b",e,t,n))];case"Pow":return[jt.s(th("a",e,t,n),th("b",e,t,n))];case"SquaredDifference":return[oa.$(th("a",e,t,n),th("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[jn.W(th("x",e,t,n))];case"Acos":return[Xn.K(th("x",e,t,n))];case"Acosh":return[Kn._(th("x",e,t,n))];case"Asin":return[er.Z(th("x",e,t,n))];case"Asinh":return[tr.V(th("x",e,t,n))];case"Atan":return[nr.z(th("x",e,t,n))];case"Atan2":return[rr.f(th("x",e,t,n),th("y",e,t,n))];case"Atanh":return[ar.C(th("x",e,t,n))];case"Ceil":return[ur.m(th("x",e,t,n))];case"Complex":return[Hh.P(th("real",e,t,n),th("imag",e,t,n))];case"Cos":return[dn.m(th("x",e,t,n))];case"Cosh":return[mn.f(th("x",e,t,n))];case"Elu":return[yr.p(th("x",e,t,n))];case"Erf":return[br.q(th("x",e,t,n))];case"Exp":return[Xe.Q(th("x",e,t,n))];case"Expm1":return[xr.t(th("x",e,t,n))];case"Floor":return[Ot.G(th("x",e,t,n))];case"Log":return[Gt.c(th("x",e,t,n))];case"Log1p":return[Dr.K(th("x",e,t,n))];case"Imag":return[Gh.a(th("x",e,t,n))];case"Neg":return[M.W(th("x",e,t,n))];case"Reciprocal":return[Kr.M(th("x",e,t,n))];case"Real":return[jh.k(th("x",e,t,n))];case"Relu":return[Qr.U(th("x",e,t,n))];case"Round":return[ta.N(th("x",e,t,n))];case"Selu":return[na.U(th("x",e,t,n))];case"Sigmoid":return[vn.X(th("x",e,t,n))];case"Sin":return[Oe.O(th("x",e,t,n))];case"Sign":return[aa.X(th("x",e,t,n))];case"Sinh":return[ze.R(th("x",e,t,n))];case"Softplus":return[ia.W(th("x",e,t,n))];case"Sqrt":return[B._(th("x",e,t,n))];case"Square":return[L.h(th("x",e,t,n))];case"Tanh":return[pa.A(th("x",e,t,n))];case"Tan":return[ca.O(th("x",e,t,n))];case"ClipByValue":return[lr.i(th("x",e,t,n),th("clipValueMin",e,t,n),th("clipValueMax",e,t,n))];case"Relu6":return[Yr.b(th("x",e,t,n))];case"Rsqrt":return[tt.b(nh(e.inputNames[0],t,n))];case"Prod":return[Xr.W(th("x",e,t,n),th("axes",e,t,n))];case"LeakyRelu":return[Cr.h(th("x",e,t,n),th("alpha",e,t,n))];case"Prelu":return[qr.A(th("x",e,t,n),th("alpha",e,t,n))];case"IsNan":return[Tr.i(nh(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=th("thenBranch",e,t,n),a=th("elseBranch",e,t,n),s=th("cond",e,t,n),i=th("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=th("body",e,t,n),a=th("cond",e,t,n),s=th("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[oh(th("pred",e,t,n))];case"Switch":{const r=th("pred",e,t,n);let a=th("data",e,t,n);return a.kept||(a=oh(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==nh(e,t,n)));return r?[oh(nh(r,t,n))]:void 0}case"Enter":{const r=th("frameName",e,t,n),a=th("tensor",e,t,n);return n.enterFrame(r),[oh(a)]}case"Exit":{const r=th("tensor",e,t,n);return n.exitFrame(),[oh(r)]}case"NextIteration":{const r=th("tensor",e,t,n);return n.nextIteration(),[oh(r)]}case"TensorArrayV3":{const r=th("size",e,t,n),a=th("dtype",e,t,n),s=th("elementShape",e,t,n),i=th("dynamicSize",e,t,n),o=th("clearAfterRead",e,t,n),u=th("identicalElementShapes",e,t,n),l=th("name",e,t,n),c=new Yh(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,(0,A.iD$)(1)]}case"TensorArrayWriteV3":{const r=th("tensorArrayId",e,t,n),a=th("index",e,t,n),s=th("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=th("tensorArrayId",e,t,n),a=th("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=th("tensorArrayId",e,t,n),a=th("indices",e,t,n),s=th("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=th("tensorArrayId",e,t,n),a=th("indices",e,t,n),s=th("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=th("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=th("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=th("tensorArrayId",e,t,n),a=th("tensor",e,t,n),s=th("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=th("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[(0,A.iD$)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=th("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=th("tensorListId",e,t,n),a=th("index",e,t,n),s=th("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=th("tensorListId",e,t,n),a=th("index",e,t,n),s=th("elementShape",e,t,n),i=th("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=th("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Jh([],n,e.dtype,r),i=(0,A.HHK)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(th("tensor",e,t,n),r,th("elementShape",e,t,n),th("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=th("elementShape",e,t,n),a=th("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Jh([],e,t,n)}(r,a,th(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=th("tensorListId",e,t,n),a=th("indices",e,t,n),s=th("elementShape",e,t,n),i=th("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=th("tensorListId",e,t,n),a=th("elementShape",e,t,n),s=th("elementDType",e,t,n),i=th("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);qh(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=(0,A.HHK)(e);return new Jh(a,t,r)}(th("tensor",e,t,n),th("elementShape",e,t,n),th("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=th("tensorListId",e,t,n),a=n.getTensorList(r.id),s=th("dtype",e,t,n),i=th("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=th("tensorListId",e,t,n),a=th("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=th("tensorListId",e,t,n),a=th("elementShape",e,t,n),s=th("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=th("tensor",e,t,n),a=th("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Qh(e.shape.slice(1),n),i=0===r?0:e.size/r,o=(0,A.lub)((()=>{const n=[];e=(0,A.XLQ)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=(0,A.XLQ)((0,A.tPi)(e,o,u),s)}return e.dispose(),n})),u=new Jh([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,th("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=th("stride",e,t,n),a=th("pad",e,t,n),s=th("dataFormat",e,t,n).toUpperCase(),i=th("dilation",e,t,n);return[cr.P(th("x",e,t,n),th("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=th("strides",e,t,n),a=ih(e,t,n),s=th("dataFormat",e,t,n).toUpperCase(),i=th("dilations",e,t,n);return[Ee.T(th("x",e,t,n),th("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ad(e,t,n);return[Zh.conv2d({x:th("x",e,t,n),filter:th("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=ad(e,t,n);return[Zh.depthwiseConv2d({x:th("x",e,t,n),filter:th("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=th("outputShape",e,t,n),a=th("strides",e,t,n),s=ih(e,t,n);return[pr.b(th("x",e,t,n),th("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=th("strides",e,t,n),a=ih(e,t,n),s=th("dilations",e,t,n),i=th("dataFormat",e,t,n).toUpperCase();return[dr.B(th("input",e,t,n),th("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("dataFormat",e,t,n).toUpperCase(),i=th("dilations",e,t,n);return[ed.p(th("x",e,t,n),th("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("kernelSize",e,t,n);return[sr.w(th("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("kernelSize",e,t,n);return[Or._(th("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("kernelSize",e,t,n),i=th("includeBatchInIndex",e,t,n),{result:o,indexes:u}=td.I(th("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("kernelSize",e,t,n);return[nd.u(th("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("kernelSize",e,t,n);return[rd.Y(th("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=th("strides",e,t,n),a=th("pad",e,t,n),s=th("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[fr.W(th("x",e,t,n),th("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=th("shape",e,t,n),a=th("dtype",e,t,n),s=th("value",e,t,n);return[sd.h(r,s,a)]}case"LinSpace":{const r=th("start",e,t,n),a=th("stop",e,t,n),s=th("num",e,t,n);return[id.S(r,a,s)]}case"Multinomial":{const r=th("logits",e,t,n),a=th("numSamples",e,t,n),s=th("seed",e,t,n);return[od.S(r,a,s)]}case"OneHot":{const r=th("indices",e,t,n),a=th("depth",e,t,n),s=th("onValue",e,t,n),i=th("offValue",e,t,n);return[Hr.l(r,a,s,i)]}case"Ones":return[At.i(th("shape",e,t,n),th("dtype",e,t,n))];case"OnesLike":return[Gr.J(th("x",e,t,n))];case"RandomUniform":return[ud.L(th("shape",e,t,n),th("minval",e,t,n),th("maxval",e,t,n),th("dtype",e,t,n))];case"Range":{const r=th("start",e,t,n),a=th("stop",e,t,n),s=th("step",e,t,n);return[ld.w(r,a,s,th("dtype",e,t,n))]}case"TruncatedNormal":{const r=th("shape",e,t,n),a=th("mean",e,t,n),s=th("stdDev",e,t,n),i=th("seed",e,t,n);return[cd.X(r,a,s,th("dtype",e,t,n),i)]}case"Zeros":return[Lt.l(th("shape",e,t,n),th("dtype",e,t,n))];case"ZerosLike":return[X.P(th("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=fd(e,t,n),l=await pd.BHj.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=fd(e,t,n),u=th("padToMaxOutputSize",e,t,n),l=await pd.BHj.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=fd(e,t,n);return[await pd.BHj.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=_.p(th("condition",e,t,n),"bool"),a=[await hd.i(r)];return r.dispose(),a}case"ListDiff":return dd.O(th("x",e,t,n),th("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return A.lub((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=th("x",e,t,n),a=th("k",e,t,n),s=th("sorted",e,t,n),i=ha.h(r,a,s);return[i.values,i.indices]}case"Unique":{const r=th("x",e,t,n),a=da.T(r);return[a.values,a.indices]}case"UniqueV2":{const r=th("x",e,t,n),a=th("axis",e,t,n),s=da.T(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return A.lub((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=th("images",e,t,n),a=th("size",e,t,n),s=th("alignCorners",e,t,n),i=th("halfPixelCenters",e,t,n);return[pd.BHj.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=th("images",e,t,n),a=th("size",e,t,n),s=th("alignCorners",e,t,n),i=th("halfPixelCenters",e,t,n);return[pd.BHj.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=th("image",e,t,n),a=th("boxes",e,t,n),s=th("boxInd",e,t,n),i=th("cropSize",e,t,n),o=th("method",e,t,n),u=th("extrapolationValue",e,t,n);return[pd.BHj.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=th("default",e,t,n);return[nh(e.name,t,n)||r];case"Placeholder":return[nh(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[oh(th("x",e,t,n))];case"IdentityN":return th("x",e,t,n).map((e=>oh(e)));case"Snapshot":return[oh(th("x",e,t,n))];case"Shape":return[md.R(th("x",e,t,n).shape,"int32")];case"ShapeN":return th("x",e,t,n).map((e=>md.R(e.shape)));case"Size":return[z.i(th("x",e,t,n).size,"int32")];case"Rank":return[z.i(th("x",e,t,n).rank,"int32")];case"NoOp":return[z.i(1)];case"Print":const a=th("x",e,t,n),s=th("data",e,t,n),i=th("message",e,t,n),o=th("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Equal":return[wt.D(th("a",e,t,n),th("b",e,t,n))];case"NotEqual":return[Vr.Q(th("a",e,t,n),th("b",e,t,n))];case"Greater":return[dt.p(th("a",e,t,n),th("b",e,t,n))];case"GreaterEqual":return[be.b(th("a",e,t,n),th("b",e,t,n))];case"Less":return[It.d(th("a",e,t,n),th("b",e,t,n))];case"LessEqual":return[xe.z(th("a",e,t,n),th("b",e,t,n))];case"LogicalAnd":return[we.H(th("a",e,t,n),th("b",e,t,n))];case"LogicalNot":return[on.h(th("a",e,t,n))];case"LogicalOr":return[Rr.K(th("a",e,t,n),th("b",e,t,n))];case"Select":case"SelectV2":return[ve.a(th("condition",e,t,n),th("a",e,t,n),th("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return A.lub((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[pe.O(th("a",e,t,n),th("b",e,t,n),th("transposeA",e,t,n),th("transposeB",e,t,n))];case"Einsum":return[yd.W(th("equation",e,t,n),...th("tensors",e,t,n))];case"Transpose":return[Ue.p(th("x",e,t,n),th("perm",e,t,n))];case"_FusedMatMul":const[r,a]=th("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=th("numArgs",e,t,n),u=th("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=th("args",e,t,n);return[Zh.matMul({a:th("a",e,t,n),b:th("b",e,t,n),transposeA:th("transposeA",e,t,n),transposeB:th("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return A.lub((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[ir.t(th("x",e,t,n),th("mean",e,t,n),th("variance",e,t,n),th("offset",e,t,n),th("scale",e,t,n),th("epsilon",e,t,n))];case"LRN":return[$r.G(th("x",e,t,n),th("radius",e,t,n),th("bias",e,t,n),th("alpha",e,t,n),th("beta",e,t,n))];case"Softmax":return[sa.X(th("x",e,t,n))];case"LogSoftmax":return[Er.C(th("x",e,t,n))];case"SparseToDense":return[bd.e(th("sparseIndices",e,t,n),th("outputShape",e,t,n),th("sparseValues",e,t,n),th("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[Mr.F(th("x",e,t,n),r,a)]}case"Mean":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[zr.J(th("x",e,t,n),r,a)]}case"Min":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[Br.V(th("x",e,t,n),r,a)]}case"Sum":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[G.S(th("x",e,t,n),r,a)]}case"All":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[Qn.$(th("x",e,t,n),r,a)]}case"Any":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[Yn.Y(th("x",e,t,n),r,a)]}case"ArgMax":{const r=th("axis",e,t,n);return[Jn.N(th("x",e,t,n),r)]}case"ArgMin":{const r=th("axis",e,t,n);return[Zn.v(th("x",e,t,n),r)]}case"Prod":{const r=th("axis",e,t,n),a=th("keepDims",e,t,n);return[Xr.W(th("x",e,t,n),r,a)]}case"Cumsum":{const r=th("axis",e,t,n),a=th("exclusive",e,t,n),s=th("reverse",e,t,n);return[We.z(th("x",e,t,n),r,a,s)]}case"Bincount":const r=th("x",e,t,n),a=th("weights",e,t,n),s=th("size",e,t,n);return[xd.y(r,a,s)];case"DenseBincount":{const r=th("x",e,t,n),a=th("weights",e,t,n),s=th("size",e,t,n),i=th("binaryOutput",e,t,n);return[wd.p(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return A.lub((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=th("n",e,t,n),a=th("axis",e,t,n);let s=th("tensors",e,t,n);return s=s.slice(0,r),[Nn.z(s,a)]}case"Gather":{const r=th("x",e,t,n),a=th("indices",e,t,n);return[Wn.I(r,_.p(a,"int32"),0)]}case"GatherV2":{const r=th("axis",e,t,n),a=th("batchDims",e,t,n),s=th("x",e,t,n),i=th("indices",e,t,n);return[Wn.I(s,_.p(i,"int32"),r,a)]}case"Reverse":{const r=th("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=th("x",e,t,n);return[nn.G(s,a)]}case"ReverseV2":{const r=th("axis",e,t,n),a=th("x",e,t,n);return[nn.G(a,r)]}case"Slice":{const r=th("begin",e,t,n),a=th("size",e,t,n);return[Rt.t(th("x",e,t,n),r,a)]}case"StridedSlice":{const r=th("begin",e,t,n),a=th("end",e,t,n),s=th("strides",e,t,n),i=th("beginMask",e,t,n),o=th("endMask",e,t,n),u=th("ellipsisMask",e,t,n),l=th("newAxisMask",e,t,n),c=th("shrinkAxisMask",e,t,n),p=th("x",e,t,n);return[la.N(p,r,a,s,i,o,u,l,c)]}case"Pack":return(0,A.lub)((()=>{const r=th("axis",e,t,n),a=th("tensors",e,t,n),s=a[0].shape,i=ua.L(a[0]).shape,o=a.map((e=>{const t=A.D5U.arraysEqual(e.shape,s);if(!t&&!A.D5U.arraysEqual(ua.L(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:H.X(e,s)}));return[zn.k(o,r)]}));case"Unpack":{const r=th("axis",e,t,n),a=th("tensor",e,t,n);return Pt.H(a,r)}case"Tile":{const r=th("reps",e,t,n);return[nt.G(th("x",e,t,n),r)]}case"Split":case"SplitV":{const r=th("axis",e,t,n),a=th("numOrSizeSplits",e,t,n),s=th("x",e,t,n);return Se.V(s,a,r)}case"ScatterNd":{const r=th("indices",e,t,n),a=th("values",e,t,n),s=th("shape",e,t,n);return[vd.s(r,a,s)]}case"GatherNd":{const r=th("x",e,t,n),a=th("indices",e,t,n);return[kd.d(r,a)]}case"SparseToDense":{const r=th("sparseIndices",e,t,n),a=th("outputShape",e,t,n),s=th("sparseValues",e,t,n),i=th("defaultValue",e,t,n);return[bd.e(r,s,a,s.dtype===i.dtype?i:_.p(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return A.lub((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=pd.rVs.sparseFillEmptyRows(th("indices",e,t,n),th("values",e,t,n),th("denseShape",e,t,n),th("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=pd.rVs.sparseReshape(th("inputIndices",e,t,n),th("inputShape",e,t,n),th("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[pd.rVs.sparseSegmentMean(th("data",e,t,n),th("indices",e,t,n),th("segmentIds",e,t,n))];case"SparseSegmentSum":return[pd.rVs.sparseSegmentSum(th("data",e,t,n),th("indices",e,t,n),th("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return A.lub((()=>((e,t,n)=>{switch(e.op){case"FFT":return[wr.k(th("x",e,t,n))];case"IFFT":return[kr.S(th("x",e,t,n))];case"RFFT":return[ea.Q(th("x",e,t,n))];case"IRFFT":return[Ir.w(th("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return A.lub((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=pd.Z_8.stringNGrams(th("data",e,t,n),th("dataSplits",e,t,n),th("separator",e,t,n),th("nGramWidths",e,t,n),th("leftPad",e,t,n),th("rightPad",e,t,n),th("padWidth",e,t,n),th("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=pd.Z_8.stringSplit(th("input",e,t,n),th("delimiter",e,t,n),th("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[pd.Z_8.stringToHashBucketFast(th("input",e,t,n),th("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return A.lub((()=>((e,t,n)=>{switch(e.op){case"Cast":return[_.p(th("x",e,t,n),th("dtype",e,t,n))];case"ExpandDims":{const r=th("axis",e,t,n);return[Ln.d(th("x",e,t,n),r)]}case"Squeeze":{const r=th("axis",e,t,n);return[ua.L(th("x",e,t,n),r)]}case"Reshape":return[H.X(th("x",e,t,n),th("shape",e,t,n))];case"MirrorPad":return[Wr.V(th("x",e,t,n),th("padding",e,t,n),th("mode",e,t,n))];case"PadV2":case"Pad":return[yn.v(th("x",e,t,n),th("padding",e,t,n),th("constantValue",e,t,n))];case"SpaceToBatchND":{const r=th("blockShape",e,t,n),a=th("paddings",e,t,n);return[de.f(th("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=th("blockShape",e,t,n),a=th("crops",e,t,n);return[In.E(th("x",e,t,n),r,a)]}case"DepthToSpace":{const r=th("blockSize",e,t,n),a=th("dataFormat",e,t,n).toUpperCase();return[hr.n(th("x",e,t,n),r,a)]}case"BroadcastTo":return[or.U(th("x",e,t,n),th("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=th("keyDType",e,t,n),s=th("valueDType",e,t,n),i=new gd(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=th("tableHandle",e,t,n,r),s=th("keys",e,t,n),i=th("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=th("tableHandle",e,t,n,r),s=th("keys",e,t,n),i=th("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=th("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Zp(e.op);if(a&&a.customExecutor)return a.customExecutor(new Ph(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return A.D5U.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class Sd{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Nd(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>sh(e)[0]));let c=[];null!=r&&(c=r.map((e=>sh(e.name)[0])));const p=[...t];for(;p.length>0;){const e=p.pop();(Ad(e)||Ed(e)||_d(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),p.push(e))})):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const Td=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],Cd=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],$d=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Ad(e){return Td.indexOf(e.op)>=0}function Ed(e){return Cd.indexOf(e.op)>=0}function _d(e){return $d.indexOf(e.op)>=0}class Dd{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new Dd(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Nd(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>sh(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[sh(e)[0]])),a=t.map((e=>sh(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return(0,A.lub)((()=>{const n=new Sd(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=sh(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=Id(t,r,n,this._resourceManager);if(A.D5U.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>nh(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=function(e,t,n){return t[ah(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new Sd(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>nh(e,i,s))),u=o.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id)),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[sh(e)[0]])),i=n.map((e=>sh(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:p}=Nd(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=sh(t),a=[];a[r]=e[t],d[n]=a}));const f={},m=this.getFrozenTensorIds(d),g={};for(;h.length>0;){const e=this.processStack(s,h,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!Ad(e)&&!nh(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${p}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&th("isConstant",e.node,r,n)&&([c]=rh(e.node.name,n)),null==r[e.node.name]){const p=Id(e.node,r,n,this._resourceManager);c||([c]=rh(e.node.name,n));const h=n.currentContext;A.D5U.isPromise(p)?l.push(p.then((l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l)))):(r[c]=p,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=rh(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!nh(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!nh(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=sh(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));A.D5U.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&A.D5U.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=sh(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=sh(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Rd{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class Fd{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Rd}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=A.io.browserHTTPRequest(e,this.loadOptions);else{const t=A.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(A.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=A.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Dd(Ch.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=Ch.Instance.transformGraph(e.modelInitializer);this.initializer=new Dd(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=A.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof A.esB||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Od(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new Fd(e,t);return await n.load(),n}const Md="3.8.0";var zd,Bd=n(6377);function Ld(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(Hd(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=Ld(e[s],t,n,r);a[s]=i}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function Wd(e,t=Pd){return Ud(e,t)}function Ud(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(Hd(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=Ud(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function Pd(e){return null===e?null:Hd(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Vd(e,t){const n=new Map;Ld(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(A.D5U.isPromise(t)){const r=await t;n.set(e,r)}}return Ld(e,t,n)}function Hd(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof A.esB))}function Gd(e){return e instanceof A.esB?{value:e.clone(),recurse:!1}:Hd(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class jd{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class qd extends jd{constructor(){super(qd.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Xd(e){return new Yd(e)}function Kd(e){return new Jd(e)}qd.INITIAL_CAPACITY=32;class Qd{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new sf(this,e)}filter(e){return new rf(this,e)}map(e){return new af(this,e)}mapAsync(e){return new of(this,e)}serialMapAsync(e){return new of(this,e).serial()}flatmap(e){return new lf(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new nf(this,e,t)}columnMajorBatch(e,t=!0,n=Pd){return this.rowMajorBatch(e,t).map((e=>Wd(e,n)))}concatenate(e,t){return new cf(Xd([this,e]),t)}take(e){return e<0||null==e?this:new tf(this,e)}skip(e){return e<0||null==e?this:new ef(this,e)}prefetch(e){return new hf(this,e)}shuffle(e,t){return new df(this,e,t)}serial(){return new Zd(this)}}class Yd extends Qd{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return Ld(e,t)}(t,Gd)),done:!1};var t}}class Jd extends Qd{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class Zd extends Qd{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class ef extends Qd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;A.B90(e.value)}return this.upstream.next()}}class tf extends Qd{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class nf extends Qd{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class rf extends Qd{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;A.B90(e.value)}}}class af extends Qd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=A.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=A.piX.getTensorsInContainer(n);for(const e of t)A.piX.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class sf extends Qd{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class of extends Qd{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=A.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),r=A.piX.getTensorsInContainer(n);for(const e of t)A.piX.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class uf extends Qd{constructor(){super(),this.outputQueue=new qd,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class lf extends uf{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=A.piX.getTensorsInContainer(e.value),n=this.transform(e.value),r=A.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)A.piX.isTensorInList(e,r)||e.dispose();return!0}}class cf extends Qd{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(zd||(zd={}));class pf extends Qd{constructor(e,t=zd.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Vd(this.iterators,(function(e){return e instanceof Qd?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case zd.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case zd.SHORTEST:return{value:null,done:!0};case zd.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class hf extends Qd{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new jd(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class df extends hf{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Bd.alea(n||A.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ff{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return A.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),mf((async()=>(await n.iterator()).columnMajorBatch(e,t,bf)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,mf((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,mf((async()=>(await t.iterator()).filter((t=>A.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return mf((async()=>(await t.iterator()).map((t=>A.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return mf((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return mf((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,mf((async()=>{return n=Kd((async()=>({value:await t.iterator(),done:!1}))).take(e),new cf(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,mf((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Bd.alea(t||A.D5U.now().toString());return mf((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,mf((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function mf(e,t=null){return new class extends ff{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function gf(e){return mf((async()=>Xd(e)),e.length)}function yf(e){if(!Hd(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return mf((async()=>function(e,t=zd.FAIL){return new pf(e,t)}(await Vd(e,(e=>{if(e instanceof ff)return{value:e.iterator(),recurse:!1};if(Hd(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),zd.SHORTEST)),t)}function bf(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof A.esB||A.D5U.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof A.esB?A.knu(e):A.XeE(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}ff.MAX_BUFFER_SIZE=1e4;class xf extends ff{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const wf='"',vf=Symbol("out"),kf=Symbol("field"),If=Symbol("quote"),Sf=Symbol("quoteafterquote"),Nf=Symbol("quoteinquote");class Tf extends ff{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new xf(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(A.D5U.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&A.D5U.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(A.D5U.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o);break;default:u=e}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=vf;for(let t=0;t<a;t++)switch(s){case vf:switch(e.charAt(t)){case wf:r=t+1,s=If;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=vf;break;default:s=kf,r=t}break;case kf:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t)),s=vf,r=t+1}break;case If:switch(e.charAt(t)){case wf:s=Sf}break;case Sf:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=vf,r=t+1;break;case wf:s=If;break;default:s=Nf}break;case Nf:switch(e.charAt(t)){case wf:s=If}}if(s===Sf?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class Cf extends Qd{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if((0,A.OBj)().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new Cf(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const a=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(A.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,A.XeE)(n,t)}}class $f extends Qd{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=(0,A.RRF)([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=(0,A.odF)([r,n,s,a],[1,4])}else this.cropBox=(0,A.odF)([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if((0,A.OBj)().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new $f(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&A.D5U.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=A.Xhn.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return(0,A.lub)((()=>{const t=(0,A.dt4)((0,A.pju)(e,"float32"),0);let n;n=A.BHj.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return(0,A.XLQ)(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class Af{}class Ef extends Qd{split(e){return new _f(this,e)}}class _f extends Ef{constructor(e,t){super(),this.upstream=e,this.impl=new Df(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Df extends uf{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class Rf extends Qd{decodeUTF8(){return new Ff(this)}}class Ff extends Ef{constructor(e){super(),this.upstream=e,this.impl=new Of(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class Of extends uf{constructor(e){if(super(),this.upstream=e,(0,A.OBj)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(1601);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=(0,A.OBj)().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class Mf extends Rf{constructor(e,t={}){super(),this.file=e,this.options=t,A.D5U.assert(e instanceof Uint8Array||!!(0,A.OBj)().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}));return{value:await e,done:!1}}}function zf(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class Bf extends Af{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(zf(this.input)&&(0,A.OBj)().get("IS_NODE")){const e=n(7792);this.input=e.readFileSync(this.input.substr(7))}return new Mf(this.input,this.options)}}class Lf extends Af{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return zf(this.url)?new Bf(this.url,this.fileOptions).iterator():async function(e,t={}){let n,r;var a;"string"==typeof e?n=e:(n=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const s=await A.D5U.fetch(n,r);if(s.ok){const e=new Uint8Array(await s.arrayBuffer());return new Mf(e,t)}throw new Error(s.statusText)}(this.url,this.fileOptions)}}function Wf(e,t={}){return new Tf(new Lf(e),t)}function Uf(e){const t=Kd(e);return mf((async()=>t))}function Pf(e){return mf((async()=>{const t=await e();return Kd((()=>t.next()))}))}async function Vf(e,t){return $f.create(e,t)}async function Hf(e){return Cf.create(e)}const Gf="3.8.0";var jf=n(8166);const qf=A.GDt.whereImpl;class Xf extends A.Zuw{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new A.JLz(this,(0,A.SRH)())}nextDataId(){return Xf.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,(0,A.OBj)().get("IS_NODE")&&A.Wap.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&A.D5U.isString(n[0])){const a=n.map((e=>A.D5U.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return A.Wap.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>A.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,A.f3b)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return(0,A.SRH)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=A.D5U.now();return e(),{kernelMs:A.D5U.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){(0,jf.H)([e],"where");const t=this.readSync(e.dataId);return qf(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Xf.nextDataId=0,(0,A.jqO)("cpu",(()=>new Xf),1);var Kf=n(6738);const Qf=(0,Kf.A)(A.SX0,(e=>e>=0?e:Math.exp(e)-1)),Yf={kernelName:A.SX0,backendName:"cpu",kernelFunc:Qf};var Jf=n(1775);function Zf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;(0,jf.H)([a],"leakyRelu");const i=A.D5U.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=A.D5U.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const em={kernelName:A.J$2,backendName:"cpu",kernelFunc:Zf};var tm=n(3533);const nm=(0,tm.b)(((e,t)=>e<0?t*e:e));function rm(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;(0,jf.H)([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=nm(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const am={kernelName:A.o0g,backendName:"cpu",kernelFunc:rm},sm=(0,Kf.A)(A.qkr,(e=>Math.max(0,e))),im={kernelName:A.qkr,backendName:"cpu",kernelFunc:sm},om=(0,Kf.A)(A.SbG,(e=>Math.min(Math.max(0,e),6))),um={kernelName:A.SbG,backendName:"cpu",kernelFunc:om},lm=(0,Kf.A)(A.a5O,(e=>1/(1+Math.exp(-e)))),cm={kernelName:A.a5O,backendName:"cpu",kernelFunc:lm};function pm(e,t,n,r,a){if("linear"===n)return(0,Jf.y)({inputs:{x:t},backend:e});if("relu"===n)return sm({inputs:{x:t},backend:e});if("elu"===n)return Qf({inputs:{x:t},backend:e});if("relu6"===n)return om({inputs:{x:t},backend:e});if("prelu"===n)return rm({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Zf({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return lm({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}var hm=n(2779);function dm(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=A.D5U.sizeFromShape(a.shape),o=A.D5U.inferFromImplicitShape(s,i),u=A.D5U.sizeFromShape(o);A.D5U.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const fm={kernelName:A.HZH,backendName:"cpu",kernelFunc:dm};function mm(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;(0,jf.H)([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],p=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],d=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=A.D5U.sizeFromShape(f),y=A.D5U.sizeFromShape(m),b=g===y||1===g||1===y;A.D5U.assert(u>=2&&l>=2&&b,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const x=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,d]);A.D5U.assert(c===p,(()=>`Error in matMul: inner shapes (${c}) and (${p}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const w=o?[y,d,p]:[y,p,d],v=dm({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),k=dm({inputs:{x:s},backend:n,attrs:{shape:w}}),I=i?v.shape[1]:v.shape[2],S=i?v.shape[2]:v.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,y),C=n.data.get(v.dataId).values,$=n.data.get(k.dataId).values,E=A.D5U.computeStrides(v.shape),_=A.D5U.computeStrides(k.shape),[D,R,F]=i?[E[0],1,E[1]]:[E[0],E[1],1],[O,M,z]=o?[1,_[1],_[0]]:[_[1],1,_[0]],B=S*N,L=(0,A.f3b)([T,S,N],v.dtype),W=L.values,U=n.blockSize;for(let e=0;e<T;e++)for(let t=0;t<S;t+=U)for(let n=0;n<N;n+=U)for(let r=0;r<I;r+=U){const a=Math.min(t+U,S),s=Math.min(n+U,N),i=Math.min(r+U,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*D,s=Math.min(e,y-1)*z;n+=C[r+o*R+a*F]*$[a*O+t*M+s]}W[e*B+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,L.dtype,L.values)}const gm={kernelName:A.XLW,backendName:"cpu",kernelFunc:mm},ym={kernelName:A.usg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:p}=r;let h,d,f;const m=[];h=mm({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=(0,hm.IH)({inputs:{a:h,b:i},backend:n}),m.push(h),h=d),c&&(f=pm(n,h,c,o,p),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};var bm=n(224);const xm=(0,Kf.A)(A.VGw,(e=>Math.acos(e))),wm={kernelName:A.VGw,backendName:"cpu",kernelFunc:xm},vm=(0,Kf.A)(A.SpW,(e=>Math.acosh(e))),km={kernelName:A.SpW,backendName:"cpu",kernelFunc:vm},Im={kernelName:A.Xze,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;(0,jf.H)(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=(0,A.f3b)(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};var Sm=n(4802);const Nm={kernelName:A.oT6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,jf.H)(a,"all");const o=A.D5U.parseAxisParam(s,a.shape);let u=o;const l=A.Wap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=A.Wap.getInnerMostAxes(u.length,a.shape.length)),A.Wap.assertAxesAreInnerMostDims("all",u,c.shape.length);const[p,h]=A.Wap.computeOutAndReduceShapes(c.shape,u),d=A.D5U.sizeFromShape(h),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=dm({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Tm={kernelName:A.IKK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,jf.H)(a,"any");const o=A.D5U.parseAxisParam(s,a.shape);let u=o;const l=A.Wap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=A.Wap.getInnerMostAxes(u.length,a.shape.length)),A.Wap.assertAxesAreInnerMostDims("any",u,c.shape.length);const[p,h]=A.Wap.computeOutAndReduceShapes(c.shape,u),d=A.D5U.sizeFromShape(h),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=dm({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},Cm={kernelName:A.sJF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;(0,jf.H)(a,"argMax");let i=A.D5U.parseAxisParam(s,a.shape);const o=A.Wap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=A.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],A.Wap.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[c,p]=A.Wap.computeOutAndReduceShapes(u.shape,i),h=A.D5U.sizeFromShape(c),d=A.D5U.makeZerosTypedArray(h,"int32"),f=A.D5U.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},$m={kernelName:A.aJk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;(0,jf.H)(a,"argMin");let i=A.D5U.parseAxisParam(s,a.shape);const o=A.Wap.getAxesPermutation(i,a.shape.length);let u=a;const l=[];null!=o&&(u=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=A.Wap.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],A.Wap.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[c,p]=A.Wap.computeOutAndReduceShapes(u.shape,i),h=A.D5U.sizeFromShape(c),d=A.D5U.makeZerosTypedArray(h,"int32"),f=A.D5U.sizeFromShape(p),m=n.data.get(u.dataId).values;for(let e=0;e<d.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}d[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",d)}},Am=(0,Kf.A)(A.M2y,(e=>Math.asin(e))),Em={kernelName:A.M2y,backendName:"cpu",kernelFunc:Am},_m=(0,Kf.A)(A.qw7,(e=>Math.asinh(e))),Dm={kernelName:A.qw7,backendName:"cpu",kernelFunc:_m},Rm=(0,Kf.A)(A.jMg,(e=>Math.atan(e))),Fm={kernelName:A.jMg,backendName:"cpu",kernelFunc:Rm};var Om=n(6205);const Mm=(0,tm.b)(((e,t)=>Math.atan2(e,t))),zm=(0,Om.j)(A.QCc,Mm),Bm={kernelName:A.QCc,backendName:"cpu",kernelFunc:zm},Lm=(0,Kf.A)(A.Oyi,(e=>Math.atanh(e))),Wm={kernelName:A.Oyi,backendName:"cpu",kernelFunc:Lm};function Um(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,p=a.effectiveFilterWidth,h=a.padInfo.top,d=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=(0,A.f3b)(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const w=y*i-h,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-d,c=Math.max(0,i),h=Math.min(a.inWidth,p+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<h;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function Pm(e,t,n,r,a=!1,s=!1){const i=(0,A.f3b)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=(0,A.f3b)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,p+g);for(let o=0;o<r.outWidth;++o){const p=o*u-f;let d=p;for(;d<0;)d+=c;const x=Math.min(r.inWidth,h+p);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-p,l=m.get(e,n,o,t);l>w&&(w=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(v,e,n,o,t)}}return i}function Vm(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,p=a.dilationWidth,h=a.effectiveFilterDepth,d=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=(0,A.f3b)(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=l;const C=Math.min(a.inDepth,h+N),$=n+v*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let h=i;for(;h<0;)h+=c;const m=Math.min(a.inHeight,d+i),v=$+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=p;const d=Math.min(a.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=l){const a=x+n*r[1];for(let n=h;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<d;n+=p){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/N:k}}}}return x}const Hm={kernelName:A.JhU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;(0,jf.H)(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=A.Wap.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&A.D5U.arraysEqual(l.inShape,l.outShape))c=(0,Jf.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=A.D5U.computeStrides(a.shape),r=Um(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},Gm={kernelName:A._k9,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,jf.H)(a,"avgPool3d");const c=A.Wap.computePool3DInfo(a.shape,s,i,1,o,u,l),p=Vm(n.data.get(a.dataId).values,a.shape,a.dtype,A.D5U.computeStrides(a.shape),c,"avg");return n.makeTensorInfo(p.shape,"float32",p.values)}},jm={kernelName:A.IMb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,jf.H)([a,s],"avgPool3DGrad");const c=A.Wap.computePool3DInfo(s.shape,i,o,1,u,l),p=c.strideDepth,h=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=(0,A.f3b)(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const a=(i+n)/h;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/d;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=$.get(e,r,a,s,t))}}}T.set(u*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},qm={kernelName:A.ROF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;(0,jf.H)([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=A.Wap.computePool2DInfo(i.shape,o,u,1,l),p=c.strideHeight,h=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=(0,A.f3b)(i.shape,"float32"),k=1/(d*f),I=n.data.get(a.dataId).values,S=(0,A.f3b)(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-w,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/h;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},Xm={kernelName:A.sHE,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;A.D5U.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),A.D5U.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),A.D5U.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),(0,jf.H)([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,p=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,d=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=h.length,x=p.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-p[v++])*d[k++]/Math.sqrt(h[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};var Km=n(2578);const Qm={kernelName:A.zws,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;(0,jf.H)([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=A.Wap.getReshaped(a.shape,s,o),l=A.Wap.getPermuted(u.length,s.length),c=A.Wap.getReshapedPermuted(a.shape,s,o),p=A.Wap.getSliceBeginCoords(i,s.length),h=A.Wap.getSliceSize(c,i,s.length),d=dm({inputs:{x:a},backend:n,attrs:{shape:u}}),f=(0,Sm.p)({inputs:{x:d},backend:n,attrs:{perm:l}}),m=dm({inputs:{x:f},backend:n,attrs:{shape:c}}),g=(0,Km.tP)({inputs:{x:m},backend:n,attrs:{begin:p,size:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};var Ym=n(8607);const Jm={kernelName:A.zvY,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,l=(0,Ym.W)(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}};var Zm=n(9258),eg=n(4769);const tg=(0,Kf.A)(A.xnO,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),ng={kernelName:A.xnO,backendName:"cpu",kernelFunc:tg};var rg=n(6961);const ag={kernelName:A.yj2,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(A.D5U.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};var sg=n(8926);function ig(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const og={kernelName:A.J_u,backendName:"cpu",kernelFunc:ig};var ug=n(2186);function lg(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=A.D5U.parseAxisParam(a,t[0].shape)[0];let i=A.Wap.computeOutShape(t.map((e=>e.shape)),s);if(0===A.D5U.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>A.D5U.sizeFromShape(e.shape)>0));if(1===o.length)return(0,Jf.y)({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(A.Wap.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>(0,ug.k)({inputs:{input:e},backend:n}))),t=o.map((e=>ig({inputs:{input:e},backend:n}))),r=lg({inputs:e,backend:n,attrs:{axis:s}}),a=lg({inputs:t,backend:n,attrs:{axis:s}}),i=(0,rg.P)({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const l=o.map((e=>{const t=A.D5U.sizeFromShape(e.shape.slice(s));return dm({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),c=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=A.Wap.computeOutShape(l.map((e=>e.shape)),1);const p=1===l[0].shape[0],h=(0,sg.j)(c,i,t[0].dtype,p),d=A.Wap.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(d,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const cg={kernelName:A.Eh3,backendName:"cpu",kernelFunc:lg};function pg(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;(0,jf.H)([a,s],"conv2d");const p=A.Wap.convertConv2DDataFormat(u),h=A.Wap.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!1,p),d=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,w=new A.YDk(h.outShape,a.dtype),v=A.D5U.computeStrides(a.shape),k=A.D5U.computeStrides(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,_=x?1:w.strides[1],D=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<h.outHeight;++e){const r=n+e*$,a=e*h.strideHeight-b;for(let e=0;e<d;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=D[a+e*T];for(let e=0;e<h.outChannels;++e)F[t+e*_]+=n*R[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const hg={kernelName:A.mhS,backendName:"cpu",kernelFunc:pg},dg={kernelName:A.wUP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;(0,jf.H)([a,s],"conv2dBackpropFilter");const p=A.Wap.convertConv2DDataFormat(u),h=A.Wap.computeConv2DInfo(a.shape,c,i,1,o,l,!1,p),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new A.YDk(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new A.YDk(a.shape,a.dtype,v),S=new A.YDk(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(h.outHeight,(h.inHeight+w-e)/d);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},fg={kernelName:A.wm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;(0,jf.H)([a,s],"conv2dBackpropInput");const p=A.D5U.computeStrides(s.shape),h=A.D5U.computeStrides(a.shape);let d=A.Wap.convertConv2DDataFormat(l);const f=A.Wap.computeConv2DInfo(i,s.shape,o,1,u,c,!1,d),m=new A.YDk(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=p,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:_,strideHeight:D,strideWidth:R}=f;d=f.dataFormat;const F=I-1-f.padInfo.top,O=S-1-f.padInfo.left,M="channelsLast"===d,z=m.strides[0],B=M?m.strides[1]:m.strides[2],L=M?m.strides[2]:1,W=M?1:m.strides[1],U=h[0],P=M?h[1]:h[2],V=M?h[2]:1,H=M?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-F,a=Math.max(0,Math.ceil(r/D)),s=Math.min(E,(I+r)/D);for(let i=0;i<C;++i){const o=i-O,u=Math.max(0,Math.ceil(o/R)),l=Math.min(_,(S+o)/R);let c=0;for(let n=a;n<s;++n){const a=n*D-r;for(let r=u;r<l;++r){const s=U*e+P*n+V*r,i=x*(I-1-a)+w*(S-1-(r*R-o))+v*t;for(let e=0;e<$;++e)c+=y[s+H*e]*b[i+e]}}g[z*e+B*n+L*i+W*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},mg={kernelName:A.x12,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;(0,jf.H)([a,s],"conv3d");const l=A.Wap.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:p,filterWidth:h,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new A.YDk(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=A.D5U.computeStrides(a.shape),N=A.D5U.computeStrides(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*d;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<p;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},gg={kernelName:A.o2y,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;(0,jf.H)([a,s],"conv3dBackpropFilterV2");const l=A.D5U.computeStrides(a.shape),c=A.D5U.computeStrides(s.shape),p=A.Wap.computeConv3DInfo(a.shape,u,i,1,o),h=p.strideDepth,d=p.strideHeight,f=p.strideWidth,m=p.filterDepth,g=p.filterHeight,y=p.filterWidth,b=new A.YDk(p.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,$]=c,E=n.data.get(a.dataId).values,[_,D,R,F]=l,O=p.padInfo.front,M=p.padInfo.left,z=p.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((O-e)/h)),n=Math.min(p.outDepth,(p.inDepth+O-e)/h),r=e*w;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((z-a)/d)),i=Math.min(p.outHeight,(p.inHeight+z-a)/d),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(p.outWidth,(p.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<p.inChannels;++o){const m=o*I+c;for(let c=0;c<p.outChannels;++c){let g=0;for(let m=0;m<p.batchSize;++m){const p=m*_,y=m*N;for(let m=t;m<n;++m){const t=(e+m*h-O)*D+p,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*d-z)*R+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*$+i;g+=E[(r+e*f-M)*F+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},yg={kernelName:A.ik2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;(0,jf.H)([a],"conv3dBackpropInputV2");const l=A.D5U.computeStrides(a.shape),c=A.D5U.computeStrides(s.shape),p=A.Wap.computeConv3DInfo(u,s.shape,o,1,i),h=new A.YDk(p.inShape,"float32"),d=h.values,[f,m,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[S,N,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:_,filterWidth:D,inChannels:R,inDepth:F,inHeight:O,inWidth:M,outChannels:z,outDepth:B,outHeight:L,outWidth:W,strideDepth:U,strideHeight:P,strideWidth:V}=p,H=E-1-p.padInfo.front,G=_-1-p.padInfo.top,j=D-1-p.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const r=n-H,a=Math.max(0,Math.ceil(r/U)),s=Math.min(B,(E+r)/U);for(let i=0;i<O;++i){const o=i-G,u=Math.max(0,Math.ceil(o/P)),l=Math.min(L,(_+o)/P);for(let c=0;c<M;++c){const p=c-j,h=Math.max(0,Math.ceil(p/V)),$=Math.min(W,(D+p)/V);let A=0;for(let n=a;n<s;++n){const a=n*U-r;for(let r=u;r<l;++r){const s=r*P-o;for(let i=h;i<$;++i){const o=x*e+w*n+v*r+k*i,u=S*(E-1-a)+N*(_-1-s)+T*(D-1-(i*V-p))+C*t;for(let e=0;e<z;++e)A+=b[o+e]*I[u+e]}}}d[f*e+m*n+g*i+y*c+t]=A}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},bg=(0,Kf.A)(A.mc4,(e=>Math.cos(e))),xg={kernelName:A.mc4,backendName:"cpu",kernelFunc:bg},wg=(0,Kf.A)(A.TR1,(e=>Math.cosh(e))),vg={kernelName:A.TR1,backendName:"cpu",kernelFunc:wg},kg={kernelName:A.VcC,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,p,h,d]=a.shape,f=s.shape[0],[m,g]=o,y=(0,A.f3b)([f,m,g,d],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=A.D5U.computeStrides(a.shape),k=A.D5U.computeStrides(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(p-1)/(m-1):0,f=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(p-1)+t*o:.5*(n+a)*(p-1);if(c<0||c>p-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(c<0||c>h-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const p=Math.floor(c),m=Math.ceil(c),b=c-p;for(let r=0;r<d;r++){let s=r+p*v[2]+n*v[1]+i*v[0];const l=w[s];s=r+m*v[2]+n*v[1]+i*v[0];const c=w[s];s=r+p*v[2]+a*v[1]+i*v[0];const h=w[s];s=r+m*v[2]+a*v[1]+i*v[0];const d=l+(c-l)*b,f=h+(w[s]-h)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<d;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<d;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},Ig={kernelName:A.iHb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;(0,jf.H)(a,"cumsum");const u=A.Wap.getAxesPermutation([s],a.shape.length);let l=a;null!=u&&(l=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=A.Wap.getInnerMostAxes(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const p=(0,A.x8V)(l.dtype,"int32"),h=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(l.shape),p),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:d[n];else{const r=m(e,t-1);h[n]=i?d[r]+h[r]:d[n]+h[r]}}const g=n.makeTensorInfo(l.shape,p,h);if(null!=u){const e=A.Wap.getUndoAxesPermutation(u),t=(0,Sm.p)({inputs:{x:g},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),t}return g}},Sg={kernelName:A.QRR,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.data.get(a.dataId).values,t=n.data.get(s.dataId).values,r=(0,Ym.W)(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=(0,Ym.i)(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},Ng={kernelName:A.T0n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;A.D5U.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),A.D5U.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],p=u*s,h=l*s,d=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*p*h*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<p;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*d;for(let t=0;t<d;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,p,h,d],a.dtype,m)}};function Tg(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;(0,jf.H)([a,s],"depthwiseConv2DNative");const c=A.D5U.computeStrides(a.shape),p=A.D5U.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const d=A.Wap.computeConv2DInfo(a.shape,s.shape,i,h,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new A.YDk(d.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],a=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=d.inHeight)continue;const s=e*p[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const a=s+e*p[1],o=i+r*d.inChannels;let u=t,l=a;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const Cg={kernelName:A.cie,backendName:"cpu",kernelFunc:Tg},$g={kernelName:A.sL$,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;(0,jf.H)([a,s],"depthwiseConv2dNativeBackpropFilter");const p=A.Wap.computeConv2DInfo(a.shape,c,i,o,u,l,!0),{strideHeight:h,strideWidth:d,filterHeight:f,filterWidth:m}=p,g=new A.YDk(p.filterShape,"float32"),y=p.padInfo.left,b=p.padInfo.top,x=p.outChannels/p.inChannels,w=n.data.get(a.dataId).values,v=new A.YDk(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new A.YDk(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(p.outHeight,(p.inHeight+b-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/d)),s=Math.min(p.outWidth,(p.inWidth+y-r)/d);for(let i=0;i<p.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=a;e<s;++e){const n=r+e*d-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},Ag={kernelName:A.y7R,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;(0,jf.H)([a,s],"depthwiseConv2DNativeBackpropInput");const p=A.D5U.computeStrides(a.shape),h=A.D5U.computeStrides(s.shape),d=A.Wap.computeConv2DInfo(c,s.shape,i,o,u,l,!0),f=new A.YDk(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=p,I=n.data.get(s.dataId).values,[S,N,T]=h,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:_,inHeight:D,inWidth:R,outChannels:F,outHeight:O,outWidth:M,strideHeight:z,strideWidth:B}=d,L=$-1-d.padInfo.top,W=E-1-d.padInfo.left,U=F/_;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<D;++n){const r=n-L,a=Math.max(0,Math.ceil(r/z)),s=Math.min(O,($+r)/z);for(let i=0;i<R;++i){const o=i-W,u=Math.max(0,Math.ceil(o/B)),l=Math.min(M,(E+o)/B);let c=0;for(let n=a;n<s;++n){const a=n*z-r;for(let r=u;r<l;++r){const s=w*e+v*n+k*r,i=S*($-1-a)+N*(E-1-(r*B-o))+T*t;for(let e=0;e<U;++e)c+=x[s+(t*U+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},Eg={kernelName:A.$w,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=A.D5U.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=(0,A.f3b)([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},_g={kernelName:A.p4S,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,p=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=A.Wap.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),C=A.D5U.sizeFromShape(T),$=T.length,E=A.D5U.getArrayFromDType(r.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const d=i+n*N;if(d>=0&&d<m){const i=A.D5U.locToIndex([e,s,d,o],c,A.D5U.computeStrides(r.shape)),f=A.D5U.locToIndex([t,n,o],h,A.D5U.computeStrides(a.shape)),m=l[i]+p[f];m>u&&(u=m)}}}E[A.D5U.locToIndex([e,t,s,o],$,A.D5U.computeStrides(T))]=u}}}return{dataId:u.write(A.D5U.toTypedArray(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},Dg={kernelName:A.Vn9,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=A.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),p=A.D5U.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=A.Wap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);A.D5U.assert(s.rank===N.length,(()=>`Error in ${A.Vn9}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=A.D5U.toNestedArray(N,l.data.get(s.dataId).values),C=A.D5U.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+p[t][n][s];a>i&&(i=a,o=t,u=n)}}}C[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(A.D5U.toTypedArray(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Rg={kernelName:A.ekb,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=A.D5U.toNestedArray(r.shape,l.data.get(r.dataId).values),p=A.D5U.toNestedArray(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=A.Wap.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);A.D5U.assert(s.rank===N.length,(()=>`Error in ${A.ekb}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const T=A.D5U.toNestedArray(N,l.data.get(s.dataId).values),C=A.D5U.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+p[t][n][s];a>i&&(i=a,o=r,u=l)}}}C[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(A.D5U.toTypedArray(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var Fg=n(1917),Og=n(4391);function Mg(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;(0,jf.H)(a,"sum"),o="bool"===a.dtype?(0,Zm.p)({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):(0,Jf.y)({inputs:{x:a},backend:n});const u=o.shape.length,l=A.D5U.parseAxisParam(s,o.shape),c=A.Wap.getAxesPermutation(l,u);let p=l,h=o;null!=c&&(h=(0,Sm.p)({inputs:{x:o},backend:n,attrs:{perm:c}}),p=A.Wap.getInnerMostAxes(p.length,u)),A.Wap.assertAxesAreInnerMostDims("sum",p,h.shape.length);const[d,f]=A.Wap.computeOutAndReduceShapes(h.shape,p),m=A.Wap.upcastType(h.dtype,"int32");let g=(0,Og.l)(n,d,m);const y=A.D5U.sizeFromShape(f),b=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let e=0;e<b.length;++e){const t=e*y;let n=0;for(let e=0;e<y;++e)n+=x[t+e];b[e]=n}if(i){const e=g;g=dm({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(g.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(h),g}const zg={kernelName:A.GBy,backendName:"cpu",kernelFunc:Mg},Bg={kernelName:A.$g6,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=A.Wap.decodeEinsumEquation(a,s.length);A.Wap.checkEinsumDimSizes(i.length,u,s);const{path:l,steps:c}=A.Wap.getEinsumComputePath(o,u),p=c.length;let h=null,d=i.length;const f=[];for(let e=0;e<p;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=A.Wap.getEinsumPermutation(d,u[t]);let a;A.Wap.isIdentityPermutation(e)?a=s[t]:(a=(0,Sm.p)({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);A.D5U.arraysEqual(a.shape,i)||(a=dm({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=(0,Fg.Jp)({inputs:{a,b:h},backend:n}),f.push(h))}e<p-1&&(l[e]>=0&&(h=Mg({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(h)),d--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},Lg={kernelName:A.HEU,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;(0,jf.H)([r,a],"eluGrad");const s=new Float32Array(A.D5U.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}};var Wg=n(7679);const Ug=A.Wap.ERF_P,Pg=A.Wap.ERF_A1,Vg=A.Wap.ERF_A2,Hg=A.Wap.ERF_A3,Gg=A.Wap.ERF_A4,jg=A.Wap.ERF_A5,qg=(0,Kf.A)(A.Omj,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Ug*n);return t*(1-((((jg*r+Gg)*r+Hg)*r+Vg)*r+Pg)*r*Math.exp(-n*n))})),Xg={kernelName:A.Omj,backendName:"cpu",kernelFunc:qg};var Kg=n(1211);function Qg(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(A.D5U.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),dm({inputs:{x:a},backend:n,attrs:{shape:o}})}const Yg={kernelName:A.YFo,backendName:"cpu",kernelFunc:Qg};var Jg=n(969);const Zg=(0,tm.b)(((e,t)=>e/t)),ey=(0,Om.j)(A.oHH,Zg),ty={kernelName:A.oHH,backendName:"cpu",kernelFunc:ey};var ny=n(1649);function ry(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=A.D5U.sizeFromShape(l),p=A.D5U.getTypedArrayFromDType("float32",c),h=A.D5U.getTypedArrayFromDType("float32",c);for(let e=0;e<a;e++){const r=(0,Km.tP)({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=(0,Km.tP)({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=(0,rg.P)({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=ay(i,t,n),d=A.Wap.mergeRealAndImagArrays(l,c);for(let t=0;t<s;t++){const n=A.Wap.getComplexWithIndex(d,t);p[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",p),f=n.makeTensorInfo(l,"float32",h),m=(0,rg.P)({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function ay(e,t,n){const r=A.D5U.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=sy(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",A.D5U.createScalarValue(r,"float32")),i=(0,Jf.y)({inputs:{x:s},backend:n}),u=ty.kernelFunc({inputs:{a:e,b:s},backend:n}),l=ty.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,p=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:p}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=A.Wap.exponent(a*r,t,n),u=A.Wap.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),A.Wap.assignToTypedArray(r,s,i,a)}return r}(A.Wap.mergeRealAndImagArrays(s,i),r,t);return A.Wap.splitRealAndImagArrays(e)}var o}function sy(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=A.Wap.mergeRealAndImagArrays(e,t),i=n/2,o=A.Wap.complexWithEvenIndex(s),u=o.real,l=o.imag,c=[u.length],p=a.makeTensorInfo(c,"float32",u),h=a.makeTensorInfo(c,"float32",l),d=(0,rg.P)({inputs:{real:p,imag:h},backend:a}),f=A.Wap.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=(0,rg.P)({inputs:{real:b,imag:x},backend:a}),v=sy(u,l,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=(0,rg.P)({inputs:{real:N,imag:T},backend:a}),$=sy(m,g,i,r,a),E=$.real,_=$.imag,D=[E.length],R=a.makeTensorInfo(D,"float32",E),F=a.makeTensorInfo(D,"float32",_),O=(0,rg.P)({inputs:{real:R,imag:F},backend:a}),M=A.Wap.exponents(n,r),z=[M.real.length],B=a.makeTensorInfo(z,"float32",M.real),L=a.makeTensorInfo(z,"float32",M.imag),W=(0,rg.P)({inputs:{real:B,imag:L},backend:a}),U=(0,Fg.Jp)({inputs:{a:W,b:O},backend:a}),P=(0,hm.IH)({inputs:{a:C,b:U},backend:a}),V=(0,ny.lu)({inputs:{a:C,b:U},backend:a}),H=(0,ug.k)({inputs:{input:P},backend:a}),G=(0,ug.k)({inputs:{input:V},backend:a}),j=ig({inputs:{input:P},backend:a}),q=ig({inputs:{input:V},backend:a}),X=lg({inputs:[H,G],backend:a,attrs:{axis:0}}),K=lg({inputs:[j,q],backend:a,attrs:{axis:0}}),Q=a.data.get(X.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(X),a.disposeIntermediateTensorInfo(K),{real:Q,imag:Y}}const iy={kernelName:A.vwp,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=A.D5U.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=dm({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=ry(i,!1,n),u=dm({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function oy(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||A.D5U.inferDtype(a),o=A.D5U.getArrayFromDType(i,A.D5U.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const uy={kernelName:A.deh,backendName:"cpu",kernelFunc:oy},ly={kernelName:A.Uyb,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=A.D5U.getTypedArrayFromDType(r.dtype,A.D5U.sizeFromShape(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let p=c[o];i>=0&&i<u&&(p=c[t+n+i*l+a]),s[o]=p}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};var cy=n(6574);const py=(0,tm.b)(((e,t)=>Math.floor(e/t))),hy=(0,Om.j)(A.jeX,py,null,"int32"),dy={kernelName:A.jeX,backendName:"cpu",kernelFunc:hy},fy={kernelName:A._V0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=pg({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(i){const e=m;m=(0,hm.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=pm(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},my={kernelName:A.luS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:f}=r;let m=Tg({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:p,dimRoundingMode:h}});if(i){const e=m;m=(0,hm.IH)({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=pm(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};var gy=n(1820);const yy={kernelName:A.q1x,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=A.D5U.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,p]=A.Wap.prepareAndValidate(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=n.data.get(a.dataId).values,d=n.bufferSync(r),f=(0,gy.m)(h,d,r.dtype,l,o,c,p,r.shape,s);return n.makeTensorInfo(u,r.dtype,f.values)}};var by=n(4468);const xy={kernelName:A.qi_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;(0,jf.H)([a,s],"gatherV2");let u=o;null==o&&(u=0);const l=A.D5U.sizeFromShape(s.shape),c=A.D5U.parseAxisParam(i,a.shape)[0],p=A.Wap.segment_util.collectGatherOpShapeInfo(a,s,c,u),h=dm({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),d=dm({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}}),f=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize],m=n.bufferSync(d),g=n.bufferSync(h),y=(0,by.i)(g,m,f);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.makeTensorInfo(p.outputShape,y.dtype,y.values)}};var wy=n(6272),vy=n(6259);const ky={kernelName:A.Qg5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=A.D5U.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=dm({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=ry(i,!0,n),u=dm({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Iy=(0,Kf.A)(A.avt,(e=>Number.isFinite(e)?1:0),"bool"),Sy={kernelName:A.avt,backendName:"cpu",kernelFunc:Iy},Ny=(0,Kf.A)(A.iWB,(e=>Math.abs(e)===1/0?1:0),"bool"),Ty={kernelName:A.iWB,backendName:"cpu",kernelFunc:Ny},Cy=(0,Kf.A)(A.r7n,(e=>Number.isNaN(e)?1:0),"bool"),$y={kernelName:A.r7n,backendName:"cpu",kernelFunc:Cy};var Ay=n(8405),Ey=n(635),_y=n(1325);const Dy={kernelName:A.e7N,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=(0,_y.b)(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}};var Ry=n(5223);const Fy=(0,Kf.A)(A.kU,(e=>Math.log1p(e))),Oy={kernelName:A.kU,backendName:"cpu",kernelFunc:Fy},My=(0,tm.b)(((e,t)=>e&&t)),zy=(0,Om.j)(A.PYm,My,null,"bool"),By={kernelName:A.PYm,backendName:"cpu",kernelFunc:zy},Ly=(0,Kf.A)(A.VfG,(e=>e?0:1),"bool"),Wy={kernelName:A.VfG,backendName:"cpu",kernelFunc:Ly},Uy=(0,tm.b)(((e,t)=>e||t)),Py=(0,Om.j)(A.MZg,Uy,null,"bool"),Vy={kernelName:A.MZg,backendName:"cpu",kernelFunc:Py},Hy={kernelName:A.eZ0,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;(0,jf.H)(a,"LRN");const l=a.shape[3],c=l-1,p=n.data.get(a.dataId).values,h=A.D5U.sizeFromShape(a.shape),d=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=p[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=f(e),n=p[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(a.shape,a.dtype,d)}},Gy={kernelName:A.Hhh,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;(0,jf.H)(i,"LRNGrad");const p=A.D5U.sizeFromShape(i.shape),h=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(p),y=p;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};var jy=n(5126),qy=n(7107);function Xy(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=A.D5U.parseAxisParam(s,u);let p=c;const h=A.Wap.getAxesPermutation(p,l);let d=o.data.get(a.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];d=(0,qy.H)(d,u,a.dtype,h,e),p=A.Wap.getInnerMostAxes(p.length,l),u=e}(0,jf.H)(a,"max"),A.Wap.assertAxesAreInnerMostDims("max",p,l);const[f,m]=A.Wap.computeOutAndReduceShapes(u,p),g=A.D5U.sizeFromShape(m),y=(0,jy.B)(d,g,f,a.dtype),b=o.write(y,f,a.dtype);let x=f;return i&&(x=A.Wap.expandShapeToKeepDim(f,c)),{dataId:b,shape:x,dtype:a.dtype}}const Ky={kernelName:A.YoZ,backendName:"cpu",kernelFunc:Xy};var Qy=n(1717);const Yy={kernelName:A.mTV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;(0,jf.H)(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;A.D5U.assert(A.Wap.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=A.Wap.computePool2DInfo(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&A.D5U.arraysEqual(l.inShape,l.outShape))c=(0,Jf.y)({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=A.D5U.computeStrides(a.shape),r=Um(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},Jy={kernelName:A.OAf,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;(0,jf.H)(a,"maxPool3d");const c=A.Wap.computePool3DInfo(a.shape,s,i,1,o,u,l),p=Vm(n.data.get(a.dataId).values,a.shape,a.dtype,A.D5U.computeStrides(a.shape),c,"max");return n.makeTensorInfo(p.shape,"float32",p.values)}},Zy={kernelName:A.OU7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;(0,jf.H)([a,s],"maxPool3DGrad");const c=A.Wap.computePool3DInfo(s.shape,i,o,1,u,l),p=function(e,t){const n=(0,A.f3b)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,p=t.effectiveFilterWidth,h=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-d;let h=l;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const d=a*s-f;let k=d;for(;k<0;)k+=u;const I=Math.min(t.inWidth,p+d);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=h;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-d,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*p+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),h=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=(0,A.f3b)(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-v,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const h=b*x*w-1-p.get(e,r,s,l,t)===n*x*w+a*w+i?1:0;0!==h&&(u+=N.get(e,r,s,l,t)*h)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},eb={kernelName:A.OV7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;(0,jf.H)([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:p}=r,h=A.Wap.computePool2DInfo(o.shape,u,l,1,c,p),d=n.data.get(o.dataId).values,f=(0,A.f3b)(h.outShape,o.dtype,Pm(d,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,I=(0,A.f3b)(o.shape,"float32"),S=n.data.get(a.dataId).values,N=(0,A.f3b)(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=b){const o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},tb={kernelName:A.vFR,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;(0,jf.H)(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=A.Wap.computePool2DInfo(r.shape,a,s,[1,1],i),[p,h]=function(e,t,n,r,a){const s=Um(e,0,n,A.D5U.computeStrides(t),a,"max"),i=Pm(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(p,c.outShape,r.dtype),f=u.write(h,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},nb={kernelName:A.q2K,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=A.D5U.parseAxisParam(s,a.shape),u=A.Wap.computeOutAndReduceShapes(a.shape,o)[1],l=A.D5U.sizeFromShape(u),c=[],p=n.makeTensorInfo([],"float32",new Float32Array([l]));c.push(p);const h=(0,Zm.p)({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});c.push(h);const d=ey({inputs:{a:h,b:p},backend:n});c.push(d);const f=Mg({inputs:{x:d},backend:n,attrs:{axis:s,keepDims:i}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}},rb={kernelName:A.c17,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;(0,jf.H)(a,"min");const o=A.D5U.parseAxisParam(s,a.shape);let u=o;const l=A.Wap.getAxesPermutation(u,a.shape.length);let c=a;null!=l&&(c=(0,Sm.p)({inputs:{x:a},backend:n,attrs:{perm:l}}),u=A.Wap.getInnerMostAxes(u.length,a.shape.length)),A.Wap.assertAxesAreInnerMostDims("min",u,c.shape.length);const[p,h]=A.Wap.computeOutAndReduceShapes(c.shape,u),d=A.D5U.sizeFromShape(h),f=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(p),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(p,c.dtype,f);if(i){const e=dm({inputs:{x:g},backend:n,attrs:{shape:A.Wap.expandShapeToKeepDim(p,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}};var ab=n(612);const sb={kernelName:A.jQs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;(0,jf.H)(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=s.map(((e,t)=>e[0]+a.shape[t])),c="reflect"===i?0:1,p=n.data.get(a.dataId).values,h=a.shape.length,d=A.D5U.computeStrides(a.shape),f=A.D5U.sizeFromShape(o),m=o.length,g=A.D5U.computeStrides(o),y=A.D5U.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=A.D5U.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=A.D5U.locToIndex(t,h,d);y[e]=p[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},ib=(0,tm.b)(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),ob=(0,Om.j)(A.Vbg,ib),ub={kernelName:A.Vbg,backendName:"cpu",kernelFunc:ob};var lb=n(2948);function cb(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=A.D5U.parseAxisParam([o],a.shape),l=Xy({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=A.Wap.expandShapeToKeepDim(l.shape,u),p=dm({inputs:{x:l},backend:n,attrs:{shape:c}}),h=(0,ny.lu)({inputs:{a,b:p},backend:n}),d=(0,Kg.Qq)({inputs:{x:h},backend:n}),f=Mg({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=dm({inputs:{x:f},backend:n,attrs:{shape:c}}),g=ey({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const pb={kernelName:A.Gcp,backendName:"cpu",kernelFunc:cb},hb={kernelName:A.NZg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;(0,jf.H)(a,"multinomial");const u=o?a:cb({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],p=n.data.get(u.dataId).values,h=[l,s],d=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(h),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=p[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+p[t+e];const r=lb.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();d[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",d)}};var db=n(854);const fb=A.GDt.nonMaxSuppressionV3Impl,mb={kernelName:A.uv1,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;(0,jf.H)(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:p}=fb(l,c,i,o,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},gb=A.GDt.nonMaxSuppressionV4Impl,yb={kernelName:A.cye,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;(0,jf.H)(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:d}=gb(c,p,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},bb=A.GDt.nonMaxSuppressionV5Impl,xb={kernelName:A.W0H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;(0,jf.H)(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,h=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=bb(c,p,h,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};var wb=n(8584);const vb={kernelName:A.we_,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;(0,jf.H)(a,"oneHot");const u=A.D5U.sizeFromShape(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function kb(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=(0,ug.k)({inputs:{input:r},backend:n}),t=kb({inputs:{x:e},backend:n}),a=ig({inputs:{input:r},backend:n}),s=kb({inputs:{x:a},backend:n}),i=(0,rg.P)({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return oy({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const Ib={kernelName:A.RuY,backendName:"cpu",kernelFunc:kb},Sb={kernelName:A.qWM,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=(0,ug.k)({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=ig({inputs:{input:a},backend:r}),i=kb({inputs:{x:s},backend:r}),o=(0,rg.P)({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return oy({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function Nb(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Qg({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{A.D5U.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),A.D5U.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=lg({inputs:t.map((e=>{const t=Qg({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const Tb={kernelName:A.QiL,backendName:"cpu",kernelFunc:Nb},Cb={kernelName:A.lyA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;(0,jf.H)(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),l=n.data.get(a.dataId).values,c=A.D5U.sizeFromShape(a.shape),p=a.shape.length,h=A.D5U.computeStrides(a.shape),d=A.D5U.sizeFromShape(o),f=o.length,m=A.D5U.computeStrides(o),g=A.D5U.getTypedArrayFromDType(a.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++){const t=A.D5U.indexToLoc(e,p,h).map(((e,t)=>e+u[t]));g[A.D5U.locToIndex(t,f,m)]=l[e]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},$b=(0,tm.b)(((e,t)=>Math.pow(e,t))),Ab=(0,Om.j)(A.pe_,$b),Eb={kernelName:A.pe_,backendName:"cpu",kernelFunc:Ab};var _b=n(9560),Db=n(9230);const Rb={kernelName:A.e6w,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=(0,Db.b)(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Fb=(0,Kf.A)(A.$HU,(e=>1/e)),Ob={kernelName:A.$HU,backendName:"cpu",kernelFunc:Fb},Mb={kernelName:A._Yw,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;(0,jf.H)(a,"resizeBilinear");const u=A.D5U.computeStrides(a.shape),[l,c]=o,[p,h,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(A.D5U.sizeFromShape([p,l,c,f])),y=[s&&l>1?h-1:h,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<p;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],p=l+n*u[2],h=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[p+e],s=t+(m[h+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([p,l,c,f],"float32",g)}},zb={kernelName:A.zbQ,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;(0,jf.H)([s,a],"resizeBilinearGrad");const o=A.D5U.computeStrides(a.shape),[u,l,c,p]=a.shape,[,h,d]=s.shape,f=new Float32Array(u*l*c*p),m=[i&&h>1?l-1:l,i&&d>1?c-1:c],g=[i&&h>1?h-1:h,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,d=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=h*l,k=h*a,I=u*l,S=u*a;for(let e=0;e<p;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,p],"float32",f)}},Bb={kernelName:A.dpD,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;(0,jf.H)(a,"resizeNearestNeighbor");const u=A.D5U.computeStrides(a.shape),[l,c]=o,[p,h,d,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(p*l*c*f),y=[s&&l>1?h-1:h,s&&c>1?d-1:d],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<p;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([p,l,c,f],a.dtype,g)}},Lb={kernelName:A.Hmb,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;(0,jf.H)([s,a],"resizeNearestNeighborGrad");const o=A.D5U.computeStrides(a.shape),u=A.D5U.computeStrides(s.shape),[l,c,p,h]=a.shape,[,d,f]=s.shape,m=new Float32Array(l*c*p*h),g=n.data.get(s.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?p-1:p],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<p;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=d)continue;const h=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*w;r===Math.min(p-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},Wb={kernelName:A.mKl,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;(0,jf.H)(a,"reverse");const i=a.shape.length,o=A.D5U.parseAxisParam(s,a.shape);if(0===i)return(0,Jf.y)({inputs:{x:a},backend:n});const u=new A.YDk(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Ub={kernelName:A.b9H,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=A.D5U.getTypedArrayFromDType(r.dtype,A.D5U.sizeFromShape(r.shape)),[l,c,p,h]=r.shape,[d,f]=A.Wap.getImageCenter(i,c,p),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*p*c*h;for(let e=0;e<c;e++){const n=e*(p*h);for(let r=0;r<p;r++){const a=r*h;for(let i=0;i<h;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<p&&v>=0&&v<c&&(k=y[t+v*(p*h)+w*h+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Pb=(0,Kf.A)(A.e07,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Vb={kernelName:A.e07,backendName:"cpu",kernelFunc:Pb};var Hb=n(7742);function Gb(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],p=e.values,h=t.values;if(0===r)return(0,A.f3b)(n,t.dtype);const d=(0,A.f3b)(c,t.dtype);d.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=p[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?d.values[u*a+n]+=h[e*a+n]:d.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return d}const jb={kernelName:A.xQA,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:p}=A.Wap.calculateShapes(s,a,i),h=Gb(n.bufferSync(a),n.bufferSync(s),i,p,l,u,o,c,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},qb={kernelName:A.PhF,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;(0,jf.H)([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=(0,A.x8V)(a.dtype,s.dtype),p=A.D5U.makeZerosTypedArray(A.D5U.sizeFromShape(a.shape),c);let h=0;const d=0===i||i>1||1===a.shape.length?1:A.D5U.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?p[h++]=u[e]:p[h++]=l[e];return n.makeTensorInfo(a.shape,c,p)}},Xb=A.Wap.SELU_SCALEALPHA,Kb=A.Wap.SELU_SCALE,Qb=(0,Kf.A)(A.oFR,(e=>e>=0?Kb*e:Xb*(Math.exp(e)-1))),Yb={kernelName:A.oFR,backendName:"cpu",kernelFunc:Qb},Jb=(0,Kf.A)(A.i5y,(e=>e<0?-1:e>0?1:0)),Zb={kernelName:A.i5y,backendName:"cpu",kernelFunc:Jb},ex=(0,Kf.A)(A.RQH,(e=>Math.sin(e))),tx={kernelName:A.RQH,backendName:"cpu",kernelFunc:ex},nx=(0,Kf.A)(A.wYB,(e=>Math.sinh(e))),rx={kernelName:A.wYB,backendName:"cpu",kernelFunc:nx},ax=Math.log(1.1920928955078125e-7)+2,sx=(0,Kf.A)(A.MRv,(e=>{const t=e>-ax,n=e<ax,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),ix={kernelName:A.MRv,backendName:"cpu",kernelFunc:sx},ox={kernelName:A.TQc,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;(0,jf.H)([a],"spaceToBatchND");const o=A.D5U.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=Cb.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=A.Wap.getReshaped(l.shape,s,o,!1),p=A.Wap.getPermuted(c.length,s.length,!1),h=A.Wap.getReshapedPermuted(l.shape,s,o,!1),d=dm({inputs:{x:l},backend:n,attrs:{shape:c}}),f={x:d},m={perm:p},g=(0,Sm.p)({inputs:f,backend:n,attrs:m}),y=dm({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(g),y}};var ux=n(2123);const lx={kernelName:A.O3z,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[p,h,d,f,m]=(0,ux.c)(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,p),n.makeTensorInfo([h[0]],a.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};var cx=n(3849);const px={kernelName:A.nhH,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,p]=(0,cx.U)(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([p.length],s.dtype,new Int32Array(p))]}};var hx=n(3989);const dx={kernelName:A.w3H,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=(0,hx.V)(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},fx={kernelName:A.ZjV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=(0,hx.V)(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},mx={kernelName:A.D2d,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:p,outputSize:h}=A.Wap.calculateShapes(s,a,o),d=Gb(n.bufferSync(a),n.bufferSync(s),o,h,c,l,u,p,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},gx={kernelName:A.L8s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=A.D5U.parseAxisParam(i,a.shape)[0],u=A.Wap.prepareSplitSize(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=(0,Km.tP)({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},yx=(0,Kf.A)(A.FKq,(e=>Math.sqrt(e))),bx={kernelName:A.FKq,backendName:"cpu",kernelFunc:yx},xx={kernelName:A.bK0,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;(0,jf.H)(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}};var wx=n(212);const vx=(0,Kf.A)(A.h8e,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),kx={kernelName:A.h8e,backendName:"cpu",kernelFunc:vx};var Ix=n(2210);const Sx={kernelName:A.jQk,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:p,shrinkAxisMask:h}=r;(0,jf.H)(a,"stridedSlice");const{nonStrided:d,$begin:f,$strides:m,size:g,newShape:y,outShape:b}=A.kuN.sliceInfo(a.shape,s,i,o,u,l,c,p,h),x=dm({inputs:{x:a},backend:n,attrs:{shape:y}});let w;if(d){const e=(0,Km.tP)({inputs:{x},backend:n,attrs:{begin:f,size:g}});w=dm({inputs:{x:e},backend:n,attrs:{shape:b}}),n.disposeIntermediateTensorInfo(e)}else if(b.some((e=>0===e)))w=n.makeTensorInfo(b,a.dtype,[]);else{const e=n.bufferSync(x),t=(0,Ix.t)(b,e,m,f);w=n.makeTensorInfo(t.shape,t.dtype,t.values)}const v=dm({inputs:{x:w},backend:n,attrs:{shape:b}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(w),v}};var Nx=n(6841);const Tx={kernelName:A._JP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:p}=t,h=n.data.get(c.dataId).values,d=n.data.get(p.dataId).values,[f,m]=(0,Nx.A)(h,d,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(p.shape,"int32",m)]}};var Cx=n(8639);const $x={kernelName:A.s1s,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,p]=(0,Cx.Q)(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(p))]}};var Ax=n(6626);const Ex={kernelName:A.XkS,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.data.get(s.dataId).values,o=(0,Ax.h)(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},_x=(0,Kf.A)(A.sEM,(e=>Math.tan(e))),Dx={kernelName:A.sEM,backendName:"cpu",kernelFunc:_x},Rx=(0,Kf.A)(A.MIZ,(e=>Math.tanh(e))),Fx={kernelName:A.MIZ,backendName:"cpu",kernelFunc:Rx};var Ox=n(7723);const Mx={kernelName:A.n9L,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;(0,jf.H)(a,"tile");const i=(0,Ox.R)(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};var zx=n(9556);const Bx={kernelName:A.cWu,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;(0,jf.H)(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=(0,zx.W)(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},Lx={kernelName:A.wx7,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,p,h,d]=a.shape,[f,m]=null!=l?l:[p,h],g=[c,f,m,d],y=A.D5U.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],v=A.D5U.getTypedArrayFromDType(a.dtype,A.D5U.sizeFromShape(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<d;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=Wx(c,h,o),m=Wx(d,p,o);switch(i){case"nearest":s=Px(k,p,h,b,x,w,e,m,f,a,u);break;case"bilinear":s=Vx(k,p,h,b,x,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+r*w+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function Wx(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return A.D5U.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return A.D5U.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return A.D5U.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Ux(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function Px(e,t,n,r,a,s,i,o,u,l,c){return Ux(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function Vx(e,t,n,r,a,s,i,o,u,l,c){const p=Math.floor(o),h=Math.floor(u),d=p+1,f=h+1;return(d-o)*((f-u)*Ux(e,t,n,r,a,s,i,p,h,l,c)+(u-h)*Ux(e,t,n,r,a,s,i,p,f,l,c))+(o-p)*((f-u)*Ux(e,t,n,r,a,s,i,d,h,l,c)+(u-h)*Ux(e,t,n,r,a,s,i,d,f,l,c))}var Hx=n(5638);const Gx={kernelName:A.kpP,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;(0,jf.H)(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=(0,Hx.S)(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},jx={kernelName:A.ToN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),p=a.shape.slice();p[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){c[s]=e;const t=(0,Km.tP)({inputs:{x:a},backend:n,attrs:{begin:c,size:p}});h[e]=dm({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},qx={kernelName:A.Qvg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;(0,jf.H)(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=Qg({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=A.D5U.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=(0,Wg.Dg)({inputs:{a:r,b:c},backend:n}),i=(0,Zm.p)({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=(0,Fg.Jp)({inputs:{a:i,b:a},backend:n}),p=Mg({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(p),u.push(r),u.push(s),u.push(i),u.push(l),u.push(p)}const p=Nb({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Xx=[ym,bm.fC,wm,km,hm.j4,Im,Nm,Tm,Cm,$m,Em,Dm,Fm,Bm,Wm,Hm,Gm,jm,qm,gm,Xm,Qm,Jm,Zm.M,eg.y2,ng,rg.z,ag,cg,dg,fg,hg,gg,yg,mg,xg,vg,kg,Ig,Sg,Ng,Cg,$g,Ag,Eg,_g,Rg,Dg,ty,Bg,Yf,Lg,Wg.Kx,Xg,Kg.SX,Yg,Jg.Vu,iy,uy,ly,cy.Ao,dy,fy,my,yy,xy,wy.Ce,vy.V,Jf.I,ky,og,Sy,Ty,$y,em,Ay.zh,Ey.m3,Dy,Ry.xM,Oy,By,Wy,Vy,Hy,Gy,Qy.eJ,Yy,Jy,Zy,eb,tb,Ky,nb,rb,ab.u0,sb,ub,hb,Fg.f$,db.AF,mb,yb,xb,wb.nP,vb,Sb,Tb,Cb,Eb,am,_b.Iz,Rb,ug.O,Ob,im,um,fm,Mb,zb,Bb,Lb,Wb,Ub,Vb,Hb.FY,jb,qb,Yb,cm,Zb,tx,rx,Km.C6,pb,ix,ox,lx,px,dx,fx,mx,gx,bx,xx,wx.MS,kx,Sx,Tx,$x,Ex,ny.GR,zg,Dx,Fx,Mx,Bx,Sm.b,Lx,Gx,jx,qx,Ib];for(const e of Xx)(0,A.wCN)(e);var Kx=n(6920);const Qx={"tfjs-core":A.jTM,"tfjs-backend-cpu":"3.8.0","tfjs-backend-webgl":Kx.version_webgl,"tfjs-data":Gf,"tfjs-layers":Co,"tfjs-converter":Md,tfjs:"3.8.0"}},3720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),p=parseInt(e.substring(i,i+u),n);if(u<8){var h=o(l(n,u));s=s.mul(h).add(o(p))}else s=(s=s.mul(a)).add(o(p))}return s.unsigned=t,s}function p(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=p;var h=4294967296,d=h*h,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return 1==(1&this.low)},S.isEven=function(){return 0==(1&this.low)},S.equals=function(e){return r(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,h=0,d=0,f=0;return d+=(f+=s+(65535&e.low))>>>16,h+=(d+=a+l)>>>16,c+=(h+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=p(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=p(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=s*d)>>>16,b&=65535,y+=(b+=i*h)>>>16,f+=(y+=a*d)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+a*h+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=p(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),h=o(n),d=h.mul(e);d.isNegative()||d.gt(a);)d=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),a=a.sub(d)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=p(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=p(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=p(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=p(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},6377:(e,t,n)=>{var r=n(4832),a=n(8652),s=n(801),i=n(2030),o=n(3618),u=n(9049),l=n(1971);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},4832:function(e,t,n){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},9049:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},8652:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},3618:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},2030:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},1971:(e,t,n)=>{var r;!function(a,s){var i,o=(0,eval)("this"),u=256,l=s.pow(u,6),c=s.pow(2,52),p=2*c,h=255;function d(e,t,n){var r=[],h=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=p;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function y(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=d,y(s.random(),a),e.exports){e.exports=d;try{i=n(5042)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},4639:(e,t)=>{"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.getBrowserType=t.BrowserType=void 0,function(e){e[e.MSIE=0]="MSIE",e[e.EDGE=1]="EDGE",e[e.CHROME=2]="CHROME",e[e.SAFARI=3]="SAFARI",e[e.FIREFOX=4]="FIREFOX",e[e.OPERA=5]="OPERA",e[e.OTHER=6]="OTHER"}(n=t.BrowserType||(t.BrowserType={})),t.getBrowserType=()=>{var e=window.navigator.userAgent.toLowerCase();return-1!==e.indexOf("msie")||-1!==e.indexOf("trident")?n.MSIE:-1!==e.indexOf("edge")?n.EDGE:-1!==e.indexOf("chrome")?n.CHROME:-1!==e.indexOf("safari")?n.SAFARI:-1!==e.indexOf("firefox")?n.FIREFOX:-1!==e.indexOf("opera")?n.OPERA:n.OTHER}},3970:(e,t)=>{"use strict";var n,r;Object.defineProperty(t,"__esModule",{value:!0}),t.GoogleMeetSegmentationSmoothingType=t.GoogleMeetSegmentationFunctionType=t.WorkerResponse=t.WorkerCommand=void 0,t.WorkerCommand={INITIALIZE:"initialize",PREDICT:"predict"},t.WorkerResponse={INITIALIZED:"initialized",PREDICTED:"predicted"},(r=t.GoogleMeetSegmentationFunctionType||(t.GoogleMeetSegmentationFunctionType={}))[r.Segmentation=0]="Segmentation",r[r.xxx=1]="xxx",(n=t.GoogleMeetSegmentationSmoothingType||(t.GoogleMeetSegmentationSmoothingType={}))[n.GPU=0]="GPU",n[n.JS=1]="JS",n[n.WASM=2]="WASM",n[n.JS_CANVAS=3]="JS_CANVAS"},4982:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},i=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0});const o=n(3970),u=s(n(4490)),l=n(4639),c=n(2178),p=n(8593),h=self;let d;const f={},m={},g=new OffscreenCanvas(100,100),y=new OffscreenCanvas(100,100),b=new OffscreenCanvas(100,100);onmessage=e=>i(void 0,void 0,void 0,(function*(){if(e.data.message===o.WorkerCommand.INITIALIZE){const t=e.data.config;yield(e=>i(void 0,void 0,void 0,(function*(){if(console.log(e.browserType),e.useTFWasmBackend||e.browserType===l.BrowserType.SAFARI)console.log("use cpu backend, wasm doesnot support enough function"),n(2178),c.setWasmPath(e.wasmPath),yield u.setBackend("wasm");else{console.log("use webgl backend"),n(6920);try{yield u.setBackend("webgl")}catch(e){yield u.setBackend("cpu")}}})))(t),u.ready().then((()=>i(void 0,void 0,void 0,(function*(){u.env().set("WEBGL_CPU_FORWARD",!1),d=yield u.loadGraphModel(t.modelPath),console.log(d.inputs),console.log(d.inputNodes),console.log(d.outputs),console.log(d.outputNodes),h.postMessage({message:o.WorkerResponse.INITIALIZED})}))))}else if(e.data.message===o.WorkerCommand.PREDICT){const t=e.data.image,n=e.data.data,r=(e.data.config,e.data.params),a=e.data.uid;if(console.log("current backend[worker thread]:",u.getBackend()),n){let e;e=yield((e,t,n)=>i(void 0,void 0,void 0,(function*(){const t=new ImageData(e,n.originalWidth,n.originalHeight),r=n.smoothingS;let a=null,s=null;u.tidy((()=>{let e=u.browser.fromPixels(t),i=u.image.resizeBilinear(e,[n.processHeight,n.processWidth]);i=i.expandDims(0),i=u.cast(i,"float32"),i=i.div(255);let o=d.predict(i);o=o.squeeze(),o=o.softmax();let[l,c]=u.split(o,2,2);e=u.image.resizeBilinear(e,[n.jbfWidth,n.jbfHeight]),l=u.image.resizeBilinear(l,[n.jbfWidth,n.jbfHeight]);let p=e.mean(2).toFloat();l=l.squeeze(),p=p.mirrorPad([[r,r],[r,r]],"symmetric"),l=l.mirrorPad([[r,r],[r,r]],"symmetric"),l=l.squeeze(),l=u.cast(l.mul(255),"float32"),a=l.arraySync(),s=p.arraySync()}));const i=n.jbfWidth,o=n.jbfHeight,l=`${n.smoothingR}`;if(!f[l]){const e=1/Math.sqrt(2*Math.PI*(n.smoothingR*n.smoothingR));f[l]=Array.from(new Array(256)).map(((t,n)=>Math.exp(n*n*-1*e)))}const c=`${i}x${o}`;m[c]&&!1!==n.staticMemory||(m[c]=Array.from(new Array(o),(()=>new Array(i).fill(0))));const p=f[l],h=m[c];for(let e=r;e<r+o;e++)for(let t=r;t<r+i;t++){const n=s[e][t];let i=0,o=0;for(let u=0;u<2*r+1;u++)for(let l=0;l<2*r+1;l++){const c=p[Math.floor(Math.abs(s[e-r+u][t-r+l]-n))];i+=c,o+=a[e-r+u][t-r+l]*c}h[e-r][t-r]=o/i}return h})))(n,0,r),h.postMessage({message:o.WorkerResponse.PREDICTED,uid:a,prediction:e})}else{let e;e=yield((e,t,n)=>i(void 0,void 0,void 0,(function*(){const t=new OffscreenCanvas(n.processWidth,n.processHeight),r=t.getContext("2d");r.drawImage(e,0,0,t.width,t.height);const a=r.getImageData(0,0,t.width,t.height),s=n.smoothingS;let i=null,o=null;u.tidy((()=>{let e=u.browser.fromPixels(a).expandDims(0);e=u.cast(e,"float32"),e=e.div(255);let t=d.predict(e);t=t.squeeze(),t=t.softmax();let[n,r]=u.split(t,2,2);n=n.squeeze(),i=n.arraySync()}));const l=n.jbfWidth,c=n.jbfHeight;p.drawArrayToCanvas(i,g),y.width=l,y.height=c;const h=y.getContext("2d");h.drawImage(g,0,0,l,c);const m=h.getImageData(0,0,l,c);i=p.imageToGrayScaleArray(m),i=p.padSymmetricImage(i,s,s,s,s),b.width=l,b.height=c;const x=y.getContext("2d");x.drawImage(e,0,0,l,c);const w=x.getImageData(0,0,l,c);o=p.imageToGrayScaleArray(w),o=p.padSymmetricImage(o,s,s,s,s);const v=`${n.smoothingR}`;if(!f[v]){const e=1/Math.sqrt(2*Math.PI*(n.smoothingR*n.smoothingR));f[v]=Array.from(new Array(256)).map(((t,n)=>Math.exp(n*n*-1*e)))}const k=f[`${n.smoothingR}`],I=Array.from(new Array(c),(()=>new Array(l).fill(0)));for(let e=s;e<s+c;e++)for(let t=s;t<s+l;t++){const n=o[e][t];let r=0,a=0;for(let u=0;u<2*s+1;u++)for(let l=0;l<2*s+1;l++){const c=k[Math.floor(Math.abs(o[e-s+u][t-s+l]-n))];r+=c,a+=i[e-s+u][t-s+l]*c}I[e-s][t-s]=a/r}return I})))(t,0,r),h.postMessage({message:o.WorkerResponse.PREDICTED,uid:a,prediction:e})}}}))},8593:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.imageToGrayScaleArray=t.drawArrayToCanvas=t.padSymmetricImage=void 0,t.padSymmetricImage=(e,t,n,r,a)=>{const s=e.length,i=e[0].length,o=s+t+n,u=i+r+a,l=Array.from(new Array(o)).map(((e,t)=>Array.from(new Array(u)).map(((e,t)=>-1))));for(let a=r;a<r+i;a++){for(let n=0;n<t;n++){const i=(t-n-1)%s;l[n][a]=e[i][a-r]}for(let n=t;n<t+s;n++)l[n][a]=e[n-t][a-r];for(let i=t+s;i<t+s+n;i++){const n=s-(i-(t+s))%s-1;l[i][a]=e[n][a-r]}}for(let e=0;e<s+t+n;e++){for(let t=0;t<r;t++){const n=(r-t-1)%i;l[e][t]=l[e][n+r]}for(let t=r+i;t<r+i+a;t++){const n=i-(t-(r+i))%i-1;l[e][t]=l[e][n+r]}}return l},t.drawArrayToCanvas=(e,t)=>{const n=e.length,r=e[0].length;t.width=r,t.height=n;const a=t.getContext("2d"),s=a.getImageData(0,0,r,n).data;for(let t=0;t<n;t++)for(let n=0;n<r;n++){const a=4*(t*r+n);s[a+0]=255*e[t][n],s[a+1]=255*e[t][n],s[a+2]=255*e[t][n],s[a+3]=255}const i=new ImageData(s,r,n);a.putImageData(i,0,0)},t.imageToGrayScaleArray=e=>{const t=e.width,n=e.height,r=e.data,a=Array.from(new Array(n)).map(((e,n)=>Array.from(new Array(t)).map(((e,t)=>-1))));for(let e=0;e<n;e++)for(let n=0;n<t;n++){const s=4*(e*t+n);a[e][n]=(r[s+0]+r[s+1]+r[s+2])/3}return a}},914:()=>{},7256:()=>{},8158:()=>{},2980:()=>{},4862:()=>{},7958:()=>{},5410:()=>{},8628:()=>{},5778:()=>{},1601:()=>{},7792:()=>{},5042:()=>{}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}return n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(4982)})()}));